%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Fig2.pdf
%%Creator: (Adobe Acrobat 17.12.0)
%%For: niema
%%CreationDate: 11/13/17, 12:06 PM
%%BoundingBox: -1 0 449 173
%%HiResBoundingBox: 0 0 448.2310 172.8000
%%CropBox: 0 0 448.2310 172.8000
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 985 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2017-11-13T19:34:22Z"
   xmp:CreatorTool="TeX"
   xmp:ModifyDate="2017-11-13T11:55:24-08:00"
   xmp:MetadataDate="2017-11-13T11:55:24-08:00"
   pdfx:PTEX.Fullbanner="This is pdfTeX, Version 3.14159265-2.6-1.40.17 (TeX Live 2016/Debian) kpathsea version 6.2.2"
   pdf:Producer="pdfTeX-1.40.17"
   pdf:Trapped="False"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:8622e688-6989-9d4b-b3b3-2d8f53bbcd2f"
   xmpMM:InstanceID="uuid:cd47b4c9-b3c3-a64e-b195-65e7c16472c7"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -172.8 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 172.8 li
448.231 172.8 li
448.231 0 li
cp
clp
gsave
-.337967 173.74 mo
448.662 173.74 li
448.662 -.260079 li
-.337967 -.260079 li
-.337967 173.74 li
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: TDAAAA+CMR9 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TDAAAA+CMR9 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR9.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 34 /quotedblright putdup 35 /numbersign putdup 47 /slash putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 54 /six putdup 55 /seven putdup 57 /nine putdup 58 /colon putdup 92 /quotedblleft putdup 97 /a putdup 101 /e putdup 103 /g putdup 105 /i putdup 109 /m putdup 110 /n putdup 112 /p putdup 124 /emdash putdef/FontBBox {-39 -250 1036 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [74] def/StemSnapH [25 31] def/StemSnapV [74 90] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings22 dict dup begin/quotedblright <1C60D8A8C9B7BA8F1AFAD9D49AE3491FFC00B32DC1D96EDCE59AE06D1775FEBE6466C6EBE4FB675A4265D6F7C9FFF78C050F06FDB093EC5727DD53E17A3143B50AC8688B5A3DE6619B019C443DB65842645296B31D02BE352C2456380638D23E70751DEA186B52B0BCB90EF9A791D8750DCF8D02F6D1DF752CE8435546905A09A922A7AFDF057CEBCC61A8DFADE8D8951ABD15F761AA5C3C6B63> |-/numbersign <1C60D8A8C9B68D92177671961A38085D6D477125644923FEC9225027A418A051DB5FAFC5BDAE4B598B9FE18B460227142162FFD669BD4DB0BD695B5B9B683DAA57A1BEDC5160CF4F245F3C8C53707E3C7A6BA7A0C65DDA1429BC931F47036E1272C4266994B480CDB2ACF289AD100AA06EE3F5FF74389BB4D9126194620F95380BB1858A5DF37F4F3A87FCF403215531F2A50A713DD524156CDC5F030A38E67F70DCE889BBC50014276C0BD96E48C299813E85859FD94A008A09542AC75087FA60109909A261AF46D52EC360139F5BC5E57B853EAF54BF6766665B66242EA3F0DF457A7384B925BEB6> |-/slash <1C60D8A8C9B7BA8F19969C1961F47C42EAC72060DE13F97DFE11F98EF9FFA2AEB264A975A9CEBDF190147AABDF15AB45E30ABF32D90B6DD26E74CDF47D61A48F346AC20E17AA> |-/zero <1C60D8A8C9B7BA8F971604CAC732AE24ADAC19C8C5A90DD23D1BF52553C739838C4ED5FCBB53AC9E3CB552D6DFF53A9EEB0F8FC1FAF9C71F8F33C28E064829657E087C3DFC194956CAA233DC06433CC0AF7783A68C09EF87C793093B9B7BA2387614ABF923369233054F5AF445046CFAF4103E70AC6251DB7AFA716E173991EA2BBF029B17ABD79C07C75125B419E97B31086882C7> |-/one <1C60D8A8C9B7BA8F69303CD9C80FF2274973BC03A8D3870059513959825C131C762E439E0B57593BF233868669CAB4BBAEDD6C9305EFDD005B0808D21D94B0A8D020D637371831C289D32EE57BD345D33A2ED31633AC6FA562EF5C81F66955BF85FFB89E05AAA766678E050D> |-/two <1C60D8A8C9B7BA8F6941F30AC722B4BE952B752CC0FA1B292EEB0B979A69A174A00D5D8EABCF96E9D60C6B291088F905431E0E6A97215971D5F1774467B4043AD60E680BCA71F28CDAFF70DAA0C7008EF43B0FDF8A9FF97C16983915CE563AC3E3E315F91BFAF2CB8C7454AB0D8D3919A49001A33181F8384FBB5BB9A9D1DEB7140E088434> |-/three <1C60D8A8C9B7BA8F9715360A1AA4C5A06340754B31F41297D3DF910E1FCC69E67F950D4FBFED2B82C18BFC4D5E23FF3C514CCEBBBED75BBCDAB76F234B4DBD5781012DD44023966120A495BDCBEA08089E5CF58A7F3919922BDA56B0E01A3104C1334394BEE8121F5FDD6A63FBC50EDB7AF3187F4CAB2DB938F8D95A6E86E71FFAB1F1D436537C94F7CE54890F0E19A6ABA7A55D8DDA4F4DF8F80D81F08CA050940E171DE6DCB0C68136A64867E019A3087BD5CAFD15C4DB8E5BB890924BFB22FAB128ACA0C1642C760EB7FF29BAC225D58C72625A5057B1748B735D9DC2D960B3D8D386DFF2E92C99> |-/four <1C60D8A8C9B7BA8F69303CD6A537609580AFB49D3EF69F6DF7F7E08C6FAE9A1AD370F7CF1BFBFD88B645E42E5C01C7A4B82937DD8D5CDE4ACEA4E8D39677AF0ACB578CE6CFFF6C4C96F0065F034E8A140B5CEB51D228E3388D62D060388B06E8731F233299F36F85D72832DCD2899F7D01EFC0C01073C0D80FCEFC14B64A10E11BAF> |-/six <1C60D8A8C9B7BA8F971536124587364D9AA518EB7F4E85B232FA48C0B1EA51DA35886185EAD698F423D2D6F66B57D5BECA67042D246E80072DDE3FA7BCB6BB5C76E03E6DAE4DC729198FCBF424861907F54697E4ACA1EA86D056F3B19806C5F6BE27F1A7F24498F87674D8761B010C3EF8C73BC635631FB341477B5CF539BFA5C4F4AE9F7AE76615E1A00B96DAAF012590772900D598D90C8E76E8DFCD2AA974CBCA8CE3AE9B37317CAA6F737BE1A45A7C44E2DEBDCA95B84D2DF44A9CA24C7C53AE53091BB2B54DE29E73464CE6256A3A80E2E60C6CD14F3C> |-/seven <1C60D8A8C9B7BA8F9712CA8A7A078B230C1C7DF19166E9345606E96CC3A525C130672FD17D40714B8059A493B9536C911B9C9BB76F8B0AB2A7F22E95A134F03E0C8D495797DEF80916A75B8C4F3BEB85477121BC7CDD2E99FC0EF1DA0606BE1F76CC5F4FC721C27EC07421> |-/nine <1C60D8A8C9B7BA8F9715365CEC6EA264378E42199D554A8C1D67D9FBD22858EA3A90AE81F33721F49DA5E31D07CDCCDA65630516AC0F3BC7C53581639D11069C736CE33BB3B4ABC7BC5D9961EF26578C6F636299AA094D0E5959EE9E5B1A8DE33C1AE1859D70B8AE54946DAB40EB31DDF085E3C0E501808BE7EB945B98513E4711AB94946EF7C2E9E0FA0953F1E73B8B666DEA1C372A00858C7A4C152A03FB10EDD2122B7D9E8FC54590D8753D925B91A26CD32EC4FBE3E9EE97C54DDF154C5BC77A9BB7CB8ADD51335BD24C39B4C6DE027DE8> |-/colon <1C60D8A8C9B84FD8F928A1C6ABFBE3E9BAA1E0BDAB2E445D3DDD1E336E0D5D7178DBC96296AF9B725ADC92E5641D276D61EE372C317597DB9FA1B9B43A26A2455662DA480A55C2EF> |-/quotedblleft <1C60D8A8C9B7BA8F1AFBB0605BC72214B153349A09788EE88FCE56DAE41A2A22FA086E169C30222EA0D4DF814A4CEF2B210835F8FDE5C5DFD479D71D5413B7974389D43288ED238D300435FB4F3D6EBBDADB778D60B773B0BE3EF4F40993636CB4D87C91FA3D8A3FBA193C4121AE9B562A6A43868EF63BB83324A33D4880CE03CEA61793ED352515791A93BCB9639FAC83AC5952673C52A5BBA3> |-/a <1C60D8A8C9B7BA8F6750D70643DC4481699B3DFB7BC9A55462BF2D50FE54414586F15CAEB34A8A6789A3395FF668FBA6FE48234CF5834D258E26B16BB698026F67725DC88F06A5102723A1B616D8F160B6C491939AA7DD53D31E14A0A1AAF0C1EEF0C034D021C30C89E9E3319941F9F8286AD316B338798E470570536B5FF804B4B7C8E157305321F3D2E408BA1B641515AB866C26171238C8C28689BF01D7C2080310709EEDB173953D43D398E90A12DB92BB2CB51F8F55F850A54C5FD6D4E6B668B3949F133628F69247> |-/e <1C60D8A8C9B772793756C468560B531AB2CB7DCA9C5293A71D9BBB83D795871E145A7FF3009438D79C620932F90DC509550363CF7A485A34A12F12416213CDB3C4E853D7EB434B1E702C3DC229B2FA816404CFC6574E4A0C71BFB8C54E66E8EA9D8AE35738BB38CEA12C36343ADE58D72D5B3B460D> |-/g <1C60D8A8C9B7BA8F197A0EB588583A07666A378BAE55889070AA5B507C01CE03E4B1EAA480202E45A4B7D5CD6008B6C42C33F65E0617AA94B8ADD2A97FD8E56DF38886484291B0B99F44665BBCB65ACA11C7452EC3BDD30C841FEF01120A16118800FA8DE7F21DDBD8A1D9A0AE2D31EB1C7D1B3889320C691CAB80D7DA60D67502821AD37C7EBA212A949B3B6C58AF5A9E67877A33B843963D9F44B39C54D0E474D24CA0DB41DAA478FCE0D23A21AE1E907D272FE4203B849ED962C2760848CB12CCA878EE4B776C83892F2D4C21083A7D72E72937766AEF3F0DA693C3850CD363C72C1C62ED78751709CA822BF78B56FADF> |-/i <1C60D8A8C9B84FD8F975B6D07DFA8CE1F8D98C178289142CD8FC532014D5C1329291DD819142560B4166A958BFA7E9819DFBF6D774A687D5CDADD65771F169E0E5ECC2B51905096AEBA39F0F5B6DD46E85E74F1B1C6EA73809A71893DDF57A4BB3826EBF0A75154FFF53D59B60A70476FA3042D877337ABE14E75DE559A4BEF376E1BEFC6324020B7F50472BE92E> |-/m <1C60D8A8C9B68D921B5E3418F557BEB410A5FFBF38721E72C751B6D3F1D488CA53B9C09D31AA9F85FE759F6AE4117D291FD81628A7A18A33C0A8E29E7DB4F961E81C76EA1B97B16C151AB0CC155C5C10CA1ACD3496D561D2912B8DC97BD3822180C3B1D40E8FD97120837BEB5440748772B686D4E1AE34A09528D93AB22941A60905547AF521D8D3FC7FBF2F6D0FC7AFA20C10A6739877A6FAC2CCB0B0AECF661A7C78E67CD2610EDE6A7BFA67C41862D30402DB17D247C03F851AD70D3C4EEC0BEB3695966DAE22DD1B76FB6BBFCA960458BDA2698B02794CEF6DEF83B1ECD2ABA2989BB54AC7A0F602D68380AE7E7D0F044BD3FDA534251E64DABBC38C24980EBD1541F63981D4AE6B987A8C73183034523127DF418BFAD23339D5CFAC97602C911929C7AC7810372FE5888E5A11280E1D35> |-/n <1C60D8A8C9B7E1F898BF26914C5F36A6B2CBB0C4A6980381FA5C3A6BC1DF9BE4AF27B0B5BAB63F82A68A3505E21652ABB82D32F5E7E0AA777397756723B370EEC20FE5736345DA339C86D0CBE09FE76A56C204DE93DBFDF5B198CA6BA0712312CDB6EF18A82C19006F44A8E2CEB252072C310AAD8B4DAB3A86A2193AB352EAE026D35C8D999DF41D288AF585A8397143B8ED524921BF6FA0D76017824DDF9E22990C5DB6099F895AD4E084B0D0B88C5435FBFCA38039A7B9AFE30BAE3572FCC2456EC06FDB939EFE0A1DE3E5652846E2BE179B655E21> |-/p <1C60D8A8C9B7E1F893A967A6DB2D795BDFE9A46DAE43612A3AC38EDE6F3BC6AFF386996EFF92D22AA28420D51621294DA85E93A411D013D5B8D5EF00CB21D027E2337FDC8D61F9F2FE64A8B29E70EC12573557523339EC0203E8990F491C15CEB1D14E71099965FF70813237BCC31181A5246FE8F92A5FFEEB32518A4B9FD634CC62982051F493E5F605A91729079B643AFD7B2E7C3D772C9F8D1ABC45AEB538E1D5E4203A4D9CA1729833BB854C7FCFB3A0D295C8306F> |-/emdash <1C60D8A8C9B50556B1CC2DA77D5618E9C87643786E833E3EBD9A19CCAE5A> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBURU+CMR9 /TDAAAA+CMR9 findfont ct_VMDictPut/YRBURU+CMR9*1 [34{/.notdef}rp /quotedblright /numbersign 11{/.notdef}rp /slash /zero /one /two /three /four /.notdef /six /seven /.notdef /nine /colon 33{/.notdef}rp /quotedblleft 4{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n /.notdef /p 11{/.notdef}rp /emdash 131{/.notdef}rp]YRBURU+CMR9 nfYRBURU+CMR9*1 [8.9664 0 0 -8.9664 0 0 ]msf120.038 -84.865 mo(\\main"|2017/11/13|19:34|page6|#6)[4.60783 7.67979 4.60782 2.56 5.11978 9.21658 13.8244 4.60785 4.60782 4.60785 4.60785 4.60785 4.60782 4.60785 4.60785 4.60782 9.20761 13.8244 4.60782 4.60785 2.55997 4.60785 9.21655 13.8244 5.11981 4.60785 4.60785 8.70813 9.21658 13.8155 7.67978 0 ]xsh%ADOBeginSubsetFont: FAAAAA+LCIRCLE10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FAAAAA+LCIRCLE10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name LCIRCLE10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 105 /a105 putdef/FontBBox {-2000 -2000 2040 2040} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/StdHW [40] def/StdVW [40] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/a105 <1C60D8A8C9B5EE3106F69024B980EEE1EC0D7515B15DDF47AF23D99D035B8BB0C15DE9C468B3327220F7055539F467E35AA3DAA5B291046F24CC262C72AEEC7B9EE64B189A45E08618F488C2330D65A085731C1A1677AD8EFB4A81FAA9C3F8E3C43E14014EE51676> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBURV+LCIRCLE10 /FAAAAA+LCIRCLE10 findfont ct_VMDictPut/YRBURV+LCIRCLE10*1 [105{/.notdef}rp /a105 150{/.notdef}rp]YRBURV+LCIRCLE10 nfYRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf-102.615 -76.895 mo(i)sh.398 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
-102.615 -71.913 mo
-102.615 -81.876 li
@
-107.597 -76.895 mo
-77.709 -76.895 li
@
YRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf-72.727 -106.783 mo(i)sh-77.709 -106.783 mo
-67.746 -106.783 li
@
-72.727 -81.876 mo
-72.727 -111.764 li
@
YRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf552.601 -76.895 mo(i)sh552.601 -71.913 mo
552.601 -81.876 li
@
527.694 -76.895 mo
557.582 -76.895 li
@
YRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf522.713 -106.783 mo(i)sh517.732 -106.783 mo
527.695 -106.783 li
@
522.713 -81.876 mo
522.713 -111.764 li
@
YRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf-102.615 705.745 mo(i)sh-102.615 710.726 mo
-102.615 700.763 li
@
-107.597 705.745 mo
-77.709 705.745 li
@
YRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf-72.727 735.633 mo(i)sh-77.709 735.633 mo
-67.746 735.633 li
@
-72.727 740.614 mo
-72.727 710.726 li
@
YRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf552.601 705.745 mo(i)sh552.601 710.726 mo
552.601 700.763 li
@
527.694 705.745 mo
557.582 705.745 li
@
YRBURV+LCIRCLE10*1 [9.9626 0 0 -9.9626 0 0 ]msf522.713 735.633 mo(i)sh517.732 735.633 mo
527.695 735.633 li
@
522.713 740.614 mo
522.713 710.726 li
@
.498 lw
-25.232 -12.055 mo
474.893 -12.055 li
@
%ADOBeginSubsetFont: EAAAAA+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /EAAAAA+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 54 /six putdef/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0FF8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B5DC520FCB2B0B7183A59B91F9C6B76BCB8A8CE135881FEEEB2BD853CC29FB7FDF436E095CF25C0CF3D1030E991D37D2BB2A05DD251695665BEB980DCF70EB0EFACB10E78F2D22C879E92110E4963EE6051EA84F4D334> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBURW+CMR10 /EAAAAA+CMR10 findfont ct_VMDictPut/YRBURW+CMR10*1 [54{/.notdef}rp /six 201{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 -14.794 mo(6)sh%ADOBeginSubsetFont: LAAAAA+CMR8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /LAAAAA+CMR8 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR8.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdup 66 /B putdup 67 /C putdup 69 /E putdup 71 /G putdup 73 /I putdup 76 /L putdup 77 /M putdup 79 /O putdup 83 /S putdup 84 /T putdup 89 /Y putdef/FontBBox {-36 -250 1070 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 0 431 446 665 675 683 704] def/OtherBlues [-205 -194] def/BlueScale 0.04379 def/StdHW [33] def/StdVW [76] def/StemSnapH [28 33] def/StemSnapV [76 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings13 dict dup begin/A <1C60D8A8C9B6CE042A9AE41131EAFA2F31741CF3EC73D841699673AF1F9E5A2A23E8A49D4F1BFDCB34195C2382F4F813AFB0D1B9C58D3DF6F1BC06E2ADE7598A64B8BCB582D1CA695398CF983AD2F9E5957C5091781771852BB9FABFBC1AC1A8537258999841593EFF6ECD9F2C2FB3A6D4C267C0E3DE5082F0F7E6EC10C4351AF31B4C4A440990084A30F3D4FA245118293712D80A14C75A60CB042BCEA2A4DEABC0F3482563CE1944E99A57CC10A916AD0F7766E959759D2E9ACAD5A6C598FF1BCCFF4AF7> |-/B <1C60D8A8C9B6E5992D583DE028A2F6575B9CF2A2BC61536DD7478D13CFA2C3C42157E7BB5C45A8571DDA887FBE32605C773D4C21D9D262E5B50F885F82BA3A1D9D8548CEC122A3F001209AD2771EC52D1D4A6D7A5852D9587CFF37A79180281BBC9B854839271E950621D7E87C98C51036D5A04EB405E3646ABB1CA22E2C1F156175B374C8044B55A154F153> |-/C <1C60D8A8C9B6F21DF6FE617E3DB59C3DC015EF12E5D412DE1AD82AC9B34A30F8D91E4DAA8FB2D1A9268CC71AA1F97E2A4536CB9B8AC2501C132D42A1A90D33674FBB0B549A751A3815AF40E7DE8C32BD62E0D95C262A9934B8E89DC47EBDAD2A04A620316353B32EDB44C18AC8D38E7DAF239FA87DBAEB88F39B5995C0C7301392180503C7B0> |-/E <1C60D8A8C9B6079F1E7AD77A8FE47234B0DE6BCDE2364141DF23ABE1E27910AE1803DB6B0C74F430B7FDB8C5D826A277DC3630F15F3FCC4402260146A527711CB539543CFFCB49D52DA6BB7068E11F7AAB2A388C36341A31DD6B2B6AC715058199BFA1DBF47CD9CD09386391E4C360C96AEF8C52A1E7FD0D89E173246DDB6F43735B> |-/G <1C60D8A8C9B6B41C3AC0F8A6CFD0EA0C6E0645B0F02A1B72089775F254D06AFF4A9082C914212EC8277AB6B3184BE2F8410EDF226ED09581DF60C5C383AA21763A0EC268A0BCD31393F2ACEA0FAA2215424F99CE20113D03EC5B09687F646F28AEC8FF867156B90E8AC024286BF4EC8AA2E8D9EDAD964BE454D5312CB56B07CDACFA030EEACDEF4A66D46920EE1494D63C33E6C3A35437A703BE6F9BB2905B12C0689045045AC20AA3290DF58842F6CB34544C038E2CE1D8A9824DA592CD438C429B9CDD409B98D6F64D> |-/I <1C60D8A8C9B73DBAA2706020A91CDEE962DC7B760779A00428CC9A9D6C090ED2B1EF5711DA02E304C9D05056DCCCA42AD131F5FD84EC6895476ABE53CAA128FD4FB84D8B33D544AC7071771C170905C9D1B35A78615C56EAC07635C7B0781D9D34ABA96B919033C84A517A3137503020BB67D1C817FA8EDEE2EDB2E7589AD3A71CC0AFB00E21388BA733C40EFBA5E7> |-/L <1C60D8A8C9B64A95655D28C35556490ECBB4CD59A1A6F03D64F87F89083FE47D3CB94563837F557C375F7715F469AF7D0D3626702EC00DAEA831564043F8CEF7A807799CCB7A444C1BB89CDF1B31C66C11D4CBD68B372AADA2226A0B14357E82E984D4C93A550A179D8515075C5F154B038327958F2A2F69> |-/M <1C60D8A8C9B5F2782FECA1105B41D6E28EC779688E8AD07B7C2B4A1F83DD1F52909BF0E529D982554A888249730ADC750416AA5B78BBB86EB362352B1F75E329854437BA2CE0D6AEC7BA43D15EE7AEAFAA9CD19DDFC9186FB9929FF42C2AEC6003548D8560834338AFA049297B4C515EAD42BD756AA4242DAECC84079AB5B4CB4DCDD8ED2472769C3D0546A275DA0737186E64D3F4FE41AF67FD5508A3A48EEA5369CEFB9DCDAB5A0FA1BC800D8DEADAD5D5AB57C5ED7196A41F3F76FC87F8C812F3C8E4D14278BDD8B133F34B3A53570C2AE2886B43D4BE7C7541EAFA1C27A7D2> |-/O <1C60D8A8C9B6AF049823E66ACED9C580AE0FFD08FD1BD8147BC352F45E0920A322324EC625E223788C7F3E0B452EE38F8BD74D2A50B7CAA8C8F46D8A6699A70FA04E526AA08B8F2EB3D71DCDBA643A5901AE933924C98589BC5D3630BB3179704A76BCABB8> |-/S <1C60D8A8C9B7CDD8432CD730264968C71FF57A8F96F0EEA4479A99F3454304C9917FEB0EC244E2CDBBD5A3DA2F7865544972DD22618B53337E4DD119B948274AAE57EB2BE86F8B6257FABBE64A7E34B7F494AB6D3A9F597D482DA6B4096EC10472A5464AD5873E6DF0804DB96FF12071F878ECA7F6E0A811E077932CB7C5415845CEE29EF4F02AAB72AFDECBC1E4D22023674B79DC16F0EC93A5E6B2A0256B8D81328883BC718AA26F0115C4C317C27D64B6D70EDE18E3764912C5FD333208> |-/T <1C60D8A8C9B6F21D0B7895110C6AF8E828DFD22ECF6A0B10449743075BFE9D6FA6E260A3C08546F7A1CAD389C0CD6CAC8D1F3A5A3BBF5B7FE896D98799E7FCE9A80DF22F5CB6B9A777E1AAC449356855D5B7A00DB202F9BC2435C518B5180A29714FD0A13ECF687C4CB09526C2CB29B9ECCA7837F2D2235F827CF495FF57622E5C9BFD4721A30049330358119CCB3B470C31C71BE0> |-/Y <1C60D8A8C9B6CE042A9AE41F8CB5724C96ADBA3291CAD163B4621350E12AACB0FD1DA92BA26BC007A1D0D5DC35A1E26D89D9F74014D9C298FB415E9578B0D9D6822A46E63C3DC5CA7278B73D9D50594FC1947E155FE190DBB583B94DAE7DEA494F3DC372BE1E7CB0D4F4415B7D76E122D8E94555E867D4F4EC7C756FA4FE95161B5F97C924CBF57A6E5B8DB6F84E2A661C1C0C02CDFA1376B7676C4F00963B598FA13E8265D12DEB8AECD26C7ED213783256AB0FDE25A199B3B210878481F55214CB98F35B36F907F8B1AE677C96F2C3546759E1CBAC9D5B106E3357A14306B341176571A72237E2> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBURX+CMR8 /LAAAAA+CMR8 findfont ct_VMDictPut/YRBURX+CMR8*1 [65{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 166{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf163.883 -14.794 mo(SYSTEMATICBIOLOGY)[4.70477 6.34265 4.70477 6.11621 5.75916 7.75409 5.6413 6.11621 3.04938 8.93762 5.99435 3.04935 6.58652 5.28897 6.58652 6.64304 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8574464AEAFBA1A0A0C2B3D037BE5A5239C78737658D239BCB61DC78D83A8F223F832> |-/L <1C60D8A8C9B66482C0AC2637AE818322843640782B4084B6BCB7EAC5B87BB576EB951099027BB2082BCC7485557848EF03B40B2EB92530435BB00C45D61522480C8796A82EF484C18DA82780A6A608D2AF86DBDD9D897934B97F7994CA6E17FD38486E39BD34B7586F9E2776CCA87540F517999D98A29B36F10CD04369FAA3B4> |-/O <1C60D8A8C9B6FC2D1A57C75D245B70BE97404F13CE569FC422D9D09438E71013F439099D7D1EDC655B119E118302674ABD7D84DACED31CA7555EFEA3863036A42A3B6E915F562C999DD49FE5D9B5063789DDDB66696771EDD533333BB57A5D6AC1A9E3> |-/V <1C60D8A8C9B6E3FADD48816EB8424E8F57A41D8613F7E968C9BB1B02E143FC779521473E85AC3FDDB70230FD5AC8A799CC105B900902F681C26F2CF5169E1D28FA4F6B0C7A570A1EAEDD1568F3815B4073CFD3901DA4DC138D832EA953776BC457AFDFF8491C649A0DB6870897DD41335AD9B9589634784946F43BCBBD7A4581826E0D3C585AA4EFCF9736D89BF657946580134CB715D83D4A12A5D3C2E565E9CF92286FED111732FC93E1CA96F815A6B51DE39654A3FF21> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 46 /period putdup 76 /L putdup 79 /O putdup 86 /V putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [46{/.notdef}rp /period 7{/.notdef}rp /six 21{/.notdef}rp /L 2{/.notdef}rp /O 6{/.notdef}rp /V 169{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf447.633 -14.794 mo(VOL.)[7.19299 7.7489 6.22662 0 ]xshgsave
-.226974 159.271 mo
199.817 159.271 li
199.817 -.87895 li
-.226974 -.87895 li
-.226974 159.271 li
clp
-.226974 159.271 mo
264.154 159.271 li
264.154 -.879136 li
-.226974 -.879136 li
-.226974 159.271 li
1 /0 /CSD get_res sepcs
0 sep
f
21.0571 136.4 mo
197.474 136.4 li
197.474 15.8956 li
21.0571 15.8956 li
21.0571 136.4 li
f
26.2457 136.4 mo
26.2457 138.771 li
1 /0 /CSD get_res sepcs
.85 sep
f
.3952 lw
1 lj
26.2457 136.4 mo
26.2457 138.771 li
@
22.6096 143.329 mo
23.5976 143.329 li
23.5976 143.63 li
22.6096 143.63 li
22.6096 143.329 li
f
25.1507 143.563 mo
25.1507 142.029 li
24.1667 143.563 li
25.1507 143.563 li
26.0004 144.539 mo
24.6884 144.539 li
24.6884 144.333 li
25.1507 144.333 li
25.1507 143.768 li
23.894 143.768 li
23.894 143.559 li
25.1547 141.606 li
25.538 141.606 li
25.538 143.563 li
26.0874 143.563 li
26.0874 143.768 li
25.538 143.768 li
25.538 144.333 li
26.0004 144.333 li
26.0004 144.539 li
f
26.6565 144.337 mo
26.7276 144.155 li
26.9133 144.08 li
27.0951 144.155 li
27.1702 144.337 li
27.0951 144.519 li
26.9133 144.59 li
26.7276 144.519 li
26.6565 144.337 li
f
28.7984 144.404 mo
28.996 144.404 29.1422 144.298 29.241 144.08 cv
29.3359 143.867 29.3873 143.539 29.3873 143.1 cv
29.3873 142.665 29.3359 142.337 29.241 142.12 cv
29.1422 141.907 28.996 141.796 28.7984 141.796 cv
28.6008 141.796 28.4506 141.907 28.3558 142.12 cv
28.257 142.337 28.2096 142.665 28.2096 143.1 cv
28.2096 143.539 28.257 143.867 28.3558 144.08 cv
28.4506 144.298 28.6008 144.404 28.7984 144.404 cv
28.7984 144.59 mo
28.4823 144.59 28.2372 144.46 28.0633 144.199 cv
27.8895 143.938 27.8025 143.574 27.8025 143.1 cv
27.8025 142.63 27.8895 142.262 28.0633 142.002 cv
28.2372 141.741 28.4823 141.606 28.7984 141.606 cv
29.1106 141.606 29.3556 141.741 29.5295 142.002 cv
29.7034 142.262 29.7943 142.63 29.7943 143.1 cv
29.7943 143.574 29.7034 143.938 29.5295 144.199 cv
29.3556 144.46 29.1106 144.59 28.7984 144.59 cv
f
36.6232 136.4 mo
36.6232 138.771 li
f
36.6232 136.4 mo
36.6232 138.771 li
@
47.0007 136.4 mo
47.0007 138.771 li
f
47.0007 136.4 mo
47.0007 138.771 li
@
57.3782 136.4 mo
57.3782 138.771 li
f
57.3782 136.4 mo
57.3782 138.771 li
@
67.7557 136.4 mo
67.7557 138.771 li
f
67.7557 136.4 mo
67.7557 138.771 li
@
64.1194 143.329 mo
65.1075 143.329 li
65.1075 143.63 li
64.1194 143.63 li
64.1194 143.329 li
f
65.6647 141.78 mo
65.8148 141.725 65.9571 141.681 66.0954 141.65 cv
66.2338 141.622 66.3642 141.606 66.4867 141.606 cv
66.7673 141.606 66.9886 141.67 67.1467 141.788 cv
67.3047 141.911 67.3838 142.081 67.3838 142.294 cv
67.3838 142.468 67.3285 142.614 67.2178 142.729 cv
67.1071 142.847 66.953 142.926 66.7554 142.966 cv
66.9925 143.001 67.1743 143.088 67.3047 143.227 cv
67.4352 143.365 67.5023 143.543 67.5023 143.76 cv
67.5023 144.029 67.4115 144.234 67.2297 144.377 cv
67.0479 144.519 66.791 144.59 66.4511 144.59 cv
66.3009 144.59 66.1508 144.574 66.0085 144.543 cv
65.8662 144.515 65.724 144.468 65.5817 144.4 cv
65.5817 143.839 li
65.799 143.839 li
65.8109 144.029 65.8741 144.167 65.9848 144.262 cv
66.0954 144.357 66.2535 144.404 66.459 144.404 cv
66.6566 144.404 66.8107 144.349 66.9254 144.234 cv
67.036 144.12 67.0953 143.962 67.0953 143.764 cv
67.0953 143.539 67.036 143.369 66.9174 143.25 cv
66.7989 143.136 66.629 143.076 66.4037 143.076 cv
66.2219 143.076 li
66.2219 142.879 li
66.3168 142.879 li
66.542 142.879 66.7119 142.835 66.8226 142.741 cv
66.9333 142.646 66.9925 142.507 66.9925 142.318 cv
66.9925 142.152 66.9451 142.021 66.8542 141.93 cv
66.7594 141.843 66.629 141.796 66.4551 141.796 cv
66.2812 141.796 66.1429 141.84 66.048 141.923 cv
65.9532 142.005 65.8978 142.128 65.882 142.286 cv
65.6647 142.286 li
65.6647 141.78 li
f
68.1663 144.337 mo
68.2374 144.155 li
68.4232 144.08 li
68.605 144.155 li
68.6801 144.337 li
68.605 144.519 li
68.4232 144.59 li
68.2374 144.519 li
68.1663 144.337 li
f
70.3082 144.404 mo
70.5058 144.404 70.6521 144.298 70.7509 144.08 cv
70.8457 143.867 70.8971 143.539 70.8971 143.1 cv
70.8971 142.665 70.8457 142.337 70.7509 142.12 cv
70.6521 141.907 70.5058 141.796 70.3082 141.796 cv
70.1107 141.796 69.9605 141.907 69.8656 142.12 cv
69.7668 142.337 69.7194 142.665 69.7194 143.1 cv
69.7194 143.539 69.7668 143.867 69.8656 144.08 cv
69.9605 144.298 70.1107 144.404 70.3082 144.404 cv
70.3082 144.59 mo
69.9921 144.59 69.7471 144.46 69.5732 144.199 cv
69.3993 143.938 69.3123 143.574 69.3123 143.1 cv
69.3123 142.63 69.3993 142.262 69.5732 142.002 cv
69.7471 141.741 69.9921 141.606 70.3082 141.606 cv
70.6205 141.606 70.8655 141.741 71.0394 142.002 cv
71.2133 142.262 71.3042 142.63 71.3042 143.1 cv
71.3042 143.574 71.2133 143.938 71.0394 144.199 cv
70.8655 144.46 70.6205 144.59 70.3082 144.59 cv
f
78.1332 136.4 mo
78.1332 138.771 li
f
78.1332 136.4 mo
78.1332 138.771 li
@
88.5107 136.4 mo
88.5107 138.771 li
f
88.5106 136.4 mo
88.5106 138.771 li
@
98.8881 136.4 mo
98.8881 138.771 li
f
98.8881 136.4 mo
98.8881 138.771 li
@
109.266 136.4 mo
109.266 138.771 li
f
109.266 136.4 mo
109.266 138.771 li
@
105.63 143.329 mo
106.618 143.329 li
106.618 143.63 li
105.63 143.63 li
105.63 143.329 li
f
107.297 142.345 mo
107.08 142.345 li
107.08 141.832 li
107.214 141.76 107.353 141.705 107.495 141.666 cv
107.633 141.626 107.772 141.606 107.906 141.606 cv
108.206 141.606 108.443 141.681 108.617 141.824 cv
108.791 141.97 108.878 142.168 108.878 142.417 cv
108.878 142.701 108.681 143.037 108.285 143.428 cv
108.218 143.495 li
107.491 144.223 li
108.692 144.223 li
108.692 143.867 li
108.918 143.867 li
108.918 144.539 li
107.06 144.539 li
107.06 144.329 li
107.934 143.456 li
108.123 143.266 108.262 143.088 108.345 142.926 cv
108.428 142.764 108.471 142.594 108.471 142.417 cv
108.471 142.223 108.42 142.073 108.317 141.962 cv
108.214 141.851 108.076 141.796 107.902 141.796 cv
107.716 141.796 107.574 141.843 107.475 141.934 cv
107.372 142.025 107.313 142.164 107.297 142.345 cv
f
109.677 144.337 mo
109.748 144.155 li
109.933 144.08 li
110.115 144.155 li
110.19 144.337 li
110.115 144.519 li
109.933 144.59 li
109.748 144.519 li
109.677 144.337 li
f
111.818 144.404 mo
112.016 144.404 112.162 144.298 112.261 144.08 cv
112.356 143.867 112.407 143.539 112.407 143.1 cv
112.407 142.665 112.356 142.337 112.261 142.12 cv
112.162 141.907 112.016 141.796 111.818 141.796 cv
111.621 141.796 111.471 141.907 111.376 142.12 cv
111.277 142.337 111.23 142.665 111.23 143.1 cv
111.23 143.539 111.277 143.867 111.376 144.08 cv
111.471 144.298 111.621 144.404 111.818 144.404 cv
111.818 144.59 mo
111.502 144.59 111.257 144.46 111.083 144.199 cv
110.91 143.938 110.823 143.574 110.823 143.1 cv
110.823 142.63 110.91 142.262 111.083 142.002 cv
111.257 141.741 111.502 141.606 111.818 141.606 cv
112.131 141.606 112.376 141.741 112.55 142.002 cv
112.723 142.262 112.814 142.63 112.814 143.1 cv
112.814 143.574 112.723 143.938 112.55 144.199 cv
112.376 144.46 112.131 144.59 111.818 144.59 cv
f
119.643 136.4 mo
119.643 138.771 li
f
119.643 136.4 mo
119.643 138.771 li
@
130.021 136.4 mo
130.021 138.771 li
f
130.021 136.4 mo
130.021 138.771 li
@
140.398 136.4 mo
140.398 138.771 li
f
140.398 136.4 mo
140.398 138.771 li
@
150.776 136.4 mo
150.776 138.771 li
f
150.776 136.4 mo
150.776 138.771 li
@
147.14 143.329 mo
148.128 143.329 li
148.128 143.63 li
147.14 143.63 li
147.14 143.329 li
f
148.863 144.539 mo
148.863 144.333 li
149.364 144.333 li
149.364 141.938 li
148.784 142.314 li
148.784 142.061 li
149.487 141.606 li
149.752 141.606 li
149.752 144.333 li
150.254 144.333 li
150.254 144.539 li
148.863 144.539 li
f
151.186 144.337 mo
151.258 144.155 li
151.443 144.08 li
151.625 144.155 li
151.7 144.337 li
151.625 144.519 li
151.443 144.59 li
151.258 144.519 li
151.186 144.337 li
f
153.328 144.404 mo
153.526 144.404 153.672 144.298 153.771 144.08 cv
153.866 143.867 153.917 143.539 153.917 143.1 cv
153.917 142.665 153.866 142.337 153.771 142.12 cv
153.672 141.907 153.526 141.796 153.328 141.796 cv
153.131 141.796 152.981 141.907 152.886 142.12 cv
152.787 142.337 152.739 142.665 152.739 143.1 cv
152.739 143.539 152.787 143.867 152.886 144.08 cv
152.981 144.298 153.131 144.404 153.328 144.404 cv
153.328 144.59 mo
153.012 144.59 152.767 144.46 152.593 144.199 cv
152.419 143.938 152.332 143.574 152.332 143.1 cv
152.332 142.63 152.419 142.262 152.593 142.002 cv
152.767 141.741 153.012 141.606 153.328 141.606 cv
153.641 141.606 153.886 141.741 154.059 142.002 cv
154.233 142.262 154.324 142.63 154.324 143.1 cv
154.324 143.574 154.233 143.938 154.059 144.199 cv
153.886 144.46 153.641 144.59 153.328 144.59 cv
f
161.153 136.4 mo
161.153 138.771 li
f
161.153 136.4 mo
161.153 138.771 li
@
171.531 136.4 mo
171.531 138.771 li
f
171.531 136.4 mo
171.531 138.771 li
@
181.908 136.4 mo
181.908 138.771 li
f
181.908 136.4 mo
181.908 138.771 li
@
192.285 136.4 mo
192.285 138.771 li
f
192.285 136.4 mo
192.285 138.771 li
@
190.399 144.404 mo
190.597 144.404 190.743 144.298 190.842 144.08 cv
190.937 143.867 190.988 143.539 190.988 143.1 cv
190.988 142.665 190.937 142.337 190.842 142.12 cv
190.743 141.907 190.597 141.796 190.399 141.796 cv
190.202 141.796 190.052 141.907 189.957 142.12 cv
189.858 142.337 189.81 142.665 189.81 143.1 cv
189.81 143.539 189.858 143.867 189.957 144.08 cv
190.052 144.298 190.202 144.404 190.399 144.404 cv
190.399 144.59 mo
190.083 144.59 189.838 144.46 189.664 144.199 cv
189.49 143.938 189.403 143.574 189.403 143.1 cv
189.403 142.63 189.49 142.262 189.664 142.002 cv
189.838 141.741 190.083 141.606 190.399 141.606 cv
190.712 141.606 190.957 141.741 191.13 142.002 cv
191.304 142.262 191.395 142.63 191.395 143.1 cv
191.395 143.574 191.304 143.938 191.13 144.199 cv
190.957 144.46 190.712 144.59 190.399 144.59 cv
f
192.028 144.337 mo
192.099 144.155 li
192.284 144.08 li
192.466 144.155 li
192.541 144.337 li
192.466 144.519 li
192.284 144.59 li
192.099 144.519 li
192.028 144.337 li
f
194.169 144.404 mo
194.367 144.404 194.513 144.298 194.612 144.08 cv
194.707 143.867 194.758 143.539 194.758 143.1 cv
194.758 142.665 194.707 142.337 194.612 142.12 cv
194.513 141.907 194.367 141.796 194.169 141.796 cv
193.972 141.796 193.822 141.907 193.727 142.12 cv
193.628 142.337 193.581 142.665 193.581 143.1 cv
193.581 143.539 193.628 143.867 193.727 144.08 cv
193.822 144.298 193.972 144.404 194.169 144.404 cv
194.169 144.59 mo
193.853 144.59 193.608 144.46 193.434 144.199 cv
193.261 143.938 193.174 143.574 193.174 143.1 cv
193.174 142.63 193.261 142.262 193.434 142.002 cv
193.608 141.741 193.853 141.606 194.169 141.606 cv
194.482 141.606 194.727 141.741 194.901 142.002 cv
195.074 142.262 195.165 142.63 195.165 143.1 cv
195.165 143.574 195.074 143.938 194.901 144.199 cv
194.727 144.46 194.482 144.59 194.169 144.59 cv
f
86.2716 148.739 mo
86.7695 148.739 li
86.7695 152.943 li
86.2716 152.943 li
86.2716 148.739 li
f
88.9827 150.266 mo
88.7171 150.266 88.5068 150.371 88.3519 150.581 cv
88.197 150.791 88.1196 151.073 88.1196 151.433 cv
88.1196 151.798 88.1915 152.08 88.3464 152.291 cv
88.5013 152.501 88.7116 152.6 88.9827 152.6 cv
89.2482 152.6 89.4585 152.501 89.6134 152.291 cv
89.7683 152.08 89.8458 151.798 89.8458 151.433 cv
89.8458 151.079 89.7683 150.791 89.6134 150.581 cv
89.4585 150.371 89.2482 150.266 88.9827 150.266 cv
88.9827 149.845 mo
89.4142 149.845 89.7517 149.989 90.0007 150.266 cv
90.2441 150.548 90.3714 150.935 90.3714 151.433 cv
90.3714 151.931 90.2441 152.318 90.0007 152.595 cv
89.7517 152.877 89.4142 153.015 88.9827 153.015 cv
88.5456 153.015 88.2025 152.877 87.9591 152.595 cv
87.7157 152.318 87.5939 151.931 87.5939 151.433 cv
87.5939 150.935 87.7157 150.548 87.9591 150.266 cv
88.2025 149.989 88.5456 149.845 88.9827 149.845 cv
f
93.1876 151.394 mo
93.1876 151.04 93.1101 150.758 92.9663 150.559 cv
92.8169 150.36 92.6066 150.26 92.3411 150.26 cv
92.0755 150.26 91.8652 150.36 91.7159 150.559 cv
91.5665 150.758 91.4945 151.04 91.4945 151.394 cv
91.4945 151.754 91.5665 152.031 91.7159 152.23 cv
91.8652 152.429 92.0755 152.528 92.3411 152.528 cv
92.6066 152.528 92.8169 152.429 92.9663 152.23 cv
93.1101 152.031 93.1876 151.754 93.1876 151.394 cv
93.6855 152.567 mo
93.6855 153.076 93.5694 153.458 93.3425 153.713 cv
93.1101 153.961 92.7616 154.089 92.2913 154.089 cv
92.1142 154.089 91.9538 154.072 91.7988 154.05 cv
91.6439 154.022 91.489 153.984 91.3452 153.928 cv
91.3452 153.447 li
91.489 153.524 91.6329 153.58 91.7767 153.618 cv
91.9206 153.657 92.0644 153.679 92.2138 153.679 cv
92.5347 153.679 92.7782 153.591 92.9441 153.425 cv
93.1046 153.253 93.1876 152.999 93.1876 152.656 cv
93.1876 152.412 li
93.0825 152.589 92.9497 152.722 92.7892 152.811 cv
92.6288 152.899 92.4407 152.943 92.2193 152.943 cv
91.8431 152.943 91.5443 152.805 91.3175 152.523 cv
91.0907 152.241 90.98 151.865 90.98 151.394 cv
90.98 150.93 91.0907 150.553 91.3175 150.271 cv
91.5443 149.989 91.8431 149.845 92.2193 149.845 cv
92.4407 149.845 92.6288 149.889 92.7892 149.978 cv
92.9497 150.066 93.0825 150.199 93.1876 150.376 cv
93.1876 149.917 li
93.6855 149.917 li
93.6855 152.567 li
f
94.7191 153.53 mo
95.3426 153.53 li
95.3426 151.376 li
94.6649 151.512 li
94.6649 151.163 li
95.3387 151.028 li
95.7222 151.028 li
95.7222 153.53 li
96.3457 153.53 li
96.3457 153.851 li
94.7191 153.851 li
94.7191 153.53 li
f
97.9336 151.28 mo
97.7361 151.28 97.5889 151.376 97.4882 151.57 cv
97.3875 151.764 97.3411 152.054 97.3411 152.441 cv
97.3411 152.829 97.3875 153.119 97.4882 153.313 cv
97.5889 153.507 97.7361 153.603 97.9336 153.603 cv
98.1311 153.603 98.2783 153.507 98.379 153.313 cv
98.4758 153.119 98.5262 152.829 98.5262 152.441 cv
98.5262 152.054 98.4758 151.764 98.379 151.57 cv
98.2783 151.376 98.1311 151.28 97.9336 151.28 cv
97.9336 150.977 mo
98.2473 150.977 98.4875 151.105 98.6579 151.353 cv
98.8244 151.605 98.9096 151.969 98.9096 152.441 cv
98.9096 152.918 98.8244 153.282 98.6579 153.53 cv
98.4875 153.778 98.2473 153.902 97.9336 153.902 cv
97.616 153.902 97.3721 153.778 97.2055 153.53 cv
97.039 153.282 96.9576 152.918 96.9576 152.441 cv
96.9576 151.969 97.039 151.605 97.2055 151.353 cv
97.3721 151.105 97.616 150.977 97.9336 150.977 cv
f
101.786 150.376 mo
101.609 150.315 li
101.404 150.293 li
101.139 150.293 100.906 150.398 100.707 150.598 cv
100.508 150.797 100.381 151.068 100.314 151.4 cv
100.01 152.943 li
99.512 152.943 li
100.104 149.917 li
100.602 149.917 li
100.508 150.387 li
100.635 150.216 100.79 150.083 100.978 149.989 cv
101.161 149.895 101.354 149.845 101.565 149.845 cv
101.72 149.856 li
101.88 149.884 li
101.786 150.376 li
f
103.257 150.432 mo
106.721 150.432 li
106.721 150.885 li
103.257 150.885 li
103.257 150.432 li
103.257 151.533 mo
106.721 151.533 li
106.721 151.992 li
103.257 151.992 li
103.257 151.533 li
f
108.905 148.739 mo
109.403 148.739 li
109.403 152.943 li
108.905 152.943 li
108.905 148.739 li
f
111.616 150.266 mo
111.35 150.266 111.14 150.371 110.985 150.581 cv
110.83 150.791 110.753 151.073 110.753 151.433 cv
110.753 151.798 110.825 152.08 110.979 152.291 cv
111.134 152.501 111.345 152.6 111.616 152.6 cv
111.881 152.6 112.092 152.501 112.246 152.291 cv
112.401 152.08 112.479 151.798 112.479 151.433 cv
112.479 151.079 112.401 150.791 112.246 150.581 cv
112.092 150.371 111.881 150.266 111.616 150.266 cv
111.616 149.845 mo
112.047 149.845 112.385 149.989 112.634 150.266 cv
112.877 150.548 113.004 150.935 113.004 151.433 cv
113.004 151.931 112.877 152.318 112.634 152.595 cv
112.385 152.877 112.047 153.015 111.616 153.015 cv
111.179 153.015 110.836 152.877 110.592 152.595 cv
110.349 152.318 110.227 151.931 110.227 151.433 cv
110.227 150.935 110.349 150.548 110.592 150.266 cv
110.836 149.989 111.179 149.845 111.616 149.845 cv
f
115.821 151.394 mo
115.821 151.04 115.743 150.758 115.599 150.559 cv
115.45 150.36 115.24 150.26 114.974 150.26 cv
114.709 150.26 114.498 150.36 114.349 150.559 cv
114.2 150.758 114.128 151.04 114.128 151.394 cv
114.128 151.754 114.2 152.031 114.349 152.23 cv
114.498 152.429 114.709 152.528 114.974 152.528 cv
115.24 152.528 115.45 152.429 115.599 152.23 cv
115.743 152.031 115.821 151.754 115.821 151.394 cv
116.319 152.567 mo
116.319 153.076 116.202 153.458 115.976 153.713 cv
115.743 153.961 115.395 154.089 114.924 154.089 cv
114.747 154.089 114.587 154.072 114.432 154.05 cv
114.277 154.022 114.122 153.984 113.978 153.928 cv
113.978 153.447 li
114.122 153.524 114.266 153.58 114.41 153.618 cv
114.554 153.657 114.698 153.679 114.847 153.679 cv
115.168 153.679 115.411 153.591 115.577 153.425 cv
115.738 153.253 115.821 152.999 115.821 152.656 cv
115.821 152.412 li
115.716 152.589 115.583 152.722 115.422 152.811 cv
115.262 152.899 115.074 152.943 114.852 152.943 cv
114.476 152.943 114.177 152.805 113.951 152.523 cv
113.724 152.241 113.613 151.865 113.613 151.394 cv
113.613 150.93 113.724 150.553 113.951 150.271 cv
114.177 149.989 114.476 149.845 114.852 149.845 cv
115.074 149.845 115.262 149.889 115.422 149.978 cv
115.583 150.066 115.716 150.199 115.821 150.376 cv
115.821 149.917 li
116.319 149.917 li
116.319 152.567 li
f
117.352 153.53 mo
117.976 153.53 li
117.976 151.376 li
117.298 151.512 li
117.298 151.163 li
117.972 151.028 li
118.355 151.028 li
118.355 153.53 li
118.979 153.53 li
118.979 153.851 li
117.352 153.851 li
117.352 153.53 li
f
120.567 151.28 mo
120.369 151.28 120.222 151.376 120.121 151.57 cv
120.021 151.764 119.974 152.054 119.974 152.441 cv
119.974 152.829 120.021 153.119 120.121 153.313 cv
120.222 153.507 120.369 153.603 120.567 153.603 cv
120.764 153.603 120.911 153.507 121.012 153.313 cv
121.109 153.119 121.159 152.829 121.159 152.441 cv
121.159 152.054 121.109 151.764 121.012 151.57 cv
120.911 151.376 120.764 151.28 120.567 151.28 cv
120.567 150.977 mo
120.88 150.977 121.121 151.105 121.291 151.353 cv
121.458 151.605 121.543 151.969 121.543 152.441 cv
121.543 152.918 121.458 153.282 121.291 153.53 cv
121.121 153.778 120.88 153.902 120.567 153.902 cv
120.249 153.902 120.005 153.778 119.839 153.53 cv
119.672 153.282 119.591 152.918 119.591 152.441 cv
119.591 151.969 119.672 151.605 119.839 151.353 cv
120.005 151.105 120.249 150.977 120.567 150.977 cv
f
124.374 155.672 mo
124.374 155.846 li
123.835 155.335 123.406 154.709 123.093 153.957 cv
122.775 153.206 122.621 152.353 122.621 151.409 cv
122.621 150.465 122.78 149.593 123.103 148.793 cv
123.425 147.994 123.849 147.387 124.374 146.963 cv
124.374 147.122 li
124.008 147.498 123.7 148.052 123.45 148.784 cv
123.199 149.516 123.079 150.388 123.079 151.409 cv
123.079 153.191 123.507 154.612 124.374 155.672 cv
f
128.093 148.543 mo
128.396 148.543 li
128.762 150.52 li
128.483 150.52 li
128.402 150.013 li
127.512 150.013 li
127.233 150.52 li
126.954 150.52 li
128.093 148.543 li
128.19 148.806 mo
127.634 149.79 li
128.361 149.79 li
128.19 148.806 li
f
127.553 153.851 mo
128.236 153.851 li
128.421 153.851 128.559 153.886 128.651 153.954 cv
128.743 154.025 128.789 154.128 128.789 154.266 cv
128.789 154.393 128.749 154.502 128.67 154.594 cv
128.591 154.686 128.488 154.743 128.361 154.762 cv
128.469 154.789 128.551 154.835 128.605 154.906 cv
128.659 154.976 128.689 155.069 128.689 155.182 cv
128.689 155.383 128.613 155.54 128.467 155.654 cv
128.32 155.771 128.12 155.828 127.865 155.828 cv
127.168 155.828 li
127.553 153.851 li
127.618 154.884 mo
127.477 155.608 li
127.908 155.608 li
128.068 155.608 128.193 155.573 128.28 155.497 cv
128.366 155.424 128.413 155.318 128.413 155.182 cv
128.413 155.079 128.383 155.006 128.326 154.957 cv
128.266 154.909 128.174 154.884 128.047 154.884 cv
127.618 154.884 li
127.775 154.071 mo
127.659 154.667 li
128.057 154.667 li
128.198 154.667 128.31 154.637 128.391 154.575 cv
128.469 154.513 128.51 154.426 128.51 154.318 cv
128.429 154.13 li
128.375 154.093 128.288 154.071 128.171 154.071 cv
127.775 154.071 li
f
130.301 147.136 mo
130.301 146.963 li
130.841 147.473 131.265 148.104 131.583 148.856 cv
131.896 149.612 132.055 150.465 132.055 151.409 cv
132.055 152.353 131.891 153.225 131.568 154.02 cv
131.246 154.814 130.822 155.421 130.301 155.845 cv
130.301 155.686 li
130.668 155.311 130.971 154.757 131.221 154.029 cv
131.472 153.297 131.597 152.425 131.597 151.409 cv
131.597 149.626 131.164 148.201 130.301 147.136 cv
f
126.224 147.274 mo
126.693 149.884 li
126.325 149.884 li
126.034 148.32 li
125 149.884 li
124.636 149.884 li
125.953 147.855 li
125.887 147.479 li
125.86 147.32 125.779 147.239 125.643 147.239 cv
125.461 147.239 li
125.519 146.941 li
125.74 146.945 li
126.023 146.953 126.185 147.061 126.224 147.274 cv
f
126.224 152.582 mo
126.693 155.192 li
126.325 155.192 li
126.034 153.628 li
125 155.192 li
124.636 155.192 li
125.953 153.163 li
125.887 152.787 li
125.86 152.629 125.779 152.547 125.643 152.547 cv
125.461 152.547 li
125.519 152.249 li
125.74 152.253 li
126.023 152.261 126.185 152.369 126.224 152.582 cv
f
124.803 151.903 mo
129.06 151.903 li
129.06 151.557 li
124.803 151.557 li
cp
f
21.057 132.606 mo
18.6858 132.606 li
f
21.057 132.606 mo
18.6858 132.606 li
@
10.89 133.972 mo
11.0876 133.972 11.2338 133.866 11.3326 133.648 cv
11.4274 133.435 11.4788 133.107 11.4788 132.668 cv
11.4788 132.233 11.4274 131.905 11.3326 131.688 cv
11.2338 131.475 11.0876 131.364 10.89 131.364 cv
10.6924 131.364 10.5422 131.475 10.4473 131.688 cv
10.3485 131.905 10.3011 132.233 10.3011 132.668 cv
10.3011 133.107 10.3485 133.435 10.4473 133.648 cv
10.5422 133.866 10.6924 133.972 10.89 133.972 cv
10.89 134.158 mo
10.5738 134.158 10.3288 134.028 10.1549 133.767 cv
9.981 133.506 9.89406 133.142 9.89406 132.668 cv
9.89406 132.198 9.981 131.83 10.1549 131.569 cv
10.3288 131.309 10.5738 131.174 10.89 131.174 cv
11.2022 131.174 11.4472 131.309 11.6211 131.569 cv
11.795 131.83 11.8859 132.198 11.8859 132.668 cv
11.8859 133.142 11.795 133.506 11.6211 133.767 cv
11.4472 134.028 11.2022 134.158 10.89 134.158 cv
f
12.5182 133.905 mo
12.5893 133.723 li
12.7751 133.648 li
12.9569 133.723 li
13.032 133.905 li
12.9569 134.087 li
12.7751 134.158 li
12.5893 134.087 li
12.5182 133.905 li
f
14.6601 133.972 mo
14.8577 133.972 15.004 133.866 15.1028 133.648 cv
15.1976 133.435 15.249 133.107 15.249 132.668 cv
15.249 132.233 15.1976 131.905 15.1028 131.688 cv
15.004 131.475 14.8577 131.364 14.6601 131.364 cv
14.4626 131.364 14.3124 131.475 14.2175 131.688 cv
14.1187 131.905 14.0713 132.233 14.0713 132.668 cv
14.0713 133.107 14.1187 133.435 14.2175 133.648 cv
14.3124 133.866 14.4626 133.972 14.6601 133.972 cv
14.6601 134.158 mo
14.344 134.158 14.099 134.028 13.9251 133.767 cv
13.7512 133.506 13.6642 133.142 13.6642 132.668 cv
13.6642 132.198 13.7512 131.83 13.9251 131.569 cv
14.099 131.309 14.344 131.174 14.6601 131.174 cv
14.9724 131.174 15.2174 131.309 15.3913 131.569 cv
15.5652 131.83 15.6561 132.198 15.6561 132.668 cv
15.6561 133.142 15.5652 133.506 15.3913 133.767 cv
15.2174 134.028 14.9724 134.158 14.6601 134.158 cv
f
21.057 110.36 mo
18.6858 110.36 li
f
21.057 110.36 mo
18.6858 110.36 li
@
10.89 111.726 mo
11.0876 111.726 11.2338 111.619 11.3326 111.402 cv
11.4274 111.188 11.4788 110.86 11.4788 110.422 cv
11.4788 109.987 11.4274 109.659 11.3326 109.441 cv
11.2338 109.228 11.0876 109.117 10.89 109.117 cv
10.6924 109.117 10.5422 109.228 10.4473 109.441 cv
10.3485 109.659 10.3011 109.987 10.3011 110.422 cv
10.3011 110.86 10.3485 111.188 10.4473 111.402 cv
10.5422 111.619 10.6924 111.726 10.89 111.726 cv
10.89 111.911 mo
10.5738 111.911 10.3288 111.781 10.1549 111.52 cv
9.981 111.259 9.89406 110.896 9.89406 110.422 cv
9.89406 109.951 9.981 109.584 10.1549 109.323 cv
10.3288 109.062 10.5738 108.928 10.89 108.928 cv
11.2022 108.928 11.4472 109.062 11.6211 109.323 cv
11.795 109.584 11.8859 109.951 11.8859 110.422 cv
11.8859 110.896 11.795 111.259 11.6211 111.52 cv
11.4472 111.781 11.2022 111.911 10.89 111.911 cv
f
12.5182 111.658 mo
12.5893 111.477 li
12.7751 111.402 li
12.9569 111.477 li
13.032 111.658 li
12.9569 111.84 li
12.7751 111.911 li
12.5893 111.84 li
12.5182 111.658 li
f
13.9646 111.86 mo
13.9646 111.655 li
14.4665 111.655 li
14.4665 109.26 li
13.8856 109.635 li
13.8856 109.382 li
14.589 108.928 li
14.8538 108.928 li
14.8538 111.655 li
15.3557 111.655 li
15.3557 111.86 li
13.9646 111.86 li
f
21.057 88.113 mo
18.6858 88.113 li
f
21.057 88.113 mo
18.6858 88.113 li
@
10.89 89.4791 mo
11.0876 89.4791 11.2338 89.3724 11.3326 89.155 cv
11.4274 88.9416 11.4788 88.6136 11.4788 88.1749 cv
11.4788 87.7402 11.4274 87.4122 11.3326 87.1948 cv
11.2338 86.9814 11.0876 86.8707 10.89 86.8707 cv
10.6924 86.8707 10.5422 86.9814 10.4473 87.1948 cv
10.3485 87.4122 10.3011 87.7402 10.3011 88.1749 cv
10.3011 88.6136 10.3485 88.9416 10.4473 89.155 cv
10.5422 89.3724 10.6924 89.4791 10.89 89.4791 cv
10.89 89.6648 mo
10.5738 89.6648 10.3288 89.5344 10.1549 89.2736 cv
9.981 89.0127 9.89406 88.6491 9.89406 88.1749 cv
9.89406 87.7046 9.981 87.3371 10.1549 87.0762 cv
10.3288 86.8154 10.5738 86.6811 10.89 86.6811 cv
11.2022 86.6811 11.4472 86.8154 11.6211 87.0762 cv
11.795 87.3371 11.8859 87.7046 11.8859 88.1749 cv
11.8859 88.6491 11.795 89.0127 11.6211 89.2736 cv
11.4472 89.5344 11.2022 89.6648 10.89 89.6648 cv
f
12.5182 89.4119 mo
12.5893 89.2301 li
12.7751 89.155 li
12.9569 89.2301 li
13.032 89.4119 li
12.9569 89.5937 li
12.7751 89.6648 li
12.5893 89.5937 li
12.5182 89.4119 li
f
13.9093 87.4201 mo
13.6919 87.4201 li
13.6919 86.9063 li
13.8263 86.8352 13.9646 86.7798 14.1069 86.7403 cv
14.2452 86.7008 14.3835 86.6811 14.5179 86.6811 cv
14.8182 86.6811 15.0553 86.7561 15.2292 86.8984 cv
15.4031 87.0446 15.4901 87.2422 15.4901 87.4912 cv
15.4901 87.7758 15.2925 88.1117 14.8973 88.5029 cv
14.8301 88.5701 li
14.1029 89.2973 li
15.3043 89.2973 li
15.3043 88.9416 li
15.5296 88.9416 li
15.5296 89.6134 li
13.6721 89.6134 li
13.6721 89.404 li
14.5455 88.5306 li
14.7352 88.3409 14.8736 88.163 14.9565 88.001 cv
15.0395 87.839 15.083 87.6691 15.083 87.4912 cv
15.083 87.2976 15.0316 87.1474 14.9289 87.0367 cv
14.8261 86.9261 14.6878 86.8707 14.5139 86.8707 cv
14.3282 86.8707 14.1859 86.9182 14.0871 87.0091 cv
13.9844 87.1 13.9251 87.2383 13.9093 87.4201 cv
f
21.057 65.8664 mo
18.6858 65.8664 li
f
21.057 65.8664 mo
18.6858 65.8664 li
@
10.89 67.2325 mo
11.0876 67.2325 11.2338 67.1258 11.3326 66.9084 cv
11.4274 66.695 11.4788 66.367 11.4788 65.9283 cv
11.4788 65.4936 11.4274 65.1656 11.3326 64.9482 cv
11.2338 64.7348 11.0876 64.6241 10.89 64.6241 cv
10.6924 64.6241 10.5422 64.7348 10.4473 64.9482 cv
10.3485 65.1656 10.3011 65.4936 10.3011 65.9283 cv
10.3011 66.367 10.3485 66.695 10.4473 66.9084 cv
10.5422 67.1258 10.6924 67.2325 10.89 67.2325 cv
10.89 67.4182 mo
10.5738 67.4182 10.3288 67.2878 10.1549 67.027 cv
9.981 66.7661 9.89406 66.4025 9.89406 65.9283 cv
9.89406 65.458 9.981 65.0905 10.1549 64.8297 cv
10.3288 64.5688 10.5738 64.4345 10.89 64.4345 cv
11.2022 64.4345 11.4472 64.5688 11.6211 64.8297 cv
11.795 65.0905 11.8859 65.458 11.8859 65.9283 cv
11.8859 66.4025 11.795 66.7661 11.6211 67.027 cv
11.4472 67.2878 11.2022 67.4182 10.89 67.4182 cv
f
12.5182 67.1653 mo
12.5893 66.9835 li
12.7751 66.9084 li
12.9569 66.9835 li
13.032 67.1653 li
12.9569 67.3471 li
12.7751 67.4182 li
12.5893 67.3471 li
12.5182 67.1653 li
f
13.7868 64.6083 mo
13.9369 64.553 14.0792 64.5095 14.2175 64.4779 cv
14.3559 64.4503 14.4863 64.4345 14.6088 64.4345 cv
14.8894 64.4345 15.1107 64.4977 15.2688 64.6162 cv
15.4268 64.7388 15.5059 64.9087 15.5059 65.1221 cv
15.5059 65.296 15.4505 65.4422 15.3399 65.5568 cv
15.2292 65.6754 15.0751 65.7544 14.8775 65.7939 cv
15.1146 65.8295 15.2964 65.9165 15.4268 66.0548 cv
15.5573 66.1931 15.6244 66.3709 15.6244 66.5883 cv
15.6244 66.857 15.5335 67.0625 15.3517 67.2048 cv
15.17 67.3471 14.9131 67.4182 14.5732 67.4182 cv
14.423 67.4182 14.2729 67.4024 14.1306 67.3708 cv
13.9883 67.3431 13.846 67.2957 13.7038 67.2285 cv
13.7038 66.6673 li
13.9211 66.6673 li
13.933 66.857 13.9962 66.9953 14.1069 67.0902 cv
14.2175 67.185 14.3756 67.2325 14.5811 67.2325 cv
14.7787 67.2325 14.9328 67.1771 15.0474 67.0625 cv
15.1581 66.9479 15.2174 66.7898 15.2174 66.5922 cv
15.2174 66.367 15.1581 66.197 15.0395 66.0785 cv
14.921 65.9639 14.751 65.9046 14.5258 65.9046 cv
14.344 65.9046 li
14.344 65.707 li
14.4388 65.707 li
14.6641 65.707 14.834 65.6635 14.9447 65.5687 cv
15.0553 65.4738 15.1146 65.3355 15.1146 65.1458 cv
15.1146 64.9798 15.0672 64.8494 14.9763 64.7585 cv
14.8815 64.6716 14.751 64.6241 14.5771 64.6241 cv
14.4033 64.6241 14.265 64.6676 14.1701 64.7506 cv
14.0753 64.8336 14.0199 64.9561 14.0041 65.1142 cv
13.7868 65.1142 li
13.7868 64.6083 li
f
21.057 43.6197 mo
18.6858 43.6197 li
f
21.057 43.6197 mo
18.6858 43.6197 li
@
10.89 44.9859 mo
11.0876 44.9859 11.2338 44.8792 11.3326 44.6618 cv
11.4274 44.4484 11.4788 44.1204 11.4788 43.6817 cv
11.4788 43.247 11.4274 42.919 11.3326 42.7016 cv
11.2338 42.4882 11.0876 42.3776 10.89 42.3776 cv
10.6924 42.3776 10.5422 42.4882 10.4473 42.7016 cv
10.3485 42.919 10.3011 43.247 10.3011 43.6817 cv
10.3011 44.1204 10.3485 44.4484 10.4473 44.6618 cv
10.5422 44.8792 10.6924 44.9859 10.89 44.9859 cv
10.89 45.1716 mo
10.5738 45.1716 10.3288 45.0412 10.1549 44.7804 cv
9.981 44.5195 9.89406 44.156 9.89406 43.6817 cv
9.89406 43.2114 9.981 42.8439 10.1549 42.5831 cv
10.3288 42.3222 10.5738 42.1879 10.89 42.1879 cv
11.2022 42.1879 11.4472 42.3222 11.6211 42.5831 cv
11.795 42.8439 11.8859 43.2114 11.8859 43.6817 cv
11.8859 44.156 11.795 44.5195 11.6211 44.7804 cv
11.4472 45.0412 11.2022 45.1716 10.89 45.1716 cv
f
12.5182 44.9187 mo
12.5893 44.7369 li
12.7751 44.6618 li
12.9569 44.7369 li
13.032 44.9187 li
12.9569 45.1005 li
12.7751 45.1716 li
12.5893 45.1005 li
12.5182 44.9187 li
f
14.7827 44.1441 mo
14.7827 42.6107 li
13.7986 44.1441 li
14.7827 44.1441 li
15.6323 45.1202 mo
14.3203 45.1202 li
14.3203 44.9147 li
14.7827 44.9147 li
14.7827 44.3496 li
13.5259 44.3496 li
13.5259 44.1402 li
14.7866 42.1879 li
15.17 42.1879 li
15.17 44.1441 li
15.7193 44.1441 li
15.7193 44.3496 li
15.17 44.3496 li
15.17 44.9147 li
15.6323 44.9147 li
15.6323 45.1202 li
f
21.057 21.3731 mo
18.6858 21.3731 li
f
21.057 21.3731 mo
18.6858 21.3731 li
@
10.89 22.7393 mo
11.0876 22.7393 11.2338 22.6326 11.3326 22.4152 cv
11.4274 22.2018 11.4788 21.8738 11.4788 21.4351 cv
11.4788 21.0004 11.4274 20.6724 11.3326 20.455 cv
11.2338 20.2416 11.0876 20.131 10.89 20.131 cv
10.6924 20.131 10.5422 20.2416 10.4473 20.455 cv
10.3485 20.6724 10.3011 21.0004 10.3011 21.4351 cv
10.3011 21.8738 10.3485 22.2018 10.4473 22.4152 cv
10.5422 22.6326 10.6924 22.7393 10.89 22.7393 cv
10.89 22.925 mo
10.5738 22.925 10.3288 22.7946 10.1549 22.5338 cv
9.981 22.2729 9.89406 21.9094 9.89406 21.4351 cv
9.89406 20.9648 9.981 20.5973 10.1549 20.3365 cv
10.3288 20.0756 10.5738 19.9413 10.89 19.9413 cv
11.2022 19.9413 11.4472 20.0756 11.6211 20.3365 cv
11.795 20.5973 11.8859 20.9648 11.8859 21.4351 cv
11.8859 21.9094 11.795 22.2729 11.6211 22.5338 cv
11.4472 22.7946 11.2022 22.925 10.89 22.925 cv
f
12.5182 22.6721 mo
12.5893 22.4903 li
12.7751 22.4152 li
12.9569 22.4903 li
13.032 22.6721 li
12.9569 22.8539 li
12.7751 22.925 li
12.5893 22.8539 li
12.5182 22.6721 li
f
15.3913 19.9926 mo
15.3913 20.3088 li
14.0713 20.3088 li
14.0713 21.1348 li
14.1345 21.0873 14.2136 21.0557 14.3045 21.032 cv
14.3914 21.0083 14.4942 20.9964 14.6048 20.9964 cv
14.9131 20.9964 15.1581 21.0834 15.3399 21.2573 cv
15.5217 21.4312 15.6126 21.6643 15.6126 21.9607 cv
15.6126 22.269 15.5217 22.5061 15.3399 22.6721 cv
15.1581 22.842 14.9012 22.925 14.5732 22.925 cv
14.4388 22.925 14.3045 22.9092 14.1662 22.8776 cv
14.0239 22.8499 13.8816 22.8025 13.7393 22.7353 cv
13.7393 22.1741 li
13.9567 22.1741 li
13.9686 22.3599 14.0278 22.5022 14.1306 22.597 cv
14.2333 22.6919 14.3835 22.7393 14.5732 22.7393 cv
14.7747 22.7393 14.9289 22.6721 15.0395 22.5377 cv
15.1502 22.4034 15.2055 22.2137 15.2055 21.9607 cv
15.2055 21.7118 15.1502 21.5221 15.0435 21.3877 cv
14.9328 21.2533 14.7787 21.1861 14.5732 21.1861 cv
14.4547 21.1861 14.3519 21.2099 14.265 21.2494 cv
14.0318 21.4391 li
13.8658 21.4391 li
13.8658 19.9926 li
15.3913 19.9926 li
f
5.75575 117.488 mo
6.13197 117.61 6.41968 117.809 6.6078 118.086 cv
6.80145 118.368 6.89551 118.722 6.89551 119.148 cv
6.89551 119.414 6.85124 119.663 6.76271 119.884 cv
6.67419 120.111 6.54694 120.31 6.36989 120.482 cv
6.1707 120.686 5.93832 120.836 5.68382 120.935 cv
5.42931 121.035 5.13608 121.079 4.80963 121.079 cv
4.18443 121.079 3.68095 120.902 3.29366 120.537 cv
2.9119 120.177 2.71825 119.701 2.71825 119.104 cv
2.71825 118.883 2.75143 118.65 2.80676 118.401 cv
2.86209 118.158 2.95062 117.887 3.0668 117.599 cv
3.99632 117.599 li
3.99632 117.903 li
3.65881 117.97 3.40984 118.108 3.24939 118.307 cv
3.08894 118.506 3.00595 118.789 3.00595 119.148 cv
3.00595 119.58 3.16086 119.906 3.46516 120.128 cv
3.77501 120.349 4.22316 120.459 4.80963 120.459 cv
5.40164 120.459 5.84981 120.349 6.15411 120.128 cv
6.46394 119.906 6.61333 119.58 6.61333 119.148 cv
6.61333 118.849 6.54141 118.606 6.39755 118.407 cv
6.25369 118.213 6.04346 118.075 5.75575 117.986 cv
5.75575 117.488 li
f
6.82358 116.93 mo
6.53587 116.93 li
6.53587 116.481 li
2.90636 116.481 li
2.90636 116.957 li
2.61865 116.957 li
2.61865 115.983 li
4.46107 115.983 li
4.27296 115.895 4.12357 115.773 4.02399 115.629 cv
3.92439 115.485 3.87459 115.314 3.87459 115.115 cv
3.87459 114.799 3.96866 114.567 4.14571 114.418 cv
4.32828 114.268 4.61046 114.191 4.99776 114.191 cv
6.53587 114.191 li
6.53587 113.748 li
6.82358 113.748 li
6.82358 115.12 li
6.53587 115.12 li
6.53587 114.689 li
5.15268 114.689 li
4.80411 114.689 4.56619 114.733 4.43341 114.822 cv
4.30615 114.91 4.23976 115.059 4.23976 115.275 cv
4.23976 115.508 4.32828 115.685 4.49426 115.806 cv
4.66025 115.928 4.9037 115.983 5.22459 115.983 cv
6.53587 115.983 li
6.53587 115.552 li
6.82358 115.552 li
6.82358 116.93 li
f
5.44038 110.595 mo
5.44038 112.736 li
5.46251 112.736 li
5.84981 112.736 6.14304 112.664 6.34222 112.52 cv
6.54141 112.376 6.63547 112.16 6.63547 111.873 cv
6.63547 111.657 6.58014 111.48 6.46394 111.336 cv
6.35329 111.198 6.18178 111.098 5.95493 111.043 cv
5.95493 110.644 li
6.27029 110.722 6.50821 110.871 6.66313 111.081 cv
6.81804 111.297 6.89551 111.579 6.89551 111.922 cv
6.89551 112.343 6.76271 112.68 6.48608 112.935 cv
6.20944 113.189 5.84427 113.317 5.38506 113.317 cv
4.93137 113.317 4.56619 113.195 4.28955 112.94 cv
4.01291 112.691 3.87459 112.365 3.87459 111.956 cv
3.87459 111.524 4.01291 111.187 4.27849 110.954 cv
4.54407 110.722 4.93137 110.606 5.44038 110.595 cv
5.15268 111.181 mo
4.82071 111.192 4.56619 111.264 4.39468 111.397 cv
4.2287 111.53 4.14017 111.712 4.14017 111.956 cv
4.14017 112.188 4.2287 112.365 4.40021 112.498 cv
4.57173 112.631 4.82071 112.708 5.15268 112.736 cv
5.15268 111.181 li
f
3.94652 107.673 mo
4.66579 107.673 li
4.66579 107.961 li
4.52193 107.972 4.41681 108.011 4.34488 108.077 cv
4.27849 108.149 4.23976 108.254 4.23976 108.387 cv
4.23976 108.63 4.32828 108.818 4.49426 108.951 cv
4.66579 109.084 4.90923 109.145 5.22459 109.145 cv
6.53587 109.145 li
6.53587 108.57 li
6.82358 108.57 li
6.82358 110.091 li
6.53587 110.091 li
6.53587 109.643 li
4.23422 109.643 li
4.23422 110.119 li
3.95206 110.119 li
3.95206 109.145 li
4.46107 109.145 li
4.26189 109.051 4.11804 108.929 4.01845 108.774 cv
3.92439 108.619 3.87459 108.431 3.87459 108.21 cv
3.89673 107.955 li
3.90779 107.867 3.92439 107.773 3.94652 107.673 cv
f
3.94652 105.029 mo
4.66579 105.029 li
4.66579 105.316 li
4.52193 105.327 4.41681 105.366 4.34488 105.432 cv
4.27849 105.504 4.23976 105.609 4.23976 105.742 cv
4.23976 105.986 4.32828 106.174 4.49426 106.307 cv
4.66579 106.439 4.90923 106.5 5.22459 106.5 cv
6.53587 106.5 li
6.53587 105.925 li
6.82358 105.925 li
6.82358 107.446 li
6.53587 107.446 li
6.53587 106.998 li
4.23422 106.998 li
4.23422 107.474 li
3.95206 107.474 li
3.95206 106.5 li
4.46107 106.5 li
4.26189 106.406 4.11804 106.285 4.01845 106.13 cv
3.92439 105.975 3.87459 105.787 3.87459 105.565 cv
3.89673 105.311 li
3.90779 105.222 3.92439 105.128 3.94652 105.029 cv
f
7.34366 103.833 mo
6.86784 103.645 li
4.23976 104.719 li
4.23976 105.04 li
3.95206 105.04 li
3.95206 103.723 li
4.23976 103.723 li
4.23976 104.182 li
6.21497 103.374 li
4.23976 102.566 li
4.23976 102.998 li
3.95206 102.998 li
3.95206 101.919 li
4.23976 101.919 li
4.23976 102.24 li
7.46538 103.557 li
7.68669 103.645 7.84161 103.745 7.92461 103.856 cv
8.00206 103.966 8.04633 104.121 8.04633 104.32 cv
8.0242 104.58 li
7.96333 104.852 li
7.41559 104.852 li
7.41559 104.597 li
7.53731 104.586 7.6203 104.558 7.67563 104.503 cv
7.73096 104.453 7.75862 104.376 7.75862 104.265 cv
7.75862 104.165 7.73096 104.088 7.67563 104.027 cv
7.6203 103.966 7.50964 103.9 7.34366 103.833 cv
f
5.92174 97.9411 mo
5.31313 97.9411 li
5.31313 98.5829 li
5.31313 98.8319 5.36845 99.0144 5.47357 99.1362 cv
5.58423 99.2579 5.74467 99.3132 5.96046 99.3132 cv
6.15964 99.3132 6.3201 99.2523 6.43628 99.1306 cv
6.558 99.0089 6.61333 98.8429 6.61333 98.6327 cv
6.61333 98.428 6.55247 98.262 6.42522 98.1347 cv
6.29796 98.0075 6.13197 97.9411 5.92174 97.9411 cv
5.03094 97.4431 mo
6.53587 97.4431 li
6.53587 97.0005 li
6.82358 97.0005 li
6.82358 97.9411 li
6.51375 97.9411 li
6.64653 98.0517 6.74612 98.179 6.80698 98.3228 cv
6.8623 98.4667 6.89551 98.6382 6.89551 98.8263 cv
6.89551 99.1472 6.81252 99.4017 6.64653 99.5898 cv
6.48055 99.778 6.24817 99.8665 5.96046 99.8665 cv
5.66722 99.8665 5.44038 99.7614 5.2744 99.5456 cv
5.10841 99.3353 5.02542 99.031 5.02542 98.6382 cv
5.02542 97.9411 li
4.82623 97.9411 li
4.61046 97.9411 4.44447 98.0075 4.32275 98.1403 cv
4.20103 98.273 4.14017 98.4612 4.14017 98.6991 cv
4.14017 98.8982 4.18997 99.0532 4.27849 99.1694 cv
4.36702 99.2911 4.4998 99.363 4.67685 99.3907 cv
4.67685 99.6452 li
4.0959 99.6452 li
4.02399 99.4737 3.96866 99.3077 3.92992 99.1417 cv
3.89673 98.9812 3.87459 98.8208 3.87459 98.6659 cv
3.87459 98.2675 3.97418 97.9687 4.17337 97.7585 cv
4.37254 97.5482 4.65472 97.4431 5.03094 97.4431 cv
f
6.82358 96.6188 mo
6.53587 96.6188 li
6.53587 96.1706 li
4.23976 96.1706 li
4.23976 96.6464 li
3.95206 96.6464 li
3.95206 95.6727 li
4.46107 95.6727 li
4.27296 95.5842 4.12357 95.4624 4.02399 95.3186 cv
3.92439 95.1747 3.87459 95.0032 3.87459 94.804 cv
3.87459 94.4887 3.96866 94.2563 4.14571 94.1069 cv
4.32828 93.9575 4.61046 93.88 4.99776 93.88 cv
6.53587 93.88 li
6.53587 93.4374 li
6.82358 93.4374 li
6.82358 94.8096 li
6.53587 94.8096 li
6.53587 94.378 li
5.15268 94.378 li
4.80411 94.378 4.56619 94.4223 4.43341 94.5108 cv
4.30063 94.5993 4.23422 94.7487 4.23422 94.9645 cv
4.23422 95.1969 4.32275 95.3739 4.48874 95.4956 cv
4.66025 95.6173 4.9037 95.6727 5.22459 95.6727 cv
6.53587 95.6727 li
6.53587 95.2411 li
6.82358 95.2411 li
6.82358 96.6188 li
f
6.53587 90.3778 mo
6.53587 89.902 li
6.82358 89.902 li
6.82358 90.8757 li
6.37543 90.8757 li
6.558 90.9753 6.6908 91.0971 6.77379 91.2464 cv
6.85124 91.4014 6.89551 91.5839 6.89551 91.8053 cv
6.89551 92.1594 6.75719 92.4526 6.48055 92.6739 cv
6.2039 92.8952 5.83875 93.0059 5.38506 93.0059 cv
4.93689 93.0059 4.57173 92.8952 4.29509 92.6739 cv
4.01845 92.4526 3.87459 92.1594 3.87459 91.8053 cv
3.87459 91.5839 3.91885 91.4014 4.00185 91.2464 cv
4.09038 91.0971 4.22316 90.9753 4.40021 90.8757 cv
2.90636 90.8757 li
2.90636 91.346 li
2.61865 91.346 li
2.61865 90.3778 li
6.53587 90.3778 li
5.5289 90.8757 mo
5.24673 90.8757 li
4.9037 90.8757 4.64366 90.9421 4.46107 91.0749 cv
4.27849 91.2077 4.18443 91.4014 4.18443 91.6503 cv
4.18443 91.9048 4.28955 92.0985 4.48874 92.2313 cv
4.68791 92.3641 4.98669 92.4249 5.38506 92.4249 cv
5.78342 92.4249 6.08772 92.3641 6.2869 92.2313 cv
6.49161 92.0985 6.5912 91.9048 6.5912 91.6503 cv
6.5912 91.4014 6.50267 91.2077 6.3201 91.0749 cv
6.14304 90.9421 5.87747 90.8757 5.5289 90.8757 cv
f
5.36292 86.8756 mo
5.36292 85.3928 li
3.44304 86.1342 li
5.36292 86.8756 li
6.82358 88.0098 mo
6.53587 88.0098 li
6.53587 87.6612 li
2.79016 86.2227 li
2.79016 85.769 li
6.53587 84.3305 li
6.53587 83.9321 li
6.82358 83.9321 li
6.82358 85.3983 li
6.53587 85.3983 li
6.53587 84.9502 li
5.65062 85.2877 li
5.65062 86.9862 li
6.53587 87.3237 li
6.53587 86.8811 li
6.82358 86.8811 li
6.82358 88.0098 li
f
5.96046 81.1436 mo
6.27029 81.2155 6.50267 81.3483 6.65759 81.5475 cv
6.81804 81.7467 6.89551 82.0067 6.89551 82.3221 cv
6.89551 82.7426 6.76271 83.0745 6.48608 83.329 cv
6.20944 83.5836 5.84427 83.7108 5.38506 83.7108 cv
4.93137 83.7108 4.56619 83.5836 4.28955 83.329 cv
4.01291 83.0745 3.87459 82.7426 3.87459 82.3221 cv
3.87459 82.145 3.89673 81.9624 3.94099 81.7799 cv
3.98524 81.6028 4.04611 81.4202 4.1291 81.2376 cv
4.86496 81.2376 li
4.86496 81.5254 li
4.616 81.5641 4.43341 81.6471 4.31721 81.7743 cv
4.20103 81.9016 4.14017 82.0842 4.14017 82.3165 cv
4.14017 82.5877 4.2453 82.7924 4.45554 82.9252 cv
4.66579 83.0635 4.97562 83.1299 5.38506 83.1299 cv
5.80554 83.1299 6.11539 83.0635 6.32562 82.9252 cv
6.53587 82.7924 6.63547 82.5877 6.63547 82.3165 cv
6.63547 82.1063 6.58014 81.9348 6.46948 81.8075 cv
6.35883 81.6803 6.1873 81.5917 5.96046 81.542 cv
5.96046 81.1436 li
f
4.23976 80.2915 mo
4.23976 80.7286 li
3.95206 80.7286 li
3.95206 80.2915 li
3.06128 80.2915 li
3.06128 79.7936 li
3.95206 79.7936 li
3.95206 78.8586 li
4.23976 78.8586 li
4.23976 79.7936 li
6.06558 79.7936 li
6.30902 79.7936 6.46948 79.7715 6.53587 79.7217 cv
6.60226 79.6774 6.63547 79.5889 6.63547 79.4616 cv
6.63547 79.3344 6.59673 79.2403 6.51927 79.1795 cv
6.44182 79.1241 6.3201 79.0909 6.14857 79.0854 cv
6.14857 78.7092 li
6.41415 78.7258 6.60226 78.7977 6.71846 78.9249 cv
6.83464 79.0522 6.89551 79.2458 6.89551 79.5059 cv
6.89551 79.7936 6.82912 79.9983 6.70738 80.1145 cv
6.58566 80.2362 6.36989 80.2915 6.06558 80.2915 cv
4.23976 80.2915 li
f
3.06128 78.1283 mo
2.84549 78.0397 li
2.75143 77.8184 li
2.84549 77.6082 li
3.06128 77.5141 li
3.27705 77.6027 li
3.36557 77.8184 li
3.27705 78.0397 li
3.06128 78.1283 li
6.53587 77.492 mo
6.53587 77.0217 li
6.82358 77.0217 li
6.82358 78.4658 li
6.53587 78.4658 li
6.53587 77.9899 li
4.23976 77.9899 li
4.23976 78.4658 li
3.95206 78.4658 li
3.95206 77.492 li
6.53587 77.492 li
f
6.82358 75.5278 mo
4.23976 76.5846 li
4.23976 76.9055 li
3.95206 76.9055 li
3.95206 75.5887 li
4.23976 75.5887 li
4.23976 76.0479 li
6.21497 75.2401 li
4.23976 74.4323 li
4.23976 74.8639 li
3.95206 74.8639 li
3.95206 73.785 li
4.23976 73.785 li
4.23976 74.1059 li
6.82358 75.1626 li
6.82358 75.5278 li
f
5.44038 70.7696 mo
5.44038 72.9108 li
5.46251 72.9108 li
5.84981 72.9108 6.14304 72.8389 6.34222 72.695 cv
6.54141 72.5511 6.63547 72.3354 6.63547 72.0477 cv
6.63547 71.8319 6.58014 71.6548 6.46394 71.511 cv
6.35329 71.3727 6.18178 71.2731 5.95493 71.2177 cv
5.95493 70.8194 li
6.27029 70.8968 6.50821 71.0462 6.66313 71.2565 cv
6.81804 71.4723 6.89551 71.7544 6.89551 72.0975 cv
6.89551 72.518 6.76271 72.8555 6.48608 73.11 cv
6.20944 73.3645 5.84427 73.4917 5.38506 73.4917 cv
4.93137 73.4917 4.56619 73.37 4.28955 73.1155 cv
4.01291 72.8665 3.87459 72.5401 3.87459 72.1307 cv
3.87459 71.6991 4.01291 71.3616 4.27849 71.1292 cv
4.54407 70.8968 4.93137 70.7807 5.44038 70.7696 cv
5.15268 71.3561 mo
4.82071 71.3671 4.56619 71.4391 4.39468 71.5718 cv
4.2287 71.7046 4.14017 71.8872 4.14017 72.1307 cv
4.14017 72.363 4.2287 72.5401 4.40021 72.6729 cv
4.57173 72.8057 4.82071 72.8831 5.15268 72.9108 cv
5.15268 71.3561 li
f
6.82358 68.4293 mo
6.53587 68.4293 li
6.53587 67.9147 li
3.07787 67.9147 li
3.07787 68.4293 li
2.79016 68.4293 li
2.79016 66.8524 li
3.07787 66.8524 li
3.07787 67.367 li
6.49161 67.367 li
6.49161 65.5246 li
5.8166 65.5246 li
5.8166 65.1926 li
6.82358 65.1926 li
6.82358 68.4293 li
f
5.44038 62.061 mo
5.44038 64.2022 li
5.46251 64.2022 li
5.84981 64.2022 6.14304 64.1303 6.34222 63.9864 cv
6.54141 63.8426 6.63547 63.6268 6.63547 63.3391 cv
6.63547 63.1233 6.58014 62.9463 6.46394 62.8024 cv
6.35329 62.6641 6.18178 62.5645 5.95493 62.5092 cv
5.95493 62.1108 li
6.27029 62.1883 6.50821 62.3377 6.66313 62.5479 cv
6.81804 62.7637 6.89551 63.0459 6.89551 63.3889 cv
6.89551 63.8094 6.76271 64.1469 6.48608 64.4014 cv
6.20944 64.6559 5.84427 64.7832 5.38506 64.7832 cv
4.93137 64.7832 4.56619 64.6614 4.28955 64.4069 cv
4.01291 64.158 3.87459 63.8315 3.87459 63.4221 cv
3.87459 62.9905 4.01291 62.653 4.27849 62.4207 cv
4.54407 62.1883 4.93137 62.0721 5.44038 62.061 cv
5.15268 62.6475 mo
4.82071 62.6586 4.56619 62.7305 4.39468 62.8633 cv
4.2287 62.9961 4.14017 63.1786 4.14017 63.4221 cv
4.14017 63.6545 4.2287 63.8315 4.40021 63.9643 cv
4.57173 64.0971 4.82071 64.1746 5.15268 64.2022 cv
5.15268 62.6475 li
f
5.92174 59.5823 mo
5.31313 59.5823 li
5.31313 60.2242 li
5.31313 60.4731 5.36845 60.6557 5.47357 60.7774 cv
5.58423 60.8992 5.74467 60.9545 5.96046 60.9545 cv
6.15964 60.9545 6.3201 60.8936 6.43628 60.7719 cv
6.558 60.6502 6.61333 60.4842 6.61333 60.2739 cv
6.61333 60.0692 6.55247 59.9032 6.42522 59.776 cv
6.29796 59.6487 6.13197 59.5823 5.92174 59.5823 cv
5.03094 59.0844 mo
6.53587 59.0844 li
6.53587 58.6418 li
6.82358 58.6418 li
6.82358 59.5823 li
6.51375 59.5823 li
6.64653 59.693 6.74612 59.8203 6.80698 59.9641 cv
6.8623 60.108 6.89551 60.2795 6.89551 60.4676 cv
6.89551 60.7885 6.81252 61.043 6.64653 61.2311 cv
6.48055 61.4192 6.24817 61.5078 5.96046 61.5078 cv
5.66722 61.5078 5.44038 61.4026 5.2744 61.1869 cv
5.10841 60.9766 5.02542 60.6723 5.02542 60.2795 cv
5.02542 59.5823 li
4.82623 59.5823 li
4.61046 59.5823 4.44447 59.6487 4.32275 59.7815 cv
4.20103 59.9143 4.14017 60.1024 4.14017 60.3403 cv
4.14017 60.5395 4.18997 60.6944 4.27849 60.8106 cv
4.36702 60.9324 4.4998 61.0043 4.67685 61.0319 cv
4.67685 61.2864 li
4.0959 61.2864 li
4.02399 61.1149 3.96866 60.9489 3.92992 60.783 cv
3.89673 60.6225 3.87459 60.4621 3.87459 60.3071 cv
3.87459 59.9088 3.97418 59.61 4.17337 59.3998 cv
4.37254 59.1895 4.65472 59.0844 5.03094 59.0844 cv
f
3.29918 56.1078 mo
3.29918 56.3678 li
3.1664 56.3734 3.06128 56.4121 2.98935 56.484 cv
2.92296 56.5615 2.88423 56.6666 2.88423 56.8105 cv
2.88423 56.9986 2.93954 57.1258 3.03914 57.2033 cv
3.13873 57.2807 3.32132 57.3139 3.58136 57.3139 cv
3.95206 57.3139 li
3.95206 56.5117 li
4.23976 56.5117 li
4.23976 57.3139 li
6.53587 57.3139 li
6.53587 56.6777 li
6.82358 56.6777 li
6.82358 58.2877 li
6.53587 58.2877 li
6.53587 57.8119 li
4.23976 57.8119 li
4.23976 58.2877 li
3.95206 58.2877 li
3.95206 57.8119 li
3.59242 57.8119 li
3.27151 57.8119 3.03362 57.7289 2.86763 57.5629 cv
2.70164 57.3969 2.61865 57.1535 2.61865 56.8271 cv
2.61865 56.7053 2.62971 56.5891 2.65184 56.4674 cv
2.67398 56.3457 2.70717 56.2295 2.75143 56.1078 cv
3.29918 56.1078 li
f
6.82358 54.3761 mo
6.53587 54.3761 li
6.53587 53.8615 li
3.07787 53.8615 li
3.07787 54.3761 li
2.79016 54.3761 li
2.79016 51.073 li
3.68648 51.073 li
3.68648 51.405 li
3.12213 51.405 li
3.12213 53.3138 li
4.47214 53.3138 li
4.47214 51.9361 li
3.96866 51.9361 li
3.96866 51.6042 li
5.30759 51.6042 li
5.30759 51.9361 li
4.80411 51.9361 li
4.80411 53.3138 li
6.53587 53.3138 li
6.53587 52.6665 li
6.82358 52.6665 li
6.82358 54.3761 li
f
3.94652 48.1959 mo
4.66579 48.1959 li
4.66579 48.4837 li
4.52193 48.4947 4.41681 48.5334 4.34488 48.5998 cv
4.27849 48.6718 4.23976 48.7769 4.23976 48.9097 cv
4.23976 49.1531 4.32828 49.3412 4.49426 49.474 cv
4.66579 49.6068 4.90923 49.6677 5.22459 49.6677 cv
6.53587 49.6677 li
6.53587 49.0923 li
6.82358 49.0923 li
6.82358 50.6138 li
6.53587 50.6138 li
6.53587 50.1656 li
4.23422 50.1656 li
4.23422 50.6414 li
3.95206 50.6414 li
3.95206 49.6677 li
4.46107 49.6677 li
4.26189 49.5736 4.11804 49.4519 4.01845 49.297 cv
3.92439 49.1421 3.87459 48.9539 3.87459 48.7326 cv
3.89673 48.4781 li
3.90779 48.3896 3.92439 48.2955 3.94652 48.1959 cv
f
5.92174 45.9939 mo
5.31313 45.9939 li
5.31313 46.6357 li
5.31313 46.8847 5.36845 47.0673 5.47357 47.189 cv
5.58423 47.3107 5.74467 47.366 5.96046 47.366 cv
6.15964 47.366 6.3201 47.3052 6.43628 47.1835 cv
6.558 47.0617 6.61333 46.8958 6.61333 46.6855 cv
6.61333 46.4808 6.55247 46.3148 6.42522 46.1876 cv
6.29796 46.0603 6.13197 45.9939 5.92174 45.9939 cv
5.03094 45.496 mo
6.53587 45.496 li
6.53587 45.0533 li
6.82358 45.0533 li
6.82358 45.9939 li
6.51375 45.9939 li
6.64653 46.1046 6.74612 46.2318 6.80698 46.3757 cv
6.8623 46.5195 6.89551 46.691 6.89551 46.8792 cv
6.89551 47.2001 6.81252 47.4546 6.64653 47.6427 cv
6.48055 47.8308 6.24817 47.9193 5.96046 47.9193 cv
5.66722 47.9193 5.44038 47.8142 5.2744 47.5984 cv
5.10841 47.3882 5.02542 47.0839 5.02542 46.691 cv
5.02542 45.9939 li
4.82623 45.9939 li
4.61046 45.9939 4.44447 46.0603 4.32275 46.1931 cv
4.20103 46.3259 4.14017 46.514 4.14017 46.7519 cv
4.14017 46.9511 4.18997 47.106 4.27849 47.2222 cv
4.36702 47.3439 4.4998 47.4158 4.67685 47.4435 cv
4.67685 47.698 li
4.0959 47.698 li
4.02399 47.5265 3.96866 47.3605 3.92992 47.1945 cv
3.89673 47.0341 3.87459 46.8736 3.87459 46.7187 cv
3.87459 46.3203 3.97418 46.0216 4.17337 45.8113 cv
4.37254 45.6011 4.65472 45.496 5.03094 45.496 cv
f
5.96046 42.0546 mo
6.27029 42.1265 6.50267 42.2593 6.65759 42.4585 cv
6.81804 42.6577 6.89551 42.9177 6.89551 43.2331 cv
6.89551 43.6536 6.76271 43.9855 6.48608 44.2401 cv
6.20944 44.4946 5.84427 44.6218 5.38506 44.6218 cv
4.93137 44.6218 4.56619 44.4946 4.28955 44.2401 cv
4.01291 43.9855 3.87459 43.6536 3.87459 43.2331 cv
3.87459 43.056 3.89673 42.8735 3.94099 42.6909 cv
3.98524 42.5138 4.04611 42.3312 4.1291 42.1487 cv
4.86496 42.1487 li
4.86496 42.4364 li
4.616 42.4751 4.43341 42.5581 4.31721 42.6853 cv
4.20103 42.8126 4.14017 42.9952 4.14017 43.2276 cv
4.14017 43.4987 4.2453 43.7034 4.45554 43.8362 cv
4.66579 43.9745 4.97562 44.0409 5.38506 44.0409 cv
5.80554 44.0409 6.11539 43.9745 6.32562 43.8362 cv
6.53587 43.7034 6.63547 43.4987 6.63547 43.2276 cv
6.63547 43.0173 6.58014 42.8458 6.46948 42.7185 cv
6.35883 42.5913 6.1873 42.5028 5.96046 42.453 cv
5.96046 42.0546 li
f
4.23976 41.2026 mo
4.23976 41.6397 li
3.95206 41.6397 li
3.95206 41.2026 li
3.06128 41.2026 li
3.06128 40.7046 li
3.95206 40.7046 li
3.95206 39.7696 li
4.23976 39.7696 li
4.23976 40.7046 li
6.06558 40.7046 li
6.30902 40.7046 6.46948 40.6825 6.53587 40.6327 cv
6.60226 40.5884 6.63547 40.4999 6.63547 40.3726 cv
6.63547 40.2454 6.59673 40.1513 6.51927 40.0905 cv
6.44182 40.0351 6.3201 40.0019 6.14857 39.9964 cv
6.14857 39.6202 li
6.41415 39.6368 6.60226 39.7087 6.71846 39.836 cv
6.83464 39.9632 6.89551 40.1569 6.89551 40.4169 cv
6.89551 40.7046 6.82912 40.9093 6.70738 41.0255 cv
6.58566 41.1472 6.36989 41.2026 6.06558 41.2026 cv
4.23976 41.2026 li
f
3.06128 39.0393 mo
2.84549 38.9507 li
2.75143 38.7294 li
2.84549 38.5192 li
3.06128 38.4251 li
3.27705 38.5137 li
3.36557 38.7294 li
3.27705 38.9507 li
3.06128 39.0393 li
6.53587 38.403 mo
6.53587 37.9327 li
6.82358 37.9327 li
6.82358 39.3768 li
6.53587 39.3768 li
6.53587 38.9009 li
4.23976 38.9009 li
4.23976 39.3768 li
3.95206 39.3768 li
3.95206 38.403 li
6.53587 38.403 li
f
6.63547 36.14 mo
6.63547 35.8745 6.53033 35.6753 6.3201 35.537 cv
6.10985 35.4042 5.8 35.3323 5.38506 35.3323 cv
4.97562 35.3323 4.66579 35.4042 4.45554 35.537 cv
4.2453 35.6753 4.14017 35.8745 4.14017 36.14 cv
4.14017 36.4056 4.2453 36.6103 4.45554 36.7431 cv
4.66579 36.8814 4.97562 36.9478 5.38506 36.9478 cv
5.8 36.9478 6.10985 36.8814 6.3201 36.7431 cv
6.53033 36.6103 6.63547 36.4056 6.63547 36.14 cv
6.89551 36.14 mo
6.89551 36.5605 6.76271 36.8925 6.48608 37.147 cv
6.20944 37.4015 5.84427 37.5288 5.38506 37.5288 cv
4.93137 37.5288 4.56619 37.4071 4.28955 37.1525 cv
4.01291 36.898 3.87459 36.5605 3.87459 36.14 cv
3.87459 35.7195 4.01291 35.3876 4.28955 35.1331 cv
4.56619 34.8786 4.93137 34.7513 5.38506 34.7513 cv
5.84427 34.7513 6.20944 34.8786 6.48608 35.1331 cv
6.76271 35.3876 6.89551 35.7195 6.89551 36.14 cv
f
6.82358 34.2478 mo
6.53587 34.2478 li
6.53587 33.7997 li
4.23976 33.7997 li
4.23976 34.2755 li
3.95206 34.2755 li
3.95206 33.3017 li
4.46107 33.3017 li
4.27296 33.2132 4.12357 33.0915 4.02399 32.9476 cv
3.92439 32.8037 3.87459 32.6322 3.87459 32.4331 cv
3.87459 32.1177 3.96866 31.8853 4.14571 31.7359 cv
4.32828 31.5865 4.61046 31.5091 4.99776 31.5091 cv
6.53587 31.5091 li
6.53587 31.0665 li
6.82358 31.0665 li
6.82358 32.4386 li
6.53587 32.4386 li
6.53587 32.007 li
5.15268 32.007 li
4.80411 32.007 4.56619 32.0513 4.43341 32.1398 cv
4.30063 32.2283 4.23422 32.3777 4.23422 32.5935 cv
4.23422 32.8259 4.32275 33.0029 4.48874 33.1247 cv
4.66025 33.2464 4.9037 33.3017 5.22459 33.3017 cv
6.53587 33.3017 li
6.53587 32.8701 li
6.82358 32.8701 li
6.82358 34.2478 li
f
gsave
21.0569 136.4 mo
197.474 136.4 li
197.474 15.8956 li
21.0569 15.8956 li
21.0569 136.4 li
clp
24.6891 130.542 mo
27.8025 130.542 li
27.8025 130.271 li
24.6891 130.271 li
24.6891 130.542 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
.6916 lw
0 lj
24.6891 130.542 mo
27.8025 130.542 li
27.8025 130.271 li
24.6891 130.271 li
24.6891 130.542 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
grestore
35.0666 129.782 mo
38.18 129.782 li
38.18 129.51 li
35.0666 129.51 li
35.0666 129.782 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
.6916 lw
0 lj
35.0666 129.782 mo
38.18 129.782 li
38.18 129.51 li
35.0666 129.51 li
35.0666 129.782 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
45.4441 128.859 mo
48.5575 128.859 li
48.5575 128.478 li
45.4441 128.478 li
45.4441 128.859 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
45.4441 128.859 mo
48.5575 128.859 li
48.5575 128.478 li
45.4441 128.478 li
45.4441 128.859 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
55.8215 127.623 mo
58.9349 127.623 li
58.9349 127.229 li
55.8215 127.229 li
55.8215 127.623 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
55.8215 127.623 mo
58.9349 127.623 li
58.9349 127.229 li
55.8215 127.229 li
55.8215 127.623 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
66.199 125.98 mo
69.3124 125.98 li
69.3124 125.546 li
66.199 125.546 li
66.199 125.98 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
66.199 125.98 mo
69.3124 125.98 li
69.3124 125.546 li
66.199 125.546 li
66.199 125.98 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
76.5765 124.025 mo
79.6899 124.025 li
79.6899 123.482 li
76.5765 123.482 li
76.5765 124.025 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
76.5765 124.025 mo
79.6899 124.025 li
79.6899 123.482 li
76.5765 123.482 li
76.5765 124.025 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
86.954 121.105 mo
90.0674 121.105 li
90.0674 120.44 li
86.954 120.44 li
86.954 121.105 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
86.954 121.105 mo
90.0674 121.105 li
90.0674 120.44 li
86.954 120.44 li
86.954 121.105 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
97.3315 117.507 mo
100.445 117.507 li
100.445 116.856 li
97.3315 116.856 li
97.3315 117.507 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
97.3315 117.507 mo
100.445 117.507 li
100.445 116.856 li
97.3315 116.856 li
97.3315 117.507 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
107.709 112.891 mo
110.822 112.891 li
110.822 112.184 li
107.709 112.184 li
107.709 112.891 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
107.709 112.891 mo
110.822 112.891 li
110.822 112.184 li
107.709 112.184 li
107.709 112.891 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
118.087 107.459 mo
121.2 107.459 li
121.2 106.522 li
118.087 106.522 li
118.087 107.459 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
118.086 107.459 mo
121.2 107.459 li
121.2 106.522 li
118.086 106.522 li
118.086 107.459 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
128.464 100.399 mo
131.577 100.399 li
131.577 99.4074 li
128.464 99.4074 li
128.464 100.399 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
128.464 100.399 mo
131.577 100.399 li
131.577 99.4074 li
128.464 99.4074 li
128.464 100.399 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
138.841 92.143 mo
141.955 92.143 li
141.955 91.206 li
138.841 91.206 li
138.841 92.143 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
138.841 92.143 mo
141.955 92.143 li
141.955 91.206 li
138.841 91.206 li
138.841 92.143 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
149.219 83.3715 mo
152.332 83.3715 li
152.332 82.4752 li
149.219 82.4752 li
149.219 83.3715 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
149.219 83.3715 mo
152.332 83.3715 li
152.332 82.4752 li
149.219 82.4752 li
149.219 83.3715 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
159.596 74.2876 mo
162.71 74.2876 li
162.71 73.3913 li
159.596 73.3913 li
159.596 74.2876 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
159.596 74.2876 mo
162.71 74.2876 li
162.71 73.3913 li
159.596 73.3913 li
159.596 74.2876 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
169.974 66.4665 mo
173.087 66.4665 li
173.087 65.4208 li
169.974 65.4208 li
169.974 66.4665 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
169.974 66.4665 mo
173.087 66.4665 li
173.087 65.4208 li
169.974 65.4208 li
169.974 66.4665 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
180.351 60.9673 mo
183.465 60.9673 li
183.465 60.0441 li
180.351 60.0441 li
180.351 60.9673 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
180.351 60.9673 mo
183.465 60.9673 li
183.465 60.0441 li
180.351 60.0441 li
180.351 60.9673 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
gsave
21.0569 136.4 mo
197.474 136.4 li
197.474 15.8956 li
21.0569 15.8956 li
21.0569 136.4 li
clp
190.729 58.7541 mo
193.842 58.7541 li
193.842 57.8578 li
190.729 57.8578 li
190.729 58.7541 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
190.729 58.7541 mo
193.842 58.7541 li
193.842 57.8578 li
190.729 57.8578 li
190.729 58.7541 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
grestore
gsave
21.0569 136.4 mo
197.474 136.4 li
197.474 15.8956 li
21.0569 15.8956 li
21.0569 136.4 li
clp
24.6891 130.542 mo
27.8025 130.542 li
27.8025 130.271 li
24.6891 130.271 li
24.6891 130.542 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
24.6891 130.542 mo
27.8025 130.542 li
27.8025 130.271 li
24.6891 130.271 li
24.6891 130.542 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
grestore
35.0666 129.782 mo
38.18 129.782 li
38.18 129.51 li
35.0666 129.51 li
35.0666 129.782 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
35.0666 129.782 mo
38.18 129.782 li
38.18 129.51 li
35.0666 129.51 li
35.0666 129.782 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
45.4441 128.858 mo
48.5575 128.858 li
48.5575 128.477 li
45.4441 128.477 li
45.4441 128.858 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
45.4441 128.858 mo
48.5575 128.858 li
48.5575 128.477 li
45.4441 128.477 li
45.4441 128.858 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
55.8215 127.62 mo
58.9349 127.62 li
58.9349 127.226 li
55.8215 127.226 li
55.8215 127.62 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
55.8215 127.62 mo
58.9349 127.62 li
58.9349 127.226 li
55.8215 127.226 li
55.8215 127.62 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
66.199 125.974 mo
69.3124 125.974 li
69.3124 125.538 li
66.199 125.538 li
66.199 125.974 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
66.199 125.974 mo
69.3124 125.974 li
69.3124 125.538 li
66.199 125.538 li
66.199 125.974 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
76.5765 124.011 mo
79.6899 124.011 li
79.6899 123.466 li
76.5765 123.466 li
76.5765 124.011 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
76.5765 124.011 mo
79.6899 124.011 li
79.6899 123.466 li
76.5765 123.466 li
76.5765 124.011 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
86.954 121.073 mo
90.0674 121.073 li
90.0674 120.401 li
86.954 120.401 li
86.954 121.073 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
86.954 121.073 mo
90.0674 121.073 li
90.0674 120.401 li
86.954 120.401 li
86.954 121.073 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
97.3315 117.432 mo
100.445 117.432 li
100.445 116.769 li
97.3315 116.769 li
97.3315 117.432 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
97.3315 117.432 mo
100.445 117.432 li
100.445 116.769 li
97.3315 116.769 li
97.3315 117.432 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
107.709 112.718 mo
110.822 112.718 li
110.822 111.991 li
107.709 111.991 li
107.709 112.718 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
107.709 112.718 mo
110.822 112.718 li
110.822 111.991 li
107.709 111.991 li
107.709 112.718 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
118.087 107.086 mo
121.2 107.086 li
121.2 106.102 li
118.087 106.102 li
118.087 107.086 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
118.086 107.086 mo
121.2 107.086 li
121.2 106.102 li
118.086 106.102 li
118.086 107.086 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
128.464 99.5642 mo
131.577 99.5642 li
131.577 98.4849 li
128.464 98.4849 li
128.464 99.5642 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
128.464 99.5642 mo
131.577 99.5642 li
131.577 98.4849 li
128.464 98.4849 li
128.464 99.5642 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
138.841 90.3399 mo
141.955 90.3399 li
141.955 89.2535 li
138.841 89.2535 li
138.841 90.3399 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
138.841 90.3399 mo
141.955 90.3399 li
141.955 89.2535 li
138.841 89.2535 li
138.841 90.3399 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
149.219 79.7215 mo
152.332 79.7215 li
152.332 78.5687 li
149.219 78.5687 li
149.219 79.7215 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
149.219 79.7215 mo
152.332 79.7215 li
152.332 78.5687 li
149.219 78.5687 li
149.219 79.7215 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
159.596 67.1284 mo
162.71 67.1284 li
162.71 65.744 li
159.596 65.744 li
159.596 67.1284 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
159.596 67.1284 mo
162.71 67.1284 li
162.71 65.744 li
159.596 65.744 li
159.596 67.1284 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
169.974 53.481 mo
173.087 53.481 li
173.087 51.26 li
169.974 51.26 li
169.974 53.481 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
169.974 53.481 mo
173.087 53.481 li
173.087 51.26 li
169.974 51.26 li
169.974 53.481 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
180.351 39.1945 mo
183.465 39.1945 li
183.465 35.531 li
180.351 35.531 li
180.351 39.1945 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
180.351 39.1945 mo
183.465 39.1945 li
183.465 35.531 li
180.351 35.531 li
180.351 39.1945 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
gsave
21.0569 136.4 mo
197.474 136.4 li
197.474 15.8956 li
21.0569 15.8956 li
21.0569 136.4 li
clp
190.729 27.532 mo
193.842 27.532 li
193.842 21.3732 li
190.729 21.3732 li
190.729 27.532 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
190.729 27.532 mo
193.842 27.532 li
193.842 21.3732 li
190.729 21.3732 li
190.729 27.532 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
grestore
1 lc
1 lj
26.2457 130.542 mo
26.2457 130.923 li
1 /0 /CSD get_res sepcs
.753 sep
@
26.2457 130.271 mo
26.2457 129.945 li
@
25.4674 130.923 mo
27.0241 130.923 li
@
25.4674 129.945 mo
27.0241 129.945 li
@
36.6232 129.782 mo
36.6232 130.108 li
@
36.6232 129.51 mo
36.6232 129.13 li
@
35.8449 130.108 mo
37.4016 130.108 li
@
35.8449 129.13 mo
37.4016 129.13 li
@
47.0007 128.859 mo
47.0007 129.239 li
@
47.0007 128.478 mo
47.0007 127.99 li
@
46.2224 129.239 mo
47.7791 129.239 li
@
46.2224 127.99 mo
47.7791 127.99 li
@
57.3782 127.623 mo
57.3782 128.153 li
@
57.3782 127.229 mo
57.3782 126.849 li
@
56.5999 128.153 mo
58.1565 128.153 li
@
56.5999 126.849 mo
58.1565 126.849 li
@
67.7557 125.98 mo
67.7557 126.632 li
@
67.7557 125.546 mo
67.7557 124.894 li
@
66.9773 126.632 mo
68.534 126.632 li
@
66.9773 124.894 mo
68.534 124.894 li
@
78.1332 124.025 mo
78.1332 124.514 li
@
78.1332 123.482 mo
78.1332 122.775 li
@
77.3548 124.514 mo
78.9115 124.514 li
@
77.3548 122.776 mo
78.9115 122.776 li
@
88.5106 121.105 mo
88.5106 121.689 li
@
88.5106 120.44 mo
88.5106 119.68 li
@
87.7323 121.689 mo
89.289 121.689 li
@
87.7323 119.68 mo
89.289 119.68 li
@
98.8881 117.507 mo
98.8881 118.268 li
@
98.8881 116.855 mo
98.8881 116.095 li
@
98.1098 118.268 mo
99.6665 118.268 li
@
98.1098 116.095 mo
99.6665 116.095 li
@
109.266 112.891 mo
109.266 113.814 li
@
109.266 112.185 mo
109.266 111.315 li
@
108.487 113.814 mo
110.044 113.814 li
@
108.487 111.316 mo
110.044 111.316 li
@
119.643 107.459 mo
119.643 108.328 li
@
119.643 106.522 mo
119.643 105.504 li
@
118.865 108.328 mo
120.421 108.328 li
@
118.865 105.504 mo
120.421 105.504 li
@
130.021 100.399 mo
130.021 101.43 li
@
130.021 99.4074 mo
130.021 98.1716 li
@
129.242 101.431 mo
130.799 101.431 li
@
129.242 98.1718 mo
130.799 98.1718 li
@
140.398 92.143 mo
140.398 93.4464 li
@
140.398 91.2061 mo
140.398 89.9162 li
@
139.62 93.4466 mo
141.176 93.4466 li
@
139.62 89.9162 mo
141.176 89.9162 li
@
150.776 83.3715 mo
150.776 84.5935 li
@
150.776 82.4753 mo
150.776 81.2802 li
@
149.997 84.5935 mo
151.554 84.5935 li
@
149.997 81.2804 mo
151.554 81.2804 li
@
161.153 74.2876 mo
161.153 75.5234 li
@
161.153 73.3915 mo
161.153 72.1015 li
@
160.375 75.5233 mo
161.931 75.5233 li
@
160.375 72.1015 mo
161.931 72.1015 li
@
171.531 66.4665 mo
171.531 67.5391 li
@
171.531 65.421 mo
171.531 64.1176 li
@
170.752 67.5392 mo
172.309 67.5392 li
@
170.752 64.1175 mo
172.309 64.1175 li
@
181.908 60.9673 mo
181.908 62.3252 li
@
181.908 60.044 mo
181.908 58.9035 li
@
181.13 62.3251 mo
182.686 62.3251 li
@
181.13 58.9034 mo
182.686 58.9034 li
@
192.285 58.7541 mo
192.285 60.0982 li
@
192.285 57.8579 mo
192.285 56.8395 li
@
191.507 60.0983 mo
193.064 60.0983 li
@
191.507 56.8395 mo
193.064 56.8395 li
@
0 lc
[2.21312 .94848 ] 0 dsh
26.2457 130.404 mo
27.923 130.3 li
29.6002 130.192 li
31.2774 130.078 li
32.9543 129.959 li
34.6315 129.834 li
36.3087 129.704 li
37.9859 129.568 li
39.6632 129.425 li
41.3404 129.276 li
43.0172 129.12 li
44.6945 128.957 li
46.3717 128.787 li
48.0489 128.608 li
49.7261 128.422 li
51.4034 128.226 li
53.0806 128.022 li
54.7574 127.809 li
56.4347 127.586 li
58.1119 127.353 li
59.7891 127.109 li
61.4664 126.854 li
63.1436 126.588 li
64.8208 126.31 li
66.4976 126.02 li
68.1749 125.716 li
69.8521 125.4 li
71.5293 125.069 li
73.2066 124.724 li
74.8838 124.363 li
76.5606 123.987 li
78.2378 123.595 li
79.9151 123.186 li
81.5923 122.759 li
83.2695 122.313 li
84.9467 121.849 li
86.624 121.366 li
88.3008 120.862 li
89.978 120.337 li
91.6553 119.79 li
93.3325 119.222 li
95.0097 118.63 li
96.687 118.014 li
98.3642 117.373 li
100.041 116.708 li
101.718 116.016 li
103.395 115.298 li
105.073 114.552 li
106.75 113.779 li
108.427 112.976 li
110.104 112.145 li
111.781 111.283 li
113.458 110.392 li
115.136 109.469 li
116.813 108.516 li
118.49 107.53 li
120.167 106.514 li
121.844 105.465 li
123.521 104.384 li
125.199 103.271 li
126.876 102.127 li
128.553 100.951 li
130.23 99.7442 li
131.908 98.5069 li
133.584 97.2406 li
135.262 95.9456 li
136.939 94.6236 li
138.616 93.2756 li
140.293 91.9039 li
141.971 90.51 li
143.648 89.0967 li
145.325 87.6657 li
147.002 86.2205 li
148.679 84.7638 li
150.356 83.2992 li
152.034 81.8302 li
153.711 80.3609 li
155.388 78.8954 li
157.065 77.4391 li
158.742 75.9959 li
160.419 74.5716 li
162.096 73.171 li
163.774 71.8 li
165.451 70.4647 li
167.128 69.17 li
168.805 67.9227 li
170.482 66.7288 li
172.159 65.5934 li
173.837 64.5236 li
175.514 63.5241 li
177.191 62.601 li
178.868 61.7592 li
180.545 61.004 li
182.222 60.3396 li
183.9 59.7701 li
185.577 59.2991 li
187.254 58.9299 li
188.931 58.6644 li
190.608 58.5043 li
192.285 58.451 li
1 /0 /CSD get_res sepcs
.588 sep
@
1 lc
[] 0 dsh
26.2457 130.542 mo
26.2457 130.922 li
1 /0 /CSD get_res sepcs
.549 sep
@
26.2457 130.271 mo
26.2457 129.945 li
@
25.4674 130.922 mo
27.0241 130.922 li
@
25.4674 129.945 mo
27.0241 129.945 li
@
36.6232 129.782 mo
36.6232 130.108 li
@
36.6232 129.51 mo
36.6232 129.129 li
@
35.8449 130.108 mo
37.4016 130.108 li
@
35.8449 129.129 mo
37.4016 129.129 li
@
47.0007 128.858 mo
47.0007 129.238 li
@
47.0007 128.477 mo
47.0007 127.988 li
@
46.2224 129.238 mo
47.7791 129.238 li
@
46.2224 127.988 mo
47.7791 127.988 li
@
57.3782 127.62 mo
57.3782 128.151 li
@
57.3782 127.226 mo
57.3782 126.845 li
@
56.5999 128.151 mo
58.1565 128.151 li
@
56.5999 126.845 mo
58.1565 126.845 li
@
67.7557 125.974 mo
67.7557 126.627 li
@
67.7557 125.538 mo
67.7557 124.993 li
@
66.9773 126.627 mo
68.534 126.627 li
@
66.9773 124.993 mo
68.534 124.993 li
@
78.1332 124.011 mo
78.1332 124.502 li
@
78.1332 123.466 mo
78.1332 122.755 li
@
77.3548 124.502 mo
78.9115 124.502 li
@
77.3548 122.755 mo
78.9115 122.755 li
@
88.5106 121.073 mo
88.5106 121.662 li
@
88.5106 120.401 mo
88.5106 119.633 li
@
87.7323 121.662 mo
89.289 121.662 li
@
87.7323 119.633 mo
89.289 119.633 li
@
98.8881 117.432 mo
98.8881 118.203 li
@
98.8881 116.77 mo
98.8881 115.996 li
@
98.1098 118.203 mo
99.6665 118.203 li
@
98.1098 115.996 mo
99.6665 115.996 li
@
109.266 112.718 mo
109.266 113.665 li
@
109.266 111.991 mo
109.266 111.095 li
@
108.487 113.665 mo
110.044 113.665 li
@
108.487 111.095 mo
110.044 111.095 li
@
119.643 107.086 mo
119.643 107.994 li
@
119.643 106.102 mo
119.643 105.029 li
@
118.865 107.994 mo
120.421 107.994 li
@
118.865 105.029 mo
120.421 105.029 li
@
130.021 99.5642 mo
130.021 100.681 li
@
130.021 98.4849 mo
130.021 97.1298 li
@
129.242 100.681 mo
130.799 100.681 li
@
129.242 97.13 mo
130.799 97.13 li
@
140.398 90.3399 mo
140.398 91.8361 li
@
140.398 89.2534 mo
140.398 87.7413 li
@
139.62 91.8362 mo
141.176 91.8362 li
@
139.62 87.7413 mo
141.176 87.7413 li
@
150.776 79.7215 mo
150.776 81.2699 li
@
150.776 78.5685 mo
150.776 77.0063 li
@
149.997 81.2699 mo
151.554 81.2699 li
@
149.997 77.0062 mo
151.554 77.0062 li
@
161.153 67.1284 mo
161.153 68.9847 li
@
161.153 65.7442 mo
161.153 63.6888 li
@
160.375 68.9847 mo
161.931 68.9847 li
@
160.375 63.6888 mo
161.931 63.6888 li
@
171.531 53.481 mo
171.531 56.6676 li
@
171.531 51.2599 mo
171.531 48.2603 li
@
170.752 56.6677 mo
172.309 56.6677 li
@
170.752 48.2603 mo
172.309 48.2603 li
@
181.908 39.1945 mo
181.908 43.537 li
@
181.908 35.5309 mo
181.908 30.9043 li
@
181.13 43.537 mo
182.686 43.537 li
@
181.13 30.9043 mo
182.686 30.9043 li
@
192.285 27.532 mo
192.285 36.471 li
@
192.285 21.3731 mo
192.285 21.3731 li
@
191.507 36.4709 mo
193.064 36.4709 li
@
191.507 21.3731 mo
193.064 21.3731 li
@
0 lc
[2.21312 .94848 ] 0 dsh
26.2457 130.404 mo
27.923 130.3 li
29.6002 130.191 li
31.2774 130.078 li
32.9543 129.959 li
34.6315 129.834 li
36.3087 129.704 li
37.9859 129.567 li
39.6632 129.425 li
41.3404 129.276 li
43.0172 129.12 li
44.6945 128.956 li
46.3717 128.785 li
48.0489 128.607 li
49.7261 128.42 li
51.4034 128.224 li
53.0806 128.02 li
54.7574 127.806 li
56.4347 127.583 li
58.1119 127.35 li
59.7891 127.105 li
61.4664 126.85 li
63.1436 126.584 li
64.8208 126.305 li
66.4976 126.014 li
68.1749 125.709 li
69.8521 125.392 li
71.5293 125.06 li
73.2066 124.714 li
74.8838 124.352 li
76.5606 123.974 li
78.2378 123.579 li
79.9151 123.168 li
81.5923 122.738 li
83.2695 122.29 li
84.9467 121.823 li
86.624 121.335 li
88.3008 120.827 li
89.978 120.297 li
91.6553 119.745 li
93.3325 119.17 li
95.0097 118.57 li
96.687 117.946 li
98.3642 117.296 li
100.041 116.619 li
101.718 115.915 li
103.395 115.182 li
105.073 114.421 li
106.75 113.629 li
108.427 112.806 li
110.104 111.95 li
111.781 111.062 li
113.458 110.14 li
115.136 109.183 li
116.813 108.19 li
118.49 107.16 li
120.167 106.093 li
121.844 104.987 li
123.521 103.842 li
125.199 102.657 li
126.876 101.431 li
128.553 100.163 li
130.23 98.8524 li
131.908 97.4985 li
133.584 96.1014 li
135.262 94.6598 li
136.939 93.173 li
138.616 91.6412 li
140.293 90.0636 li
141.971 88.4401 li
143.648 86.7704 li
145.325 85.0544 li
147.002 83.2918 li
148.679 81.4834 li
150.356 79.6287 li
152.034 77.7286 li
153.711 75.783 li
155.388 73.7924 li
157.065 71.7579 li
158.742 69.6803 li
160.419 67.5601 li
162.096 65.3983 li
163.774 63.1967 li
165.451 60.9563 li
167.128 58.6784 li
168.805 56.3645 li
170.482 54.0166 li
172.159 51.6367 li
173.837 49.2264 li
175.514 46.7876 li
177.191 44.3227 li
178.868 41.8345 li
180.545 39.3246 li
182.222 36.7958 li
183.9 34.2507 li
185.577 31.6917 li
187.254 29.1218 li
188.931 26.5435 li
190.608 23.9597 li
192.285 21.3731 li
1 /0 /CSD get_res sepcs
.247 sep
@
1 lc
[] 0 dsh
24.6891 130.379 mo
27.8025 130.379 li
1 /0 /CSD get_res sepcs
.753 sep
@
35.0666 129.673 mo
38.18 129.673 li
@
45.4441 128.669 mo
48.5575 128.669 li
@
55.8215 127.447 mo
58.9349 127.447 li
@
66.199 125.79 mo
69.3124 125.79 li
@
76.5765 123.699 mo
79.6899 123.699 li
@
86.954 120.766 mo
90.0674 120.766 li
@
97.3315 117.1 mo
100.445 117.1 li
@
107.709 112.592 mo
110.822 112.592 li
@
118.086 106.971 mo
121.2 106.971 li
@
128.464 99.9098 mo
131.577 99.9098 li
@
138.841 91.8172 mo
141.955 91.8172 li
@
149.219 82.8555 mo
152.332 82.8555 li
@
159.596 73.8124 mo
162.71 73.8124 li
@
169.974 65.9098 mo
173.087 65.9098 li
@
180.351 60.5328 mo
183.465 60.5328 li
@
190.729 58.306 mo
193.842 58.306 li
@
24.6891 130.379 mo
27.8025 130.379 li
1 /0 /CSD get_res sepcs
.549 sep
@
35.0666 129.673 mo
38.18 129.673 li
@
45.4441 128.667 mo
48.5575 128.667 li
@
55.8215 127.444 mo
58.9349 127.444 li
@
66.199 125.783 mo
69.3124 125.783 li
@
76.5765 123.684 mo
79.6899 123.684 li
@
86.954 120.73 mo
90.0674 120.73 li
@
97.3315 117.018 mo
100.445 117.018 li
@
107.709 112.41 mo
110.822 112.41 li
@
118.086 106.573 mo
121.2 106.573 li
@
128.464 99.0328 mo
131.577 99.0328 li
@
138.841 89.963 mo
141.955 89.963 li
@
149.219 79.0595 mo
152.332 79.0595 li
@
159.596 66.3986 mo
162.71 66.3986 li
@
169.974 52.3162 mo
173.087 52.3162 li
@
180.351 37.5712 mo
183.465 37.5712 li
@
190.729 21.3731 mo
193.842 21.3731 li
@
.494 lw
2 lc
0 lj
21.057 136.4 mo
21.057 15.8956 li
1 /0 /CSD get_res sepcs
.85 sep
@
197.474 136.4 mo
197.474 15.8956 li
@
21.057 136.4 mo
197.474 136.4 li
@
21.057 15.8956 mo
197.474 15.8956 li
@
38.5998 5.99663 mo
38.4433 6.48035 38.1872 6.85026 37.8315 7.09212 cv
37.4688 7.3411 37.0135 7.46203 36.4657 7.46203 cv
36.1243 7.46203 35.8042 7.40512 35.5196 7.2913 cv
35.228 7.17749 34.9719 7.01387 34.7513 6.78624 cv
34.4881 6.53015 34.2961 6.23138 34.168 5.90415 cv
34.04 5.57693 33.9831 5.1999 33.9831 4.7802 cv
33.9831 3.97637 34.2107 3.32903 34.6802 2.83108 cv
35.1426 2.34024 35.7544 2.09126 36.5226 2.09126 cv
36.8072 2.09126 37.1059 2.13394 37.4261 2.20508 cv
37.7391 2.27621 38.0876 2.39003 38.4575 2.53942 cv
38.4575 3.7345 li
38.0663 3.7345 li
37.9809 3.30057 37.8031 2.98046 37.547 2.77417 cv
37.2909 2.56787 36.9281 2.46117 36.4657 2.46117 cv
35.9109 2.46117 35.4912 2.66035 35.2066 3.0516 cv
34.9221 3.44996 34.7798 4.02616 34.7798 4.7802 cv
34.7798 5.54136 34.9221 6.11756 35.2066 6.50881 cv
35.4912 6.90717 35.9109 7.09924 36.4657 7.09924 cv
36.8499 7.09924 37.1629 7.00676 37.4189 6.82181 cv
37.6679 6.63685 37.8458 6.36654 37.9596 5.99663 cv
38.5998 5.99663 li
f
39.3183 7.36955 mo
39.3183 6.99965 li
39.8945 6.99965 li
39.8945 2.33312 li
39.2827 2.33312 li
39.2827 1.96322 li
40.5347 1.96322 li
40.5347 4.33205 li
40.6485 4.09018 40.805 3.89812 40.99 3.77007 cv
41.1749 3.64203 41.3954 3.578 41.6515 3.578 cv
42.057 3.578 42.3558 3.69893 42.5478 3.92657 cv
42.7399 4.16132 42.8395 4.52411 42.8395 5.02206 cv
42.8395 6.99965 li
43.4086 6.99965 li
43.4086 7.36955 li
41.6444 7.36955 li
41.6444 6.99965 li
42.1993 6.99965 li
42.1993 5.22125 li
42.1993 4.77309 42.1424 4.4672 42.0285 4.29648 cv
41.9147 4.13286 41.7227 4.0475 41.4452 4.0475 cv
41.1465 4.0475 40.9188 4.16132 40.7623 4.37473 cv
40.6058 4.58813 40.5347 4.90113 40.5347 5.31372 cv
40.5347 6.99965 li
41.0896 6.99965 li
41.0896 7.36955 li
39.3183 7.36955 li
f
47.4633 5.59115 mo
44.7104 5.59115 li
44.7104 5.61961 li
44.7104 6.11756 44.8028 6.49458 44.9878 6.75067 cv
45.1727 7.00676 45.4502 7.12769 45.8201 7.12769 cv
46.0975 7.12769 46.3251 7.05655 46.5101 6.90717 cv
46.6879 6.7649 46.816 6.54437 46.8871 6.25272 cv
47.3993 6.25272 li
47.2997 6.65819 47.1077 6.96408 46.8373 7.16326 cv
46.5599 7.36244 46.1971 7.46203 45.7561 7.46203 cv
45.2154 7.46203 44.7815 7.2913 44.4543 6.93562 cv
44.127 6.57994 43.9634 6.11045 43.9634 5.52002 cv
43.9634 4.9367 44.1199 4.4672 44.4472 4.11152 cv
44.7673 3.75584 45.187 3.578 45.7134 3.578 cv
46.2682 3.578 46.7022 3.75584 47.0009 4.0973 cv
47.2997 4.43875 47.4491 4.9367 47.4633 5.59115 cv
46.7093 5.22125 mo
46.6951 4.79443 46.6026 4.4672 46.4319 4.24668 cv
46.2611 4.03327 46.0264 3.91946 45.7134 3.91946 cv
45.4146 3.91946 45.187 4.03327 45.0163 4.2538 cv
44.8455 4.47432 44.7459 4.79443 44.7104 5.22125 cv
46.7093 5.22125 li
f
51.2193 3.67048 mo
51.2193 4.59525 li
50.8494 4.59525 li
50.8351 4.41029 50.7853 4.27514 50.7 4.18266 cv
50.6075 4.0973 50.4723 4.0475 50.3016 4.0475 cv
49.9886 4.0475 49.7467 4.16132 49.576 4.37473 cv
49.4053 4.59525 49.3271 4.90825 49.3271 5.31372 cv
49.3271 6.99965 li
50.0669 6.99965 li
50.0669 7.36955 li
48.1106 7.36955 li
48.1106 6.99965 li
48.6868 6.99965 li
48.6868 4.04039 li
48.0751 4.04039 li
48.0751 3.67759 li
49.3271 3.67759 li
49.3271 4.33205 li
49.448 4.07596 49.6045 3.891 49.8037 3.76296 cv
50.0028 3.64203 50.2447 3.578 50.5293 3.578 cv
50.6288 3.578 50.7427 3.59223 50.8565 3.60646 cv
50.9703 3.62069 51.0912 3.64203 51.2193 3.67048 cv
f
54.6195 3.67048 mo
54.6195 4.59525 li
54.2496 4.59525 li
54.2354 4.41029 54.1856 4.27514 54.1003 4.18266 cv
54.0078 4.0973 53.8726 4.0475 53.7019 4.0475 cv
53.3889 4.0475 53.147 4.16132 52.9763 4.37473 cv
52.8056 4.59525 52.7273 4.90825 52.7273 5.31372 cv
52.7273 6.99965 li
53.4671 6.99965 li
53.4671 7.36955 li
51.5109 7.36955 li
51.5109 6.99965 li
52.0871 6.99965 li
52.0871 4.04039 li
51.4753 4.04039 li
51.4753 3.67759 li
52.7273 3.67759 li
52.7273 4.33205 li
52.8483 4.07596 53.0047 3.891 53.2039 3.76296 cv
53.4031 3.64203 53.645 3.578 53.9295 3.578 cv
54.0291 3.578 54.1429 3.59223 54.2567 3.60646 cv
54.3706 3.62069 54.4915 3.64203 54.6195 3.67048 cv
f
56.1561 8.03823 mo
56.3979 7.42646 li
55.0179 4.0475 li
54.6053 4.0475 li
54.6053 3.67759 li
56.2983 3.67759 li
56.2983 4.0475 li
55.7079 4.0475 li
56.7465 6.58706 li
57.7851 4.0475 li
57.2302 4.0475 li
57.2302 3.67759 li
58.6174 3.67759 li
58.6174 4.0475 li
58.2048 4.0475 li
56.5117 8.19473 li
56.3979 8.47927 56.2699 8.67846 56.1276 8.78516 cv
55.9853 8.88475 55.7861 8.94166 55.5301 8.94166 cv
55.4162 8.94166 55.3095 8.92743 55.1957 8.9132 cv
55.0819 8.89186 54.961 8.86341 54.8472 8.83495 cv
54.8472 8.13071 li
55.1744 8.13071 li
55.1886 8.28721 55.2242 8.39391 55.2953 8.46505 cv
55.3593 8.53618 55.4589 8.57175 55.6012 8.57175 cv
55.7292 8.57175 55.8288 8.53618 55.9071 8.46505 cv
55.9853 8.39391 56.0707 8.25164 56.1561 8.03823 cv
f
63.732 6.21004 mo
63.732 5.42754 li
62.9068 5.42754 li
62.5867 5.42754 62.352 5.49868 62.1955 5.63383 cv
62.039 5.77611 61.9678 5.9824 61.9678 6.25983 cv
61.9678 6.51592 62.0461 6.72221 62.2026 6.8716 cv
62.3591 7.0281 62.5725 7.09924 62.8428 7.09924 cv
63.106 7.09924 63.3194 7.02099 63.483 6.85737 cv
63.6467 6.69376 63.732 6.48035 63.732 6.21004 cv
64.3722 5.06475 mo
64.3722 6.99965 li
64.9413 6.99965 li
64.9413 7.36955 li
63.732 7.36955 li
63.732 6.97119 li
63.5897 7.14192 63.4261 7.26996 63.2412 7.34821 cv
63.0562 7.41935 62.8357 7.46203 62.5938 7.46203 cv
62.1812 7.46203 61.854 7.35533 61.6122 7.14192 cv
61.3703 6.92851 61.2565 6.62974 61.2565 6.25983 cv
61.2565 5.88281 61.3916 5.59115 61.6691 5.37774 cv
61.9394 5.16434 62.3306 5.05763 62.8357 5.05763 cv
63.732 5.05763 li
63.732 4.80154 li
63.732 4.52411 63.6467 4.3107 63.4759 4.15421 cv
63.3052 3.99771 63.0633 3.91946 62.7574 3.91946 cv
62.5014 3.91946 62.3022 3.98348 62.1528 4.0973 cv
61.9963 4.21111 61.9038 4.38184 61.8683 4.60948 cv
61.541 4.60948 li
61.541 3.86255 li
61.7616 3.77007 61.975 3.69893 62.1884 3.64914 cv
62.3947 3.60646 62.601 3.578 62.8001 3.578 cv
63.3123 3.578 63.6964 3.70605 63.9668 3.96214 cv
64.2371 4.21823 64.3722 4.58102 64.3722 5.06475 cv
f
65.4321 7.36955 mo
65.4321 6.99965 li
66.0083 6.99965 li
66.0083 4.0475 li
65.3965 4.0475 li
65.3965 3.67759 li
66.6485 3.67759 li
66.6485 4.33205 li
66.7624 4.09018 66.9189 3.89812 67.1038 3.77007 cv
67.2888 3.64203 67.5093 3.578 67.7654 3.578 cv
68.1709 3.578 68.4696 3.69893 68.6617 3.92657 cv
68.8538 4.16132 68.9534 4.52411 68.9534 5.02206 cv
68.9534 6.99965 li
69.5224 6.99965 li
69.5224 7.36955 li
67.7583 7.36955 li
67.7583 6.99965 li
68.3131 6.99965 li
68.3131 5.22125 li
68.3131 4.77309 68.2562 4.4672 68.1424 4.29648 cv
68.0286 4.12575 67.8365 4.04039 67.5591 4.04039 cv
67.2603 4.04039 67.0327 4.15421 66.8762 4.36761 cv
66.7197 4.58813 66.6485 4.90113 66.6485 5.31372 cv
66.6485 6.99965 li
67.2034 6.99965 li
67.2034 7.36955 li
65.4321 7.36955 li
f
73.4562 6.99965 mo
74.068 6.99965 li
74.068 7.36955 li
72.816 7.36955 li
72.816 6.79335 li
72.688 7.0281 72.5315 7.19883 72.3394 7.30553 cv
72.1402 7.40512 71.9055 7.46203 71.6209 7.46203 cv
71.1656 7.46203 70.7886 7.28419 70.5041 6.92851 cv
70.2195 6.57283 70.0773 6.10333 70.0773 5.52002 cv
70.0773 4.94381 70.2195 4.47432 70.5041 4.11864 cv
70.7886 3.76296 71.1656 3.578 71.6209 3.578 cv
71.9055 3.578 72.1402 3.63491 72.3394 3.74162 cv
72.5315 3.85543 72.688 4.02616 72.816 4.2538 cv
72.816 2.33312 li
72.2113 2.33312 li
72.2113 1.96322 li
73.4562 1.96322 li
73.4562 6.99965 li
72.816 5.70497 mo
72.816 5.34218 li
72.816 4.90113 72.7306 4.56679 72.5599 4.33205 cv
72.3892 4.0973 72.1402 3.97637 71.8201 3.97637 cv
71.4929 3.97637 71.2439 4.11152 71.0732 4.36761 cv
70.9025 4.6237 70.8242 5.00784 70.8242 5.52002 cv
70.8242 6.0322 70.9025 6.42344 71.0732 6.67953 cv
71.2439 6.94274 71.4929 7.07078 71.8201 7.07078 cv
72.1402 7.07078 72.3892 6.95696 72.5599 6.72221 cv
72.7306 6.49458 72.816 6.15313 72.816 5.70497 cv
f
77.9591 5.49156 mo
79.8655 5.49156 li
78.9123 3.02314 li
77.9591 5.49156 li
76.5008 7.36955 mo
76.5008 6.99965 li
76.949 6.99965 li
78.7985 2.18374 li
79.3818 2.18374 li
81.2314 6.99965 li
81.7435 6.99965 li
81.7435 7.36955 li
79.8584 7.36955 li
79.8584 6.99965 li
80.4346 6.99965 li
80.0007 5.86147 li
77.8168 5.86147 li
77.3829 6.99965 li
77.952 6.99965 li
77.952 7.36955 li
76.5008 7.36955 li
f
85.3288 6.25983 mo
85.2363 6.65819 85.0656 6.95696 84.8095 7.15614 cv
84.5534 7.36244 84.2191 7.46203 83.8136 7.46203 cv
83.2729 7.46203 82.8461 7.2913 82.5189 6.93562 cv
82.1917 6.57994 82.0281 6.11045 82.0281 5.52002 cv
82.0281 4.9367 82.1917 4.4672 82.5189 4.11152 cv
82.8461 3.75584 83.2729 3.578 83.8136 3.578 cv
84.0412 3.578 84.276 3.60646 84.5107 3.66337 cv
84.7384 3.72028 84.9731 3.79853 85.2079 3.90523 cv
85.2079 4.85134 li
84.838 4.85134 li
84.7881 4.53123 84.6814 4.29648 84.5178 4.14709 cv
84.3542 3.99771 84.1195 3.91946 83.8207 3.91946 cv
83.4721 3.91946 83.2089 4.05462 83.0382 4.32493 cv
82.8604 4.59525 82.775 4.99361 82.775 5.52002 cv
82.775 6.06065 82.8604 6.45901 83.0382 6.72933 cv
83.2089 6.99965 83.4721 7.12769 83.8207 7.12769 cv
84.091 7.12769 84.3115 7.05655 84.4752 6.91428 cv
84.6388 6.77201 84.7526 6.55149 84.8166 6.25983 cv
85.3288 6.25983 li
f
86.4243 4.0475 mo
85.8623 4.0475 li
85.8623 3.67759 li
86.4243 3.67759 li
86.4243 2.5323 li
87.0645 2.5323 li
87.0645 3.67759 li
88.2667 3.67759 li
88.2667 4.0475 li
87.0645 4.0475 li
87.0645 6.39499 li
87.0645 6.70799 87.0929 6.91428 87.157 6.99965 cv
87.2139 7.08501 87.3277 7.12769 87.4913 7.12769 cv
87.6549 7.12769 87.7758 7.0779 87.8541 6.9783 cv
87.9252 6.87871 87.9679 6.72221 87.975 6.50169 cv
88.4588 6.50169 li
88.4374 6.84315 88.3449 7.08501 88.1813 7.23439 cv
88.0177 7.38378 87.7687 7.46203 87.4344 7.46203 cv
87.0645 7.46203 86.8013 7.37667 86.6519 7.22017 cv
86.4954 7.06367 86.4243 6.78624 86.4243 6.39499 cv
86.4243 4.0475 li
f
89.2056 2.5323 mo
89.2056 2.4256 89.2412 2.33312 89.3194 2.25487 cv
89.3977 2.17662 89.4902 2.13394 89.604 2.13394 cv
89.7036 2.13394 89.7961 2.17662 89.8743 2.25487 cv
89.9526 2.33312 89.9952 2.4256 89.9952 2.5323 cv
89.9952 2.64612 89.9526 2.7386 89.8814 2.80973 cv
89.8032 2.88798 89.7107 2.92355 89.604 2.92355 cv
89.4902 2.92355 89.3977 2.88798 89.3194 2.80973 cv
89.2412 2.7386 89.2056 2.64612 89.2056 2.5323 cv
90.0237 6.99965 mo
90.6283 6.99965 li
90.6283 7.36955 li
88.7717 7.36955 li
88.7717 6.99965 li
89.3835 6.99965 li
89.3835 4.0475 li
88.7717 4.0475 li
88.7717 3.67759 li
90.0237 3.67759 li
90.0237 6.99965 li
f
92.5491 7.36955 mo
91.1904 4.0475 li
90.7778 4.0475 li
90.7778 3.67759 li
92.4708 3.67759 li
92.4708 4.0475 li
91.8804 4.0475 li
92.919 6.58706 li
93.9576 4.0475 li
93.4027 4.0475 li
93.4027 3.67759 li
94.7899 3.67759 li
94.7899 4.0475 li
94.3773 4.0475 li
93.0186 7.36955 li
92.5491 7.36955 li
f
98.6668 5.59115 mo
95.9138 5.59115 li
95.9138 5.61961 li
95.9138 6.11756 96.0063 6.49458 96.1913 6.75067 cv
96.3762 7.00676 96.6536 7.12769 97.0235 7.12769 cv
97.301 7.12769 97.5286 7.05655 97.7136 6.90717 cv
97.8914 6.7649 98.0195 6.54437 98.0906 6.25272 cv
98.6028 6.25272 li
98.5032 6.65819 98.3111 6.96408 98.0408 7.16326 cv
97.7634 7.36244 97.4006 7.46203 96.9595 7.46203 cv
96.4189 7.46203 95.985 7.2913 95.6577 6.93562 cv
95.3305 6.57994 95.1669 6.11045 95.1669 5.52002 cv
95.1669 4.9367 95.3234 4.4672 95.6506 4.11152 cv
95.9707 3.75584 96.3904 3.578 96.9168 3.578 cv
97.4717 3.578 97.9056 3.75584 98.2044 4.0973 cv
98.5032 4.43875 98.6526 4.9367 98.6668 5.59115 cv
97.9128 5.22125 mo
97.8985 4.79443 97.806 4.4672 97.6353 4.24668 cv
97.4646 4.03327 97.2298 3.91946 96.9168 3.91946 cv
96.6181 3.91946 96.3904 4.03327 96.2197 4.2538 cv
96.049 4.47432 95.9494 4.79443 95.9138 5.22125 cv
97.9128 5.22125 li
f
101.676 7.36955 mo
101.676 6.99965 li
102.337 6.99965 li
102.337 2.55365 li
101.676 2.55365 li
101.676 2.18374 li
103.703 2.18374 li
103.703 2.55365 li
103.042 2.55365 li
103.042 6.94274 li
105.41 6.94274 li
105.41 6.07488 li
105.837 6.07488 li
105.837 7.36955 li
101.676 7.36955 li
f
109.864 5.59115 mo
107.111 5.59115 li
107.111 5.61961 li
107.111 6.11756 107.203 6.49458 107.388 6.75067 cv
107.573 7.00676 107.85 7.12769 108.22 7.12769 cv
108.498 7.12769 108.725 7.05655 108.91 6.90717 cv
109.088 6.7649 109.216 6.54437 109.287 6.25272 cv
109.799 6.25272 li
109.7 6.65819 109.508 6.96408 109.238 7.16326 cv
108.96 7.36244 108.597 7.46203 108.156 7.46203 cv
107.616 7.46203 107.182 7.2913 106.854 6.93562 cv
106.527 6.57994 106.364 6.11045 106.364 5.52002 cv
106.364 4.9367 106.52 4.4672 106.847 4.11152 cv
107.167 3.75584 107.587 3.578 108.114 3.578 cv
108.668 3.578 109.102 3.75584 109.401 4.0973 cv
109.7 4.43875 109.849 4.9367 109.864 5.59115 cv
109.109 5.22125 mo
109.095 4.79443 109.003 4.4672 108.832 4.24668 cv
108.661 4.03327 108.427 3.91946 108.114 3.91946 cv
107.815 3.91946 107.587 4.03327 107.416 4.2538 cv
107.246 4.47432 107.146 4.79443 107.111 5.22125 cv
109.109 5.22125 li
f
113.05 6.21004 mo
113.05 5.42754 li
112.225 5.42754 li
111.905 5.42754 111.67 5.49868 111.514 5.63383 cv
111.357 5.77611 111.286 5.9824 111.286 6.25983 cv
111.286 6.51592 111.364 6.72221 111.521 6.8716 cv
111.677 7.0281 111.891 7.09924 112.161 7.09924 cv
112.424 7.09924 112.638 7.02099 112.801 6.85737 cv
112.965 6.69376 113.05 6.48035 113.05 6.21004 cv
113.691 5.06475 mo
113.691 6.99965 li
114.26 6.99965 li
114.26 7.36955 li
113.05 7.36955 li
113.05 6.97119 li
112.908 7.14192 112.745 7.26996 112.56 7.34821 cv
112.375 7.41935 112.154 7.46203 111.912 7.46203 cv
111.5 7.46203 111.172 7.35533 110.931 7.14192 cv
110.689 6.92851 110.575 6.62974 110.575 6.25983 cv
110.575 5.88281 110.71 5.59115 110.987 5.37774 cv
111.258 5.16434 111.649 5.05763 112.154 5.05763 cv
113.05 5.05763 li
113.05 4.80154 li
113.05 4.52411 112.965 4.3107 112.794 4.15421 cv
112.624 3.99771 112.382 3.91946 112.076 3.91946 cv
111.82 3.91946 111.621 3.98348 111.471 4.0973 cv
111.315 4.21111 111.222 4.38184 111.187 4.60948 cv
110.859 4.60948 li
110.859 3.86255 li
111.08 3.77007 111.293 3.69893 111.507 3.64914 cv
111.713 3.60646 111.919 3.578 112.119 3.578 cv
112.631 3.578 113.015 3.70605 113.285 3.96214 cv
113.555 4.21823 113.691 4.58102 113.691 5.06475 cv
f
117.518 2.83819 mo
117.183 2.83819 li
117.176 2.66746 117.126 2.5323 117.034 2.43983 cv
116.934 2.35446 116.799 2.30467 116.614 2.30467 cv
116.372 2.30467 116.209 2.3758 116.109 2.50385 cv
116.01 2.63189 115.967 2.86664 115.967 3.20098 cv
115.967 3.67759 li
116.998 3.67759 li
116.998 4.0475 li
115.967 4.0475 li
115.967 6.99965 li
116.785 6.99965 li
116.785 7.36955 li
114.715 7.36955 li
114.715 6.99965 li
115.327 6.99965 li
115.327 4.0475 li
114.715 4.0475 li
114.715 3.67759 li
115.327 3.67759 li
115.327 3.21521 li
115.327 2.80262 115.433 2.49674 115.647 2.28333 cv
115.86 2.06992 116.173 1.96322 116.593 1.96322 cv
116.749 1.96322 116.899 1.97744 117.055 2.0059 cv
117.212 2.03435 117.361 2.07703 117.518 2.13394 cv
117.518 2.83819 li
f
119.744 7.36955 mo
119.744 6.99965 li
120.406 6.99965 li
120.406 2.55365 li
119.744 2.55365 li
119.744 2.18374 li
123.991 2.18374 li
123.991 3.33614 li
123.564 3.33614 li
123.564 2.61055 li
121.11 2.61055 li
121.11 4.34627 li
122.881 4.34627 li
122.881 3.69893 li
123.308 3.69893 li
123.308 5.42043 li
122.881 5.42043 li
122.881 4.77309 li
121.11 4.77309 li
121.11 6.99965 li
121.942 6.99965 li
121.942 7.36955 li
119.744 7.36955 li
f
127.69 3.67048 mo
127.69 4.59525 li
127.32 4.59525 li
127.306 4.41029 127.256 4.27514 127.171 4.18266 cv
127.078 4.0973 126.943 4.0475 126.772 4.0475 cv
126.459 4.0475 126.218 4.16132 126.047 4.37473 cv
125.876 4.59525 125.798 4.90825 125.798 5.31372 cv
125.798 6.99965 li
126.538 6.99965 li
126.538 7.36955 li
124.581 7.36955 li
124.581 6.99965 li
125.158 6.99965 li
125.158 4.04039 li
124.546 4.04039 li
124.546 3.67759 li
125.798 3.67759 li
125.798 4.33205 li
125.919 4.07596 126.075 3.891 126.274 3.76296 cv
126.474 3.64203 126.715 3.578 127 3.578 cv
127.1 3.578 127.213 3.59223 127.327 3.60646 cv
127.441 3.62069 127.562 3.64203 127.69 3.67048 cv
f
130.521 6.21004 mo
130.521 5.42754 li
129.696 5.42754 li
129.376 5.42754 129.141 5.49868 128.985 5.63383 cv
128.828 5.77611 128.757 5.9824 128.757 6.25983 cv
128.757 6.51592 128.835 6.72221 128.992 6.8716 cv
129.148 7.0281 129.362 7.09924 129.632 7.09924 cv
129.895 7.09924 130.109 7.02099 130.272 6.85737 cv
130.436 6.69376 130.521 6.48035 130.521 6.21004 cv
131.161 5.06475 mo
131.161 6.99965 li
131.731 6.99965 li
131.731 7.36955 li
130.521 7.36955 li
130.521 6.97119 li
130.379 7.14192 130.215 7.26996 130.03 7.34821 cv
129.845 7.41935 129.625 7.46203 129.383 7.46203 cv
128.97 7.46203 128.643 7.35533 128.401 7.14192 cv
128.159 6.92851 128.046 6.62974 128.046 6.25983 cv
128.046 5.88281 128.181 5.59115 128.458 5.37774 cv
128.729 5.16434 129.12 5.05763 129.625 5.05763 cv
130.521 5.05763 li
130.521 4.80154 li
130.521 4.52411 130.436 4.3107 130.265 4.15421 cv
130.094 3.99771 129.853 3.91946 129.547 3.91946 cv
129.291 3.91946 129.091 3.98348 128.942 4.0973 cv
128.785 4.21111 128.693 4.38184 128.657 4.60948 cv
128.33 4.60948 li
128.33 3.86255 li
128.551 3.77007 128.764 3.69893 128.978 3.64914 cv
129.184 3.60646 129.39 3.578 129.589 3.578 cv
130.102 3.578 130.486 3.70605 130.756 3.96214 cv
131.026 4.21823 131.161 4.58102 131.161 5.06475 cv
f
135.586 6.25983 mo
135.494 6.65819 135.323 6.95696 135.067 7.15614 cv
134.811 7.36244 134.476 7.46203 134.071 7.46203 cv
133.53 7.46203 133.103 7.2913 132.776 6.93562 cv
132.449 6.57994 132.285 6.11045 132.285 5.52002 cv
132.285 4.9367 132.449 4.4672 132.776 4.11152 cv
133.103 3.75584 133.53 3.578 134.071 3.578 cv
134.299 3.578 134.533 3.60646 134.768 3.66337 cv
134.996 3.72028 135.23 3.79853 135.465 3.90523 cv
135.465 4.85134 li
135.095 4.85134 li
135.045 4.53123 134.939 4.29648 134.775 4.14709 cv
134.612 3.99771 134.377 3.91946 134.078 3.91946 cv
133.729 3.91946 133.466 4.05462 133.296 4.32493 cv
133.118 4.59525 133.032 4.99361 133.032 5.52002 cv
133.032 6.06065 133.118 6.45901 133.296 6.72933 cv
133.466 6.99965 133.729 7.12769 134.078 7.12769 cv
134.348 7.12769 134.569 7.05655 134.732 6.91428 cv
134.896 6.77201 135.01 6.55149 135.074 6.25983 cv
135.586 6.25983 li
f
136.682 4.0475 mo
136.12 4.0475 li
136.12 3.67759 li
136.682 3.67759 li
136.682 2.5323 li
137.322 2.5323 li
137.322 3.67759 li
138.524 3.67759 li
138.524 4.0475 li
137.322 4.0475 li
137.322 6.39499 li
137.322 6.70799 137.35 6.91428 137.414 6.99965 cv
137.471 7.08501 137.585 7.12769 137.749 7.12769 cv
137.912 7.12769 138.033 7.0779 138.111 6.9783 cv
138.182 6.87871 138.225 6.72221 138.232 6.50169 cv
138.716 6.50169 li
138.695 6.84315 138.602 7.08501 138.439 7.23439 cv
138.275 7.38378 138.026 7.46203 137.692 7.46203 cv
137.322 7.46203 137.059 7.37667 136.909 7.22017 cv
136.753 7.06367 136.682 6.78624 136.682 6.39499 cv
136.682 4.0475 li
f
139.463 2.5323 mo
139.463 2.4256 139.498 2.33312 139.577 2.25487 cv
139.655 2.17662 139.747 2.13394 139.861 2.13394 cv
139.961 2.13394 140.053 2.17662 140.132 2.25487 cv
140.21 2.33312 140.253 2.4256 140.253 2.5323 cv
140.253 2.64612 140.21 2.7386 140.139 2.80973 cv
140.06 2.88798 139.968 2.92355 139.861 2.92355 cv
139.747 2.92355 139.655 2.88798 139.577 2.80973 cv
139.498 2.7386 139.463 2.64612 139.463 2.5323 cv
140.281 6.99965 mo
140.886 6.99965 li
140.886 7.36955 li
139.029 7.36955 li
139.029 6.99965 li
139.641 6.99965 li
139.641 4.0475 li
139.029 4.0475 li
139.029 3.67759 li
140.281 3.67759 li
140.281 6.99965 li
f
143.19 7.12769 mo
143.532 7.12769 143.788 6.99253 143.966 6.72221 cv
144.137 6.4519 144.229 6.05354 144.229 5.52002 cv
144.229 4.99361 144.137 4.59525 143.966 4.32493 cv
143.788 4.05462 143.532 3.91946 143.19 3.91946 cv
142.849 3.91946 142.586 4.05462 142.415 4.32493 cv
142.237 4.59525 142.152 4.99361 142.152 5.52002 cv
142.152 6.05354 142.237 6.4519 142.415 6.72221 cv
142.586 6.99253 142.849 7.12769 143.19 7.12769 cv
143.19 7.46203 mo
142.65 7.46203 142.223 7.2913 141.896 6.93562 cv
141.569 6.57994 141.405 6.11045 141.405 5.52002 cv
141.405 4.9367 141.561 4.4672 141.889 4.11152 cv
142.216 3.75584 142.65 3.578 143.19 3.578 cv
143.731 3.578 144.158 3.75584 144.485 4.11152 cv
144.812 4.4672 144.976 4.9367 144.976 5.52002 cv
144.976 6.11045 144.812 6.57994 144.485 6.93562 cv
144.158 7.2913 143.731 7.46203 143.19 7.46203 cv
f
145.623 7.36955 mo
145.623 6.99965 li
146.2 6.99965 li
146.2 4.0475 li
145.588 4.0475 li
145.588 3.67759 li
146.84 3.67759 li
146.84 4.33205 li
146.954 4.09018 147.11 3.89812 147.295 3.77007 cv
147.48 3.64203 147.701 3.578 147.957 3.578 cv
148.362 3.578 148.661 3.69893 148.853 3.92657 cv
149.045 4.16132 149.145 4.52411 149.145 5.02206 cv
149.145 6.99965 li
149.714 6.99965 li
149.714 7.36955 li
147.95 7.36955 li
147.95 6.99965 li
148.504 6.99965 li
148.504 5.22125 li
148.504 4.77309 148.447 4.4672 148.334 4.29648 cv
148.22 4.12575 148.028 4.04039 147.75 4.04039 cv
147.452 4.04039 147.224 4.15421 147.067 4.36761 cv
146.911 4.58813 146.84 4.90113 146.84 5.31372 cv
146.84 6.99965 li
147.395 6.99965 li
147.395 7.36955 li
145.623 7.36955 li
f
153.932 7.36955 mo
152.573 4.0475 li
152.161 4.0475 li
152.161 3.67759 li
153.854 3.67759 li
153.854 4.0475 li
153.263 4.0475 li
154.302 6.58706 li
155.34 4.0475 li
154.786 4.0475 li
154.786 3.67759 li
156.173 3.67759 li
156.173 4.0475 li
155.76 4.0475 li
154.401 7.36955 li
153.932 7.36955 li
f
156.592 7.16326 mo
156.592 6.30251 li
156.962 6.30251 li
156.97 6.57994 157.055 6.78624 157.218 6.9214 cv
157.382 7.06367 157.624 7.12769 157.944 7.12769 cv
158.229 7.12769 158.449 7.0779 158.599 6.96408 cv
158.748 6.85737 158.826 6.70087 158.826 6.49458 cv
158.826 6.33808 158.769 6.20292 158.663 6.10333 cv
158.549 6.00374 158.321 5.89704 157.965 5.78322 cv
157.503 5.62672 li
157.183 5.52713 156.955 5.39909 156.813 5.24259 cv
156.671 5.0932 156.6 4.90113 156.6 4.65927 cv
156.6 4.32493 156.721 4.06173 156.97 3.86966 cv
157.218 3.67759 157.56 3.578 158.001 3.578 cv
158.193 3.578 158.399 3.60646 158.613 3.65625 cv
158.826 3.70605 159.054 3.77718 159.281 3.87677 cv
159.281 4.68061 li
158.912 4.68061 li
158.897 4.44586 158.819 4.26091 158.663 4.12575 cv
158.506 3.99059 158.293 3.91946 158.022 3.91946 cv
157.752 3.91946 157.546 3.96925 157.411 4.06173 cv
157.268 4.16132 157.204 4.30359 157.204 4.48854 cv
157.204 4.64504 157.254 4.77309 157.361 4.86557 cv
157.46 4.95804 157.674 5.05052 157.987 5.15011 cv
158.492 5.30661 li
158.84 5.42043 159.089 5.55558 159.246 5.7192 cv
159.402 5.88281 159.481 6.0891 159.481 6.34519 cv
159.481 6.70087 159.345 6.97119 159.075 7.17037 cv
158.805 7.36955 158.442 7.46203 157.973 7.46203 cv
157.731 7.46203 157.503 7.43358 157.275 7.39089 cv
157.048 7.34821 156.82 7.26996 156.592 7.16326 cv
f
160.512 7.00676 mo
160.512 6.87871 160.555 6.77201 160.64 6.67953 cv
160.725 6.59417 160.839 6.54437 160.974 6.54437 cv
161.103 6.54437 161.209 6.59417 161.302 6.67953 cv
161.387 6.77201 161.437 6.87871 161.437 7.00676 cv
161.437 7.1348 161.387 7.24862 161.302 7.33398 cv
161.209 7.41935 161.103 7.46203 160.974 7.46203 cv
160.839 7.46203 160.725 7.41935 160.64 7.33398 cv
160.555 7.24862 160.512 7.14192 160.512 7.00676 cv
f
165.036 1.96322 mo
165.676 1.96322 li
165.676 7.36955 li
165.036 7.36955 li
165.036 1.96322 li
f
168.522 3.92657 mo
168.18 3.92657 167.91 4.06173 167.711 4.33205 cv
167.512 4.60236 167.412 4.96516 167.412 5.42754 cv
167.412 5.89704 167.505 6.25983 167.704 6.53015 cv
167.903 6.80046 168.173 6.92851 168.522 6.92851 cv
168.863 6.92851 169.134 6.80046 169.333 6.53015 cv
169.532 6.25983 169.632 5.89704 169.632 5.42754 cv
169.632 4.97227 169.532 4.60236 169.333 4.33205 cv
169.134 4.06173 168.863 3.92657 168.522 3.92657 cv
168.522 3.38594 mo
169.077 3.38594 169.511 3.57089 169.831 3.92657 cv
170.144 4.28936 170.307 4.78732 170.307 5.42754 cv
170.307 6.06776 170.144 6.56572 169.831 6.9214 cv
169.511 7.28419 169.077 7.46203 168.522 7.46203 cv
167.96 7.46203 167.519 7.28419 167.206 6.9214 cv
166.893 6.56572 166.736 6.06776 166.736 5.42754 cv
166.736 4.78732 166.893 4.28936 167.206 3.92657 cv
167.519 3.57089 167.96 3.38594 168.522 3.38594 cv
f
173.928 5.37774 mo
173.928 4.92247 173.829 4.55968 173.644 4.30359 cv
173.452 4.0475 173.181 3.91946 172.84 3.91946 cv
172.498 3.91946 172.228 4.0475 172.036 4.30359 cv
171.844 4.55968 171.751 4.92247 171.751 5.37774 cv
171.751 5.84013 171.844 6.19581 172.036 6.4519 cv
172.228 6.70799 172.498 6.83603 172.84 6.83603 cv
173.181 6.83603 173.452 6.70799 173.644 6.4519 cv
173.829 6.19581 173.928 5.84013 173.928 5.37774 cv
174.568 6.88583 mo
174.568 7.54028 174.419 8.03112 174.127 8.35834 cv
173.829 8.67846 173.38 8.84207 172.776 8.84207 cv
172.548 8.84207 172.342 8.82073 172.143 8.79227 cv
171.944 8.7567 171.744 8.70691 171.559 8.63577 cv
171.559 8.01689 li
171.744 8.11648 171.929 8.18762 172.114 8.23741 cv
172.299 8.28721 172.484 8.31566 172.676 8.31566 cv
173.089 8.31566 173.402 8.20184 173.615 7.98844 cv
173.822 7.76791 173.928 7.44069 173.928 6.99965 cv
173.928 6.68665 li
173.793 6.91428 173.622 7.08501 173.416 7.19883 cv
173.21 7.31264 172.968 7.36955 172.683 7.36955 cv
172.2 7.36955 171.815 7.19171 171.524 6.82892 cv
171.232 6.46613 171.09 5.9824 171.09 5.37774 cv
171.09 4.7802 171.232 4.29648 171.524 3.93368 cv
171.815 3.57089 172.2 3.38594 172.683 3.38594 cv
172.968 3.38594 173.21 3.44285 173.416 3.55666 cv
173.622 3.67048 173.793 3.84121 173.928 4.06884 cv
173.928 3.47841 li
174.568 3.47841 li
174.568 6.88583 li
f
175.893 8.12327 mo
176.695 8.12327 li
176.695 5.35466 li
175.823 5.52894 li
175.823 5.08079 li
176.69 4.9065 li
177.183 4.9065 li
177.183 8.12327 li
177.984 8.12327 li
177.984 8.53658 li
175.893 8.53658 li
175.893 8.12327 li
f
180.026 5.23017 mo
179.772 5.23017 179.583 5.35466 179.453 5.60364 cv
179.324 5.85261 179.264 6.22608 179.264 6.72403 cv
179.264 7.22198 179.324 7.59545 179.453 7.84442 cv
179.583 8.0934 179.772 8.21789 180.026 8.21789 cv
180.28 8.21789 180.469 8.0934 180.598 7.84442 cv
180.723 7.59545 180.788 7.22198 180.788 6.72403 cv
180.788 6.22608 180.723 5.85261 180.598 5.60364 cv
180.469 5.35466 180.28 5.23017 180.026 5.23017 cv
180.026 4.84177 mo
180.429 4.84177 180.738 5.00609 180.957 5.32478 cv
181.171 5.64845 181.281 6.11653 181.281 6.72403 cv
181.281 7.33651 181.171 7.80459 180.957 8.12327 cv
180.738 8.44196 180.429 8.60131 180.026 8.60131 cv
179.618 8.60131 179.304 8.44196 179.09 8.12327 cv
178.876 7.80459 178.771 7.33651 178.771 6.72403 cv
178.771 6.11653 178.876 5.64845 179.09 5.32478 cv
179.304 5.00609 179.618 4.84177 180.026 4.84177 cv
f
184.979 4.06884 mo
184.751 3.99059 li
184.666 3.97637 184.58 3.96214 184.488 3.96214 cv
184.146 3.96214 183.848 4.0973 183.592 4.35339 cv
183.335 4.60948 183.172 4.95804 183.086 5.38486 cv
182.695 7.36955 li
182.055 7.36955 li
182.816 3.47841 li
183.456 3.47841 li
183.335 4.08307 li
183.499 3.86255 183.698 3.69182 183.94 3.57089 cv
184.175 3.44996 184.424 3.38594 184.694 3.38594 cv
184.893 3.40016 li
185.1 3.43573 li
184.979 4.06884 li
f
80.8004 34.5443 mo
27.3683 34.5443 li
26.8626 34.5356 26.6459 34.3188 26.6371 33.8132 cv
26.6371 22.5564 li
26.6461 22.0503 26.8626 21.8341 27.3683 21.8252 cv
80.8004 21.8252 li
81.306 21.8341 81.5228 22.0503 81.5316 22.5564 cv
81.5316 33.8132 li
81.5228 34.3188 81.306 34.5356 80.8004 34.5443 cv
/1 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
0 sep
f
80.8015 34.6629 mo
80.8011 34.6629 80.8008 34.6629 80.8004 34.6629 cv
27.3683 34.6629 li
27.0958 34.6631 26.8801 34.5943 26.7336 34.4479 cv
26.5871 34.3014 26.5183 34.0857 26.5185 33.8132 cv
26.5185 22.5564 li
26.5183 22.2837 26.5871 22.068 26.7336 21.9215 cv
26.8799 21.7754 27.0952 21.7066 27.3672 21.7066 cv
27.3676 21.7066 27.3679 21.7066 27.3683 21.7066 cv
80.8004 21.7066 li
81.0729 21.7064 81.2886 21.7752 81.4351 21.9215 cv
81.5816 22.068 81.6503 22.2837 81.6502 22.5564 cv
81.6502 33.8132 li
81.6503 34.0857 81.5816 34.3014 81.4351 34.4479 cv
81.2888 34.5941 81.0735 34.6629 80.8015 34.6629 cv
27.3683 34.5443 mo
80.8004 34.5443 li
81.306 34.5356 81.5228 34.3188 81.5316 33.8132 cv
81.5316 22.5564 li
81.5228 22.0503 81.306 21.8341 80.8004 21.8252 cv
27.3683 21.8252 li
26.8626 21.8341 26.6461 22.0503 26.6371 22.5564 cv
26.6371 33.8132 li
26.6459 34.3188 26.8626 34.5356 27.3683 34.5443 cv
27.3683 34.5443 li
1 /1 /CSD get_res sepcs
.160784 sep
f
28.1587 26.3477 mo
36.0627 26.3477 li
36.0627 23.5813 li
28.1587 23.5813 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
.11856 lw
0 lc
28.1587 26.3477 mo
36.0626 26.3477 li
36.0626 23.5813 li
28.1587 23.5813 li
cp
@
40.0146 25.3045 mo
41.0737 25.3045 li
40.5442 23.9332 li
40.0146 25.3045 li
39.2045 26.3478 mo
39.2045 26.1423 li
39.4534 26.1423 li
40.4809 23.4668 li
40.805 23.4668 li
41.8325 26.1423 li
42.1171 26.1423 li
42.1171 26.3478 li
41.0698 26.3478 li
41.0698 26.1423 li
41.3899 26.1423 li
41.1488 25.51 li
39.9356 25.51 li
39.6945 26.1423 li
40.0107 26.1423 li
40.0107 26.3478 li
39.2045 26.3478 li
1 /0 /CSD get_res sepcs
.85 sep
f
44.1089 25.7313 mo
44.0575 25.9526 43.9627 26.1186 43.8204 26.2293 cv
43.6781 26.3439 43.4924 26.3992 43.2671 26.3992 cv
42.9668 26.3992 42.7296 26.3044 42.5479 26.1068 cv
42.3661 25.9092 42.2752 25.6483 42.2752 25.3203 cv
42.2752 24.9963 42.3661 24.7354 42.5479 24.5378 cv
42.7296 24.3402 42.9668 24.2414 43.2671 24.2414 cv
43.3936 24.2414 43.524 24.2572 43.6544 24.2888 cv
43.7809 24.3205 43.9113 24.3639 44.0417 24.4232 cv
44.0417 24.9488 li
43.8362 24.9488 li
43.8085 24.771 43.7493 24.6406 43.6584 24.5576 cv
43.5675 24.4746 43.437 24.4311 43.2711 24.4311 cv
43.0774 24.4311 42.9312 24.5062 42.8363 24.6564 cv
42.7375 24.8066 42.6901 25.0279 42.6901 25.3203 cv
42.6901 25.6207 42.7375 25.842 42.8363 25.9922 cv
42.9312 26.1423 43.0774 26.2135 43.2711 26.2135 cv
43.4212 26.2135 43.5437 26.174 43.6346 26.0949 cv
43.7255 26.0159 43.7888 25.8934 43.8243 25.7313 cv
44.1089 25.7313 li
f
44.7175 24.5023 mo
44.4053 24.5023 li
44.4053 24.2968 li
44.7175 24.2968 li
44.7175 23.6605 li
45.0732 23.6605 li
45.0732 24.2968 li
45.741 24.2968 li
45.741 24.5023 li
45.0732 24.5023 li
45.0732 25.8064 li
45.0732 25.9803 45.089 26.0949 45.1245 26.1423 cv
45.1562 26.1898 45.2194 26.2135 45.3103 26.2135 cv
45.4012 26.2135 45.4684 26.1858 45.5118 26.1305 cv
45.5513 26.0752 45.5751 25.9882 45.579 25.8657 cv
45.8477 25.8657 li
45.8359 26.0554 45.7845 26.1898 45.6936 26.2728 cv
45.6027 26.3557 45.4644 26.3992 45.2787 26.3992 cv
45.0732 26.3992 44.9269 26.3518 44.8439 26.2648 cv
44.757 26.1779 44.7175 26.0238 44.7175 25.8064 cv
44.7175 24.5023 li
f
46.2627 23.6605 mo
46.3259 23.5064 li
46.484 23.4392 li
46.6342 23.5064 li
46.7014 23.6605 li
46.6381 23.8146 li
46.484 23.8778 li
46.3259 23.8146 li
46.2627 23.6605 li
46.7172 26.1423 mo
47.0531 26.1423 li
47.0531 26.3478 li
46.0216 26.3478 li
46.0216 26.1423 li
46.3615 26.1423 li
46.3615 24.5023 li
46.0216 24.5023 li
46.0216 24.2968 li
46.7172 24.2968 li
46.7172 26.1423 li
f
48.1202 26.3478 mo
47.3653 24.5023 li
47.1361 24.5023 li
47.1361 24.2968 li
48.0767 24.2968 li
48.0767 24.5023 li
47.7487 24.5023 li
48.3257 25.9131 li
48.9026 24.5023 li
48.5944 24.5023 li
48.5944 24.2968 li
49.365 24.2968 li
49.365 24.5023 li
49.1358 24.5023 li
48.381 26.3478 li
48.1202 26.3478 li
f
51.5189 25.3598 mo
49.9895 25.3598 li
49.9895 25.3756 li
49.9895 25.6523 50.0408 25.8617 50.1436 26.004 cv
50.2464 26.1463 50.4005 26.2135 50.606 26.2135 cv
50.7601 26.2135 50.8866 26.174 50.9893 26.091 cv
51.0881 26.0119 51.1593 25.8894 51.1988 25.7274 cv
51.4833 25.7274 li
51.428 25.9526 51.3213 26.1226 51.1711 26.2332 cv
51.017 26.3439 50.8154 26.3992 50.5704 26.3992 cv
50.2701 26.3992 50.029 26.3044 49.8472 26.1068 cv
49.6654 25.9092 49.5745 25.6483 49.5745 25.3203 cv
49.5745 24.9963 49.6615 24.7354 49.8432 24.5378 cv
50.0211 24.3402 50.2543 24.2414 50.5467 24.2414 cv
50.8549 24.2414 51.096 24.3402 51.262 24.5299 cv
51.428 24.7196 51.511 24.9963 51.5189 25.3598 cv
51.1 25.1543 mo
51.0921 24.9172 51.0407 24.7354 50.9458 24.6129 cv
50.851 24.4944 50.7206 24.4311 50.5467 24.4311 cv
50.3807 24.4311 50.2543 24.4944 50.1594 24.6169 cv
50.0646 24.7394 50.0092 24.9172 49.9895 25.1543 cv
51.1 25.1543 li
f
53.1905 26.3478 mo
53.1905 26.1423 li
53.5581 26.1423 li
53.5581 23.6723 li
53.1905 23.6723 li
53.1905 23.4668 li
54.3168 23.4668 li
54.3168 23.6723 li
53.9493 23.6723 li
53.9493 26.1107 li
55.2653 26.1107 li
55.2653 25.6286 li
55.5025 25.6286 li
55.5025 26.3478 li
53.1905 26.3478 li
f
57.7393 25.3598 mo
56.2099 25.3598 li
56.2099 25.3756 li
56.2099 25.6523 56.2612 25.8617 56.364 26.004 cv
56.4668 26.1463 56.6209 26.2135 56.8264 26.2135 cv
56.9805 26.2135 57.107 26.174 57.2097 26.091 cv
57.3085 26.0119 57.3797 25.8894 57.4192 25.7274 cv
57.7037 25.7274 li
57.6484 25.9526 57.5417 26.1226 57.3915 26.2332 cv
57.2374 26.3439 57.0358 26.3992 56.7908 26.3992 cv
56.4905 26.3992 56.2494 26.3044 56.0676 26.1068 cv
55.8858 25.9092 55.7949 25.6483 55.7949 25.3203 cv
55.7949 24.9963 55.8819 24.7354 56.0636 24.5378 cv
56.2415 24.3402 56.4747 24.2414 56.7671 24.2414 cv
57.0753 24.2414 57.3164 24.3402 57.4824 24.5299 cv
57.6484 24.7196 57.7314 24.9963 57.7393 25.3598 cv
57.3204 25.1543 mo
57.3125 24.9172 57.2611 24.7354 57.1662 24.6129 cv
57.0714 24.4944 56.941 24.4311 56.7671 24.4311 cv
56.6011 24.4311 56.4747 24.4944 56.3798 24.6169 cv
56.285 24.7394 56.2296 24.9172 56.2099 25.1543 cv
57.3204 25.1543 li
f
59.5098 25.7037 mo
59.5098 25.2689 li
59.0513 25.2689 li
58.8735 25.2689 58.7431 25.3085 58.6561 25.3836 cv
58.5692 25.4626 58.5297 25.5772 58.5297 25.7313 cv
58.5297 25.8736 58.5732 25.9882 58.6601 26.0712 cv
58.747 26.1581 58.8656 26.1977 59.0158 26.1977 cv
59.162 26.1977 59.2805 26.1542 59.3714 26.0633 cv
59.4623 25.9724 59.5098 25.8538 59.5098 25.7037 cv
59.8654 25.0674 mo
59.8654 26.1423 li
60.1816 26.1423 li
60.1816 26.3478 li
59.5098 26.3478 li
59.5098 26.1265 li
59.4307 26.2214 59.3398 26.2925 59.2371 26.336 cv
59.1343 26.3755 59.0118 26.3992 58.8775 26.3992 cv
58.6482 26.3992 58.4664 26.3399 58.3321 26.2214 cv
58.1977 26.1028 58.1345 25.9368 58.1345 25.7313 cv
58.1345 25.5219 58.2096 25.3598 58.3637 25.2413 cv
58.5139 25.1227 58.7312 25.0634 59.0118 25.0634 cv
59.5098 25.0634 li
59.5098 24.9212 li
59.5098 24.767 59.4623 24.6485 59.3675 24.5615 cv
59.2726 24.4746 59.1383 24.4311 58.9684 24.4311 cv
58.8261 24.4311 58.7154 24.4667 58.6324 24.5299 cv
58.5455 24.5932 58.4941 24.688 58.4743 24.8145 cv
58.2926 24.8145 li
58.2926 24.3995 li
58.4151 24.3481 58.5336 24.3086 58.6522 24.2809 cv
58.7668 24.2572 58.8814 24.2414 58.9921 24.2414 cv
59.2766 24.2414 59.49 24.3126 59.6402 24.4548 cv
59.7904 24.5971 59.8654 24.7987 59.8654 25.0674 cv
f
61.9916 23.8304 mo
61.8058 23.8304 li
61.8019 23.7356 61.7742 23.6605 61.7229 23.6091 cv
61.6675 23.5617 61.5924 23.534 61.4897 23.534 cv
61.3553 23.534 61.2644 23.5735 61.2091 23.6447 cv
61.1538 23.7158 61.1301 23.8462 61.1301 24.032 cv
61.1301 24.2968 li
61.7031 24.2968 li
61.7031 24.5023 li
61.1301 24.5023 li
61.1301 26.1423 li
61.5845 26.1423 li
61.5845 26.3478 li
60.4345 26.3478 li
60.4345 26.1423 li
60.7744 26.1423 li
60.7744 24.5023 li
60.4345 24.5023 li
60.4345 24.2968 li
60.7744 24.2968 li
60.7744 24.0399 li
60.7744 23.8107 60.8337 23.6407 60.9522 23.5222 cv
61.0708 23.4036 61.2447 23.3443 61.4778 23.3443 cv
61.7347 23.368 li
61.9916 23.4392 li
61.9916 23.8304 li
f
63.2285 26.3478 mo
63.2285 26.1423 li
63.5961 26.1423 li
63.5961 23.6723 li
63.2285 23.6723 li
63.2285 23.4668 li
65.5879 23.4668 li
65.5879 24.1071 li
65.3508 24.1071 li
65.3508 23.704 li
63.9873 23.704 li
63.9873 24.6682 li
64.9714 24.6682 li
64.9714 24.3086 li
65.2085 24.3086 li
65.2085 25.265 li
64.9714 25.265 li
64.9714 24.9054 li
63.9873 24.9054 li
63.9873 26.1423 li
64.4497 26.1423 li
64.4497 26.3478 li
63.2285 26.3478 li
f
67.6429 24.2928 mo
67.6429 24.8066 li
67.4374 24.8066 li
67.4295 24.7038 67.4018 24.6287 67.3544 24.5773 cv
67.303 24.5299 67.228 24.5023 67.1331 24.5023 cv
66.9592 24.5023 66.8249 24.5655 66.73 24.684 cv
66.6352 24.8066 66.5917 24.9804 66.5917 25.2057 cv
66.5917 26.1423 li
67.0027 26.1423 li
67.0027 26.3478 li
65.9159 26.3478 li
65.9159 26.1423 li
66.236 26.1423 li
66.236 24.4983 li
65.8961 24.4983 li
65.8961 24.2968 li
66.5917 24.2968 li
66.5917 24.6603 li
66.6589 24.5181 66.7458 24.4153 66.8565 24.3442 cv
66.9671 24.277 67.1015 24.2414 67.2596 24.2414 cv
67.4414 24.2572 li
67.6429 24.2928 li
f
69.2158 25.7037 mo
69.2158 25.2689 li
68.7574 25.2689 li
68.5795 25.2689 68.4491 25.3085 68.3622 25.3836 cv
68.2752 25.4626 68.2357 25.5772 68.2357 25.7313 cv
68.2357 25.8736 68.2792 25.9882 68.3661 26.0712 cv
68.4531 26.1581 68.5716 26.1977 68.7218 26.1977 cv
68.868 26.1977 68.9866 26.1542 69.0775 26.0633 cv
69.1684 25.9724 69.2158 25.8538 69.2158 25.7037 cv
69.5715 25.0674 mo
69.5715 26.1423 li
69.8876 26.1423 li
69.8876 26.3478 li
69.2158 26.3478 li
69.2158 26.1265 li
69.1367 26.2214 69.0459 26.2925 68.9431 26.336 cv
68.8403 26.3755 68.7178 26.3992 68.5835 26.3992 cv
68.3543 26.3992 68.1725 26.3399 68.0381 26.2214 cv
67.9037 26.1028 67.8405 25.9368 67.8405 25.7313 cv
67.8405 25.5219 67.9156 25.3598 68.0697 25.2413 cv
68.2199 25.1227 68.4373 25.0634 68.7178 25.0634 cv
69.2158 25.0634 li
69.2158 24.9212 li
69.2158 24.767 69.1684 24.6485 69.0735 24.5615 cv
68.9787 24.4746 68.8443 24.4311 68.6744 24.4311 cv
68.5321 24.4311 68.4214 24.4667 68.3385 24.5299 cv
68.2515 24.5932 68.2001 24.688 68.1804 24.8145 cv
67.9986 24.8145 li
67.9986 24.3995 li
68.1211 24.3481 68.2397 24.3086 68.3582 24.2809 cv
68.4728 24.2572 68.5874 24.2414 68.6981 24.2414 cv
68.9826 24.2414 69.196 24.3126 69.3462 24.4548 cv
69.4964 24.5971 69.5715 24.7987 69.5715 25.0674 cv
f
72.0296 25.7313 mo
71.9782 25.9526 71.8834 26.1186 71.7411 26.2293 cv
71.5988 26.3439 71.4131 26.3992 71.1878 26.3992 cv
70.8875 26.3992 70.6503 26.3044 70.4686 26.1068 cv
70.2868 25.9092 70.1959 25.6483 70.1959 25.3203 cv
70.1959 24.9963 70.2868 24.7354 70.4686 24.5378 cv
70.6503 24.3402 70.8875 24.2414 71.1878 24.2414 cv
71.3143 24.2414 71.4447 24.2572 71.5751 24.2888 cv
71.7016 24.3205 71.832 24.3639 71.9624 24.4232 cv
71.9624 24.9488 li
71.7569 24.9488 li
71.7292 24.771 71.67 24.6406 71.5791 24.5576 cv
71.4882 24.4746 71.3577 24.4311 71.1918 24.4311 cv
70.9981 24.4311 70.8519 24.5062 70.757 24.6564 cv
70.6582 24.8066 70.6108 25.0279 70.6108 25.3203 cv
70.6108 25.6207 70.6582 25.842 70.757 25.9922 cv
70.8519 26.1423 70.9981 26.2135 71.1918 26.2135 cv
71.3419 26.2135 71.4644 26.174 71.5553 26.0949 cv
71.6462 26.0159 71.7095 25.8934 71.745 25.7313 cv
72.0296 25.7313 li
f
72.6382 24.5023 mo
72.326 24.5023 li
72.326 24.2968 li
72.6382 24.2968 li
72.6382 23.6605 li
72.9939 23.6605 li
72.9939 24.2968 li
73.6618 24.2968 li
73.6618 24.5023 li
72.9939 24.5023 li
72.9939 25.8064 li
72.9939 25.9803 73.0097 26.0949 73.0453 26.1423 cv
73.0769 26.1898 73.1401 26.2135 73.231 26.2135 cv
73.3219 26.2135 73.3891 26.1858 73.4325 26.1305 cv
73.4721 26.0752 73.4958 25.9882 73.4997 25.8657 cv
73.7685 25.8657 li
73.7566 26.0554 73.7052 26.1898 73.6143 26.2728 cv
73.5234 26.3557 73.3851 26.3992 73.1994 26.3992 cv
72.9939 26.3992 72.8477 26.3518 72.7647 26.2648 cv
72.6777 26.1779 72.6382 26.0238 72.6382 25.8064 cv
72.6382 24.5023 li
f
74.1834 23.6605 mo
74.2466 23.5064 li
74.4047 23.4392 li
74.5549 23.5064 li
74.6221 23.6605 li
74.5588 23.8146 li
74.4047 23.8778 li
74.2466 23.8146 li
74.1834 23.6605 li
74.6379 26.1423 mo
74.9738 26.1423 li
74.9738 26.3478 li
73.9423 26.3478 li
73.9423 26.1423 li
74.2822 26.1423 li
74.2822 24.5023 li
73.9423 24.5023 li
73.9423 24.2968 li
74.6379 24.2968 li
74.6379 26.1423 li
f
76.2543 26.2135 mo
76.444 26.2135 76.5862 26.1384 76.685 25.9882 cv
76.7799 25.838 76.8313 25.6167 76.8313 25.3203 cv
76.8313 25.0279 76.7799 24.8066 76.685 24.6564 cv
76.5862 24.5062 76.444 24.4311 76.2543 24.4311 cv
76.0646 24.4311 75.9184 24.5062 75.8235 24.6564 cv
75.7247 24.8066 75.6773 25.0279 75.6773 25.3203 cv
75.6773 25.6167 75.7247 25.838 75.8235 25.9882 cv
75.9184 26.1384 76.0646 26.2135 76.2543 26.2135 cv
76.2543 26.3992 mo
75.9539 26.3992 75.7168 26.3044 75.535 26.1068 cv
75.3532 25.9092 75.2623 25.6483 75.2623 25.3203 cv
75.2623 24.9963 75.3493 24.7354 75.5311 24.5378 cv
75.7129 24.3402 75.9539 24.2414 76.2543 24.2414 cv
76.5546 24.2414 76.7917 24.3402 76.9735 24.5378 cv
77.1553 24.7354 77.2462 24.9963 77.2462 25.3203 cv
77.2462 25.6483 77.1553 25.9092 76.9735 26.1068 cv
76.7917 26.3044 76.5546 26.3992 76.2543 26.3992 cv
f
77.6059 26.3478 mo
77.6059 26.1423 li
77.926 26.1423 li
77.926 24.5023 li
77.5861 24.5023 li
77.5861 24.2968 li
78.2817 24.2968 li
78.2817 24.6603 li
78.3449 24.526 78.4319 24.4193 78.5346 24.3481 cv
78.6373 24.277 78.7599 24.2414 78.9021 24.2414 cv
79.1274 24.2414 79.2934 24.3086 79.4001 24.4351 cv
79.5068 24.5655 79.5621 24.767 79.5621 25.0437 cv
79.5621 26.1423 li
79.8783 26.1423 li
79.8783 26.3478 li
78.8982 26.3478 li
78.8982 26.1423 li
79.2064 26.1423 li
79.2064 25.1543 li
79.2064 24.9054 79.1748 24.7354 79.1116 24.6406 cv
79.0484 24.5457 78.9417 24.4983 78.7875 24.4983 cv
78.6215 24.4983 78.4951 24.5615 78.4081 24.6801 cv
78.3212 24.8026 78.2817 24.9765 78.2817 25.2057 cv
78.2817 26.1423 li
78.5899 26.1423 li
78.5899 26.3478 li
77.6059 26.3478 li
f
28.1587 32.146 mo
36.0627 32.146 li
36.0627 29.3796 li
28.1587 29.3796 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
28.1587 32.146 mo
36.0626 32.146 li
36.0626 29.3796 li
28.1587 29.3796 li
cp
@
42.0104 31.3831 mo
41.9234 31.6518 41.7812 31.8573 41.5836 31.9917 cv
41.382 32.13 41.1291 32.1972 40.8248 32.1972 cv
40.6351 32.1972 40.4572 32.1656 40.2992 32.1023 cv
40.1371 32.0391 39.9949 31.9482 39.8723 31.8218 cv
39.7261 31.6795 39.6194 31.5135 39.5483 31.3317 cv
39.4771 31.1499 39.4455 30.9405 39.4455 30.7073 cv
39.4455 30.2607 39.572 29.9011 39.8328 29.6244 cv
40.0897 29.3518 40.4296 29.2134 40.8564 29.2134 cv
41.0145 29.2134 41.1805 29.2371 41.3583 29.2767 cv
41.5322 29.3162 41.7258 29.3794 41.9313 29.4624 cv
41.9313 30.1263 li
41.714 30.1263 li
41.6665 29.8853 41.5677 29.7074 41.4255 29.5928 cv
41.2832 29.4782 41.0816 29.4189 40.8248 29.4189 cv
40.5165 29.4189 40.2834 29.5296 40.1253 29.747 cv
39.9672 29.9683 39.8882 30.2884 39.8882 30.7073 cv
39.8882 31.1302 39.9672 31.4503 40.1253 31.6676 cv
40.2834 31.8889 40.5165 31.9956 40.8248 31.9956 cv
41.0382 31.9956 41.2121 31.9443 41.3543 31.8415 cv
41.4927 31.7388 41.5915 31.5886 41.6547 31.3831 cv
42.0104 31.3831 li
1 /0 /CSD get_res sepcs
.85 sep
f
42.4095 32.1458 mo
42.4095 31.9403 li
42.7296 31.9403 li
42.7296 29.3478 li
42.3898 29.3478 li
42.3898 29.1423 li
43.0853 29.1423 li
43.0853 30.4583 li
43.1486 30.3239 43.2355 30.2172 43.3383 30.1461 cv
43.441 30.075 43.5635 30.0394 43.7058 30.0394 cv
43.931 30.0394 44.097 30.1066 44.2037 30.2331 cv
44.3104 30.3635 44.3658 30.565 44.3658 30.8417 cv
44.3658 31.9403 li
44.6819 31.9403 li
44.6819 32.1458 li
43.7018 32.1458 li
43.7018 31.9403 li
44.0101 31.9403 li
44.0101 30.9523 li
44.0101 30.7033 43.9785 30.5334 43.9152 30.4386 cv
43.852 30.3477 43.7453 30.3002 43.5912 30.3002 cv
43.4252 30.3002 43.2987 30.3635 43.2118 30.482 cv
43.1248 30.6006 43.0853 30.7745 43.0853 31.0037 cv
43.0853 31.9403 li
43.3936 31.9403 li
43.3936 32.1458 li
42.4095 32.1458 li
f
46.9346 31.1578 mo
45.4051 31.1578 li
45.4051 31.1736 li
45.4051 31.4503 45.4565 31.6597 45.5593 31.802 cv
45.662 31.9443 45.8161 32.0115 46.0216 32.0115 cv
46.1758 32.0115 46.3022 31.9719 46.405 31.8889 cv
46.5038 31.8099 46.5749 31.6874 46.6144 31.5254 cv
46.899 31.5254 li
46.8437 31.7506 46.737 31.9206 46.5868 32.0312 cv
46.4326 32.1419 46.2311 32.1972 45.9861 32.1972 cv
45.6857 32.1972 45.4447 32.1023 45.2629 31.9047 cv
45.0811 31.7071 44.9902 31.4463 44.9902 31.1183 cv
44.9902 30.7942 45.0771 30.5334 45.2589 30.3358 cv
45.4368 30.1382 45.6699 30.0394 45.9624 30.0394 cv
46.2706 30.0394 46.5117 30.1382 46.6777 30.3279 cv
46.8437 30.5176 46.9267 30.7942 46.9346 31.1578 cv
46.5156 30.9523 mo
46.5077 30.7152 46.4564 30.5334 46.3615 30.4109 cv
46.2667 30.2923 46.1362 30.2291 45.9624 30.2291 cv
45.7964 30.2291 45.6699 30.2923 45.5751 30.4148 cv
45.4802 30.5374 45.4249 30.7152 45.4051 30.9523 cv
46.5156 30.9523 li
f
49.0212 30.0908 mo
49.0212 30.6045 li
48.8157 30.6045 li
48.8078 30.5018 48.7801 30.4267 48.7327 30.3753 cv
48.6813 30.3279 48.6062 30.3002 48.5114 30.3002 cv
48.3375 30.3002 48.2031 30.3635 48.1083 30.482 cv
48.0134 30.6045 47.97 30.7784 47.97 31.0037 cv
47.97 31.9403 li
48.381 31.9403 li
48.381 32.1458 li
47.2942 32.1458 li
47.2942 31.9403 li
47.6143 31.9403 li
47.6143 30.2963 li
47.2744 30.2963 li
47.2744 30.0947 li
47.97 30.0947 li
47.97 30.4583 li
48.0372 30.316 48.1241 30.2133 48.2348 30.1422 cv
48.3454 30.075 48.4798 30.0394 48.6378 30.0394 cv
48.8196 30.0552 li
49.0212 30.0908 li
f
50.9102 30.0908 mo
50.9102 30.6045 li
50.7047 30.6045 li
50.6968 30.5018 50.6692 30.4267 50.6217 30.3753 cv
50.5704 30.3279 50.4953 30.3002 50.4004 30.3002 cv
50.2265 30.3002 50.0922 30.3635 49.9973 30.482 cv
49.9025 30.6045 49.859 30.7784 49.859 31.0037 cv
49.859 31.9403 li
50.27 31.9403 li
50.27 32.1458 li
49.1832 32.1458 li
49.1832 31.9403 li
49.5033 31.9403 li
49.5033 30.2963 li
49.1635 30.2963 li
49.1635 30.0947 li
49.859 30.0947 li
49.859 30.4583 li
49.9262 30.316 50.0131 30.2133 50.1238 30.1422 cv
50.2344 30.075 50.3688 30.0394 50.5269 30.0394 cv
50.7087 30.0552 li
50.9102 30.0908 li
f
51.7639 32.5173 mo
51.8982 32.1774 li
51.1315 30.3002 li
50.9023 30.3002 li
50.9023 30.0947 li
51.8429 30.0947 li
51.8429 30.3002 li
51.5149 30.3002 li
52.0919 31.7111 li
52.6689 30.3002 li
52.3606 30.3002 li
52.3606 30.0947 li
53.1312 30.0947 li
53.1312 30.3002 li
52.902 30.3002 li
51.9615 32.6043 li
51.8982 32.7623 51.8271 32.873 51.748 32.9323 cv
51.669 32.9876 51.5583 33.0192 51.4161 33.0192 cv
51.2303 33.0034 li
51.0367 32.9599 li
51.0367 32.5687 li
51.2185 32.5687 li
51.2857 32.7544 li
51.4556 32.8137 li
51.6255 32.7544 li
51.669 32.7149 51.7164 32.6359 51.7639 32.5173 cv
f
54.6172 32.1458 mo
54.6172 31.9403 li
54.9847 31.9403 li
54.9847 29.4703 li
54.6172 29.4703 li
54.6172 29.2648 li
56.9765 29.2648 li
56.9765 29.905 li
56.7394 29.905 li
56.7394 29.5019 li
55.376 29.5019 li
55.376 30.4662 li
56.36 30.4662 li
56.36 30.1066 li
56.5971 30.1066 li
56.5971 31.063 li
56.36 31.063 li
56.36 30.7033 li
55.376 30.7033 li
55.376 31.9403 li
55.8383 31.9403 li
55.8383 32.1458 li
54.6172 32.1458 li
f
59.0316 30.0908 mo
59.0316 30.6045 li
58.826 30.6045 li
58.8181 30.5018 58.7905 30.4267 58.7431 30.3753 cv
58.6917 30.3279 58.6166 30.3002 58.5217 30.3002 cv
58.3479 30.3002 58.2135 30.3635 58.1187 30.482 cv
58.0238 30.6045 57.9803 30.7784 57.9803 31.0037 cv
57.9803 31.9403 li
58.3913 31.9403 li
58.3913 32.1458 li
57.3045 32.1458 li
57.3045 31.9403 li
57.6246 31.9403 li
57.6246 30.2963 li
57.2848 30.2963 li
57.2848 30.0947 li
57.9803 30.0947 li
57.9803 30.4583 li
58.0475 30.316 58.1345 30.2133 58.2451 30.1422 cv
58.3558 30.075 58.4901 30.0394 58.6482 30.0394 cv
58.83 30.0552 li
59.0316 30.0908 li
f
60.6044 31.5016 mo
60.6044 31.0669 li
60.146 31.0669 li
59.9682 31.0669 59.8378 31.1064 59.7508 31.1815 cv
59.6639 31.2606 59.6244 31.3752 59.6244 31.5293 cv
59.6244 31.6716 59.6678 31.7862 59.7548 31.8692 cv
59.8417 31.9561 59.9603 31.9956 60.1105 31.9956 cv
60.2567 31.9956 60.3752 31.9522 60.4661 31.8613 cv
60.557 31.7704 60.6044 31.6518 60.6044 31.5016 cv
60.9601 30.8654 mo
60.9601 31.9403 li
61.2763 31.9403 li
61.2763 32.1458 li
60.6044 32.1458 li
60.6044 31.9245 li
60.5254 32.0194 60.4345 32.0905 60.3318 32.134 cv
60.229 32.1735 60.1065 32.1972 59.9721 32.1972 cv
59.7429 32.1972 59.5611 32.1379 59.4268 32.0194 cv
59.2924 31.9008 59.2292 31.7348 59.2292 31.5293 cv
59.2292 31.3199 59.3042 31.1578 59.4584 31.0393 cv
59.6086 30.9207 59.8259 30.8614 60.1065 30.8614 cv
60.6044 30.8614 li
60.6044 30.7191 li
60.6044 30.565 60.557 30.4465 60.4622 30.3595 cv
60.3673 30.2726 60.233 30.2291 60.063 30.2291 cv
59.9208 30.2291 59.8101 30.2647 59.7271 30.3279 cv
59.6402 30.3911 59.5888 30.486 59.569 30.6124 cv
59.3872 30.6124 li
59.3872 30.1975 li
59.5098 30.1461 59.6283 30.1066 59.7469 30.0789 cv
59.8615 30.0552 59.9761 30.0394 60.0867 30.0394 cv
60.3713 30.0394 60.5847 30.1105 60.7349 30.2528 cv
60.885 30.3951 60.9601 30.5966 60.9601 30.8654 cv
f
63.4182 31.5293 mo
63.3669 31.7506 63.272 31.9166 63.1297 32.0273 cv
62.9875 32.1419 62.8017 32.1972 62.5765 32.1972 cv
62.2761 32.1972 62.039 32.1023 61.8572 31.9047 cv
61.6754 31.7071 61.5845 31.4463 61.5845 31.1183 cv
61.5845 30.7942 61.6754 30.5334 61.8572 30.3358 cv
62.039 30.1382 62.2761 30.0394 62.5765 30.0394 cv
62.7029 30.0394 62.8333 30.0552 62.9638 30.0868 cv
63.0902 30.1184 63.2206 30.1619 63.3511 30.2212 cv
63.3511 30.7468 li
63.1456 30.7468 li
63.1179 30.569 63.0586 30.4386 62.9677 30.3556 cv
62.8768 30.2726 62.7464 30.2291 62.5804 30.2291 cv
62.3868 30.2291 62.2406 30.3042 62.1457 30.4544 cv
62.0469 30.6045 61.9995 30.8259 61.9995 31.1183 cv
61.9995 31.4187 62.0469 31.64 62.1457 31.7901 cv
62.2406 31.9403 62.3868 32.0115 62.5804 32.0115 cv
62.7306 32.0115 62.8531 31.9719 62.944 31.8929 cv
63.0349 31.8139 63.0981 31.6913 63.1337 31.5293 cv
63.4182 31.5293 li
f
64.0268 30.3002 mo
63.7146 30.3002 li
63.7146 30.0947 li
64.0268 30.0947 li
64.0268 29.4585 li
64.3825 29.4585 li
64.3825 30.0947 li
65.0504 30.0947 li
65.0504 30.3002 li
64.3825 30.3002 li
64.3825 31.6044 li
64.3825 31.7783 64.3983 31.8929 64.4339 31.9403 cv
64.4655 31.9877 64.5287 32.0115 64.6196 32.0115 cv
64.7105 32.0115 64.7777 31.9838 64.8212 31.9285 cv
64.8607 31.8731 64.8844 31.7862 64.8884 31.6637 cv
65.1571 31.6637 li
65.1452 31.8534 65.0939 31.9877 65.003 32.0707 cv
64.9121 32.1537 64.7738 32.1972 64.588 32.1972 cv
64.3825 32.1972 64.2363 32.1498 64.1533 32.0628 cv
64.0664 31.9759 64.0268 31.8218 64.0268 31.6044 cv
64.0268 30.3002 li
f
65.572 29.4585 mo
65.6353 29.3043 li
65.7934 29.2371 li
65.9435 29.3043 li
66.0107 29.4585 li
65.9475 29.6126 li
65.7934 29.6758 li
65.6353 29.6126 li
65.572 29.4585 li
66.0265 31.9403 mo
66.3624 31.9403 li
66.3624 32.1458 li
65.331 32.1458 li
65.331 31.9403 li
65.6708 31.9403 li
65.6708 30.3002 li
65.331 30.3002 li
65.331 30.0947 li
66.0265 30.0947 li
66.0265 31.9403 li
f
67.6429 32.0115 mo
67.8326 32.0115 67.9749 31.9364 68.0737 31.7862 cv
68.1685 31.636 68.2199 31.4147 68.2199 31.1183 cv
68.2199 30.8259 68.1685 30.6045 68.0737 30.4544 cv
67.9749 30.3042 67.8326 30.2291 67.6429 30.2291 cv
67.4532 30.2291 67.307 30.3042 67.2122 30.4544 cv
67.1134 30.6045 67.0659 30.8259 67.0659 31.1183 cv
67.0659 31.4147 67.1134 31.636 67.2122 31.7862 cv
67.307 31.9364 67.4532 32.0115 67.6429 32.0115 cv
67.6429 32.1972 mo
67.3426 32.1972 67.1055 32.1023 66.9237 31.9047 cv
66.7419 31.7071 66.651 31.4463 66.651 31.1183 cv
66.651 30.7942 66.7379 30.5334 66.9197 30.3358 cv
67.1015 30.1382 67.3426 30.0394 67.6429 30.0394 cv
67.9433 30.0394 68.1804 30.1382 68.3622 30.3358 cv
68.544 30.5334 68.6349 30.7942 68.6349 31.1183 cv
68.6349 31.4463 68.544 31.7071 68.3622 31.9047 cv
68.1804 32.1023 67.9433 32.1972 67.6429 32.1972 cv
f
68.9945 32.1458 mo
68.9945 31.9403 li
69.3146 31.9403 li
69.3146 30.3002 li
68.9748 30.3002 li
68.9748 30.0947 li
69.6703 30.0947 li
69.6703 30.4583 li
69.7336 30.3239 69.8205 30.2172 69.9232 30.1461 cv
70.026 30.075 70.1485 30.0394 70.2908 30.0394 cv
70.516 30.0394 70.682 30.1066 70.7887 30.2331 cv
70.8954 30.3635 70.9508 30.565 70.9508 30.8417 cv
70.9508 31.9403 li
71.2669 31.9403 li
71.2669 32.1458 li
70.2868 32.1458 li
70.2868 31.9403 li
70.5951 31.9403 li
70.5951 30.9523 li
70.5951 30.7033 70.5635 30.5334 70.5002 30.4386 cv
70.437 30.3437 70.3303 30.2963 70.1762 30.2963 cv
70.0102 30.2963 69.8837 30.3595 69.7968 30.4781 cv
69.7098 30.6006 69.6703 30.7745 69.6703 31.0037 cv
69.6703 31.9403 li
69.9786 31.9403 li
69.9786 32.1458 li
68.9945 32.1458 li
f
grestore
%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B71EB594BAA87F31A170DCF548DAEE3311FC43FC78A6C074493B3549D0E1827F1703C6338D1907CB557F57F502EA6D6799A8DE937EF9683D579DF1ABAB4E74C3A1B979FDB2EF2D12A2FA9CDA68067A5474500A960368C6287159041D49A1> |-/parenright <1C60D8A8C9B71EB594BAA87F31A170DCF0F44A88F271C1204DA8CF0A554BEEB2F39FC92A6198D8CB5B5035678EDF15C268D7DFBF834C3E0481F4D74050740572F4CCA890EC4E0E90C1B49113DEAB732B279883A40AC82E62D22FC7681B0EFAEE5F4823C1A08D4996DA0A> |-/a <1C60D8A8C9B7883C4DBCBC20C60033A54608E6FBB3D7C7C85ABEB5DA8B29DCCF2F1B64BF10E8E3CE8B60DF1662604534AC1985F7E97A2469BB051F45927F3DAD189CC62DA3E328E861F054B32126D17977B45424B48BB15A379A75ACB8DBA1664189B436542242CF85EED4561386ED0861ADF24AA752E7E6CBC600908DFC0865001333BD546BA8A19A8754D62428A60A14E8B4F00BD3AE898D7BC838A0CA> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 97 /a putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a 158{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf94.388 169.233 mo(\(a\))[3.29318 4.23448 0 ]xshgsave
249.836 158.724 mo
449.883 158.724 li
449.883 -.331837 li
249.836 -.331837 li
249.836 158.724 li
clp
249.836 158.724 mo
536.978 158.724 li
536.978 -.331837 li
249.836 -.331837 li
249.836 158.724 li
1 /0 /CSD get_res sepcs
0 sep
f
270.975 136.009 mo
446.187 136.009 li
446.187 16.3282 li
270.975 16.3282 li
270.975 136.009 li
f
276.128 136.009 mo
276.128 138.364 li
1 /0 /CSD get_res sepcs
.85 sep
f
.3925 lw
1 lj
276.128 136.009 mo
276.128 138.364 li
@
272.517 142.891 mo
273.498 142.891 li
273.498 143.19 li
272.517 143.19 li
272.517 142.891 li
f
275.04 143.123 mo
275.04 141.6 li
274.063 143.123 li
275.04 143.123 li
275.884 144.092 mo
274.581 144.092 li
274.581 143.888 li
275.04 143.888 li
275.04 143.327 li
273.792 143.327 li
273.792 143.119 li
275.044 141.18 li
275.425 141.18 li
275.425 143.123 li
275.971 143.123 li
275.971 143.327 li
275.425 143.327 li
275.425 143.888 li
275.884 143.888 li
275.884 144.092 li
f
276.536 143.892 mo
276.606 143.712 li
276.791 143.637 li
276.971 143.712 li
277.046 143.892 li
276.971 144.073 li
276.791 144.143 li
276.606 144.073 li
276.536 143.892 li
f
278.663 143.959 mo
278.859 143.959 279.005 143.853 279.103 143.637 cv
279.197 143.425 279.248 143.099 279.248 142.664 cv
279.248 142.232 279.197 141.906 279.103 141.69 cv
279.005 141.478 278.859 141.368 278.663 141.368 cv
278.467 141.368 278.318 141.478 278.224 141.69 cv
278.125 141.906 278.078 142.232 278.078 142.664 cv
278.078 143.099 278.125 143.425 278.224 143.637 cv
278.318 143.853 278.467 143.959 278.663 143.959 cv
278.663 144.143 mo
278.349 144.143 278.106 144.014 277.933 143.755 cv
277.76 143.496 277.674 143.135 277.674 142.664 cv
277.674 142.197 277.76 141.832 277.933 141.573 cv
278.106 141.313 278.349 141.18 278.663 141.18 cv
278.973 141.18 279.217 141.313 279.389 141.573 cv
279.562 141.832 279.652 142.197 279.652 142.664 cv
279.652 143.135 279.562 143.496 279.389 143.755 cv
279.217 144.014 278.973 144.143 278.663 144.143 cv
f
286.434 136.009 mo
286.434 138.364 li
f
286.434 136.009 mo
286.434 138.364 li
@
296.741 136.009 mo
296.741 138.364 li
f
296.741 136.009 mo
296.741 138.364 li
@
307.048 136.009 mo
307.048 138.364 li
f
307.048 136.009 mo
307.048 138.364 li
@
317.354 136.009 mo
317.354 138.364 li
f
317.354 136.009 mo
317.354 138.364 li
@
313.743 142.891 mo
314.724 142.891 li
314.724 143.19 li
313.743 143.19 li
313.743 142.891 li
f
315.278 141.353 mo
315.427 141.298 315.568 141.255 315.705 141.223 cv
315.843 141.196 315.972 141.18 316.094 141.18 cv
316.373 141.18 316.592 141.243 316.749 141.361 cv
316.906 141.482 316.985 141.651 316.985 141.863 cv
316.985 142.036 316.93 142.181 316.82 142.295 cv
316.71 142.412 316.557 142.491 316.361 142.53 cv
316.596 142.566 316.777 142.652 316.906 142.789 cv
317.036 142.927 317.103 143.103 317.103 143.319 cv
317.103 143.586 317.012 143.79 316.832 143.931 cv
316.651 144.073 316.396 144.143 316.059 144.143 cv
315.909 144.143 315.76 144.128 315.619 144.096 cv
315.478 144.069 315.336 144.022 315.195 143.955 cv
315.195 143.398 li
315.411 143.398 li
315.423 143.586 315.486 143.723 315.595 143.818 cv
315.705 143.912 315.862 143.959 316.066 143.959 cv
316.263 143.959 316.416 143.904 316.53 143.79 cv
316.639 143.676 316.698 143.519 316.698 143.323 cv
316.698 143.099 316.639 142.931 316.522 142.813 cv
316.404 142.699 316.235 142.64 316.011 142.64 cv
315.831 142.64 li
315.831 142.444 li
315.925 142.444 li
316.149 142.444 316.318 142.401 316.428 142.307 cv
316.537 142.212 316.596 142.075 316.596 141.887 cv
316.596 141.722 316.549 141.592 316.459 141.502 cv
316.365 141.416 316.235 141.368 316.063 141.368 cv
315.89 141.368 315.752 141.412 315.658 141.494 cv
315.564 141.576 315.509 141.698 315.493 141.855 cv
315.278 141.855 li
315.278 141.353 li
f
317.762 143.892 mo
317.833 143.712 li
318.017 143.637 li
318.198 143.712 li
318.272 143.892 li
318.198 144.073 li
318.017 144.143 li
317.833 144.073 li
317.762 143.892 li
f
319.889 143.959 mo
320.086 143.959 320.231 143.853 320.329 143.637 cv
320.423 143.425 320.474 143.099 320.474 142.664 cv
320.474 142.232 320.423 141.906 320.329 141.69 cv
320.231 141.478 320.086 141.368 319.889 141.368 cv
319.693 141.368 319.544 141.478 319.45 141.69 cv
319.352 141.906 319.305 142.232 319.305 142.664 cv
319.305 143.099 319.352 143.425 319.45 143.637 cv
319.544 143.853 319.693 143.959 319.889 143.959 cv
319.889 144.143 mo
319.575 144.143 319.332 144.014 319.159 143.755 cv
318.987 143.496 318.9 143.135 318.9 142.664 cv
318.9 142.197 318.987 141.832 319.159 141.573 cv
319.332 141.313 319.575 141.18 319.889 141.18 cv
320.199 141.18 320.443 141.313 320.616 141.573 cv
320.788 141.832 320.878 142.197 320.878 142.664 cv
320.878 143.135 320.788 143.496 320.616 143.755 cv
320.443 144.014 320.199 144.143 319.889 144.143 cv
f
327.661 136.009 mo
327.661 138.364 li
f
327.661 136.009 mo
327.661 138.364 li
@
337.967 136.009 mo
337.967 138.364 li
f
337.967 136.009 mo
337.967 138.364 li
@
348.274 136.009 mo
348.274 138.364 li
f
348.274 136.009 mo
348.274 138.364 li
@
358.581 136.009 mo
358.581 138.364 li
f
358.581 136.009 mo
358.581 138.364 li
@
354.969 142.891 mo
355.951 142.891 li
355.951 143.19 li
354.969 143.19 li
354.969 142.891 li
f
356.626 141.914 mo
356.41 141.914 li
356.41 141.404 li
356.543 141.333 356.681 141.278 356.822 141.239 cv
356.959 141.2 357.097 141.18 357.23 141.18 cv
357.529 141.18 357.764 141.255 357.937 141.396 cv
358.109 141.541 358.196 141.737 358.196 141.985 cv
358.196 142.267 358 142.601 357.607 142.989 cv
357.54 143.056 li
356.818 143.778 li
358.011 143.778 li
358.011 143.425 li
358.235 143.425 li
358.235 144.092 li
356.39 144.092 li
356.39 143.884 li
357.258 143.017 li
357.446 142.829 357.584 142.652 357.666 142.491 cv
357.748 142.33 357.792 142.161 357.792 141.985 cv
357.792 141.792 357.741 141.643 357.638 141.533 cv
357.536 141.423 357.399 141.368 357.226 141.368 cv
357.042 141.368 356.901 141.416 356.802 141.506 cv
356.7 141.596 356.642 141.733 356.626 141.914 cv
f
358.989 143.892 mo
359.059 143.712 li
359.244 143.637 li
359.424 143.712 li
359.499 143.892 li
359.424 144.073 li
359.244 144.143 li
359.059 144.073 li
358.989 143.892 li
f
361.116 143.959 mo
361.312 143.959 361.457 143.853 361.556 143.637 cv
361.65 143.425 361.701 143.099 361.701 142.664 cv
361.701 142.232 361.65 141.906 361.556 141.69 cv
361.457 141.478 361.312 141.368 361.116 141.368 cv
360.92 141.368 360.771 141.478 360.676 141.69 cv
360.578 141.906 360.531 142.232 360.531 142.664 cv
360.531 143.099 360.578 143.425 360.676 143.637 cv
360.771 143.853 360.92 143.959 361.116 143.959 cv
361.116 144.143 mo
360.802 144.143 360.559 144.014 360.386 143.755 cv
360.213 143.496 360.127 143.135 360.127 142.664 cv
360.127 142.197 360.213 141.832 360.386 141.573 cv
360.559 141.313 360.802 141.18 361.116 141.18 cv
361.426 141.18 361.669 141.313 361.842 141.573 cv
362.015 141.832 362.105 142.197 362.105 142.664 cv
362.105 143.135 362.015 143.496 361.842 143.755 cv
361.669 144.014 361.426 144.143 361.116 144.143 cv
f
368.887 136.009 mo
368.887 138.364 li
f
368.887 136.009 mo
368.887 138.364 li
@
379.194 136.009 mo
379.194 138.364 li
f
379.194 136.009 mo
379.194 138.364 li
@
389.5 136.009 mo
389.5 138.364 li
f
389.5 136.009 mo
389.5 138.364 li
@
399.807 136.009 mo
399.807 138.364 li
f
399.807 136.009 mo
399.807 138.364 li
@
396.196 142.891 mo
397.177 142.891 li
397.177 143.19 li
396.196 143.19 li
396.196 142.891 li
f
397.907 144.092 mo
397.907 143.888 li
398.406 143.888 li
398.406 141.51 li
397.828 141.883 li
397.828 141.631 li
398.527 141.18 li
398.79 141.18 li
398.79 143.888 li
399.289 143.888 li
399.289 144.092 li
397.907 144.092 li
f
400.215 143.892 mo
400.286 143.712 li
400.47 143.637 li
400.651 143.712 li
400.725 143.892 li
400.651 144.073 li
400.47 144.143 li
400.286 144.073 li
400.215 143.892 li
f
402.342 143.959 mo
402.539 143.959 402.684 143.853 402.782 143.637 cv
402.876 143.425 402.927 143.099 402.927 142.664 cv
402.927 142.232 402.876 141.906 402.782 141.69 cv
402.684 141.478 402.539 141.368 402.342 141.368 cv
402.146 141.368 401.997 141.478 401.903 141.69 cv
401.805 141.906 401.757 142.232 401.757 142.664 cv
401.757 143.099 401.805 143.425 401.903 143.637 cv
401.997 143.853 402.146 143.959 402.342 143.959 cv
402.342 144.143 mo
402.028 144.143 401.785 144.014 401.612 143.755 cv
401.44 143.496 401.353 143.135 401.353 142.664 cv
401.353 142.197 401.44 141.832 401.612 141.573 cv
401.785 141.313 402.028 141.18 402.342 141.18 cv
402.652 141.18 402.896 141.313 403.068 141.573 cv
403.241 141.832 403.331 142.197 403.331 142.664 cv
403.331 143.135 403.241 143.496 403.068 143.755 cv
402.896 144.014 402.652 144.143 402.342 144.143 cv
f
410.114 136.009 mo
410.114 138.364 li
f
410.113 136.009 mo
410.113 138.364 li
@
420.42 136.009 mo
420.42 138.364 li
f
420.42 136.009 mo
420.42 138.364 li
@
430.727 136.009 mo
430.727 138.364 li
f
430.727 136.009 mo
430.727 138.364 li
@
441.033 136.009 mo
441.033 138.364 li
f
441.033 136.009 mo
441.033 138.364 li
@
439.16 143.959 mo
439.356 143.959 439.501 143.853 439.6 143.637 cv
439.694 143.425 439.745 143.099 439.745 142.664 cv
439.745 142.232 439.694 141.906 439.6 141.69 cv
439.501 141.478 439.356 141.368 439.16 141.368 cv
438.964 141.368 438.815 141.478 438.72 141.69 cv
438.622 141.906 438.575 142.232 438.575 142.664 cv
438.575 143.099 438.622 143.425 438.72 143.637 cv
438.815 143.853 438.964 143.959 439.16 143.959 cv
439.16 144.143 mo
438.846 144.143 438.603 144.014 438.43 143.755 cv
438.257 143.496 438.171 143.135 438.171 142.664 cv
438.171 142.197 438.257 141.832 438.43 141.573 cv
438.603 141.313 438.846 141.18 439.16 141.18 cv
439.47 141.18 439.713 141.313 439.886 141.573 cv
440.059 141.832 440.149 142.197 440.149 142.664 cv
440.149 143.135 440.059 143.496 439.886 143.755 cv
439.713 144.014 439.47 144.143 439.16 144.143 cv
f
440.777 143.892 mo
440.848 143.712 li
441.032 143.637 li
441.213 143.712 li
441.287 143.892 li
441.213 144.073 li
441.032 144.143 li
440.848 144.073 li
440.777 143.892 li
f
442.904 143.959 mo
443.101 143.959 443.246 143.853 443.344 143.637 cv
443.438 143.425 443.489 143.099 443.489 142.664 cv
443.489 142.232 443.438 141.906 443.344 141.69 cv
443.246 141.478 443.101 141.368 442.904 141.368 cv
442.708 141.368 442.559 141.478 442.465 141.69 cv
442.367 141.906 442.32 142.232 442.32 142.664 cv
442.32 143.099 442.367 143.425 442.465 143.637 cv
442.559 143.853 442.708 143.959 442.904 143.959 cv
442.904 144.143 mo
442.59 144.143 442.347 144.014 442.174 143.755 cv
442.002 143.496 441.915 143.135 441.915 142.664 cv
441.915 142.197 442.002 141.832 442.174 141.573 cv
442.347 141.313 442.59 141.18 442.904 141.18 cv
443.214 141.18 443.458 141.313 443.631 141.573 cv
443.803 141.832 443.893 142.197 443.893 142.664 cv
443.893 143.135 443.803 143.496 443.631 143.755 cv
443.458 144.014 443.214 144.143 442.904 144.143 cv
f
335.744 148.263 mo
336.238 148.263 li
336.238 152.44 li
335.744 152.44 li
335.744 148.263 li
f
338.436 149.78 mo
338.172 149.78 337.964 149.885 337.81 150.093 cv
337.656 150.302 337.579 150.582 337.579 150.94 cv
337.579 151.302 337.65 151.582 337.804 151.791 cv
337.958 152 338.167 152.099 338.436 152.099 cv
338.7 152.099 338.909 152 339.063 151.791 cv
339.216 151.582 339.293 151.302 339.293 150.94 cv
339.293 150.588 339.216 150.302 339.063 150.093 cv
338.909 149.885 338.7 149.78 338.436 149.78 cv
338.436 149.362 mo
338.865 149.362 339.2 149.505 339.447 149.78 cv
339.689 150.06 339.815 150.445 339.815 150.94 cv
339.815 151.434 339.689 151.819 339.447 152.093 cv
339.2 152.374 338.865 152.511 338.436 152.511 cv
338.002 152.511 337.661 152.374 337.42 152.093 cv
337.178 151.819 337.057 151.434 337.057 150.94 cv
337.057 150.445 337.178 150.06 337.42 149.78 cv
337.661 149.505 338.002 149.362 338.436 149.362 cv
f
342.612 150.901 mo
342.612 150.549 342.535 150.269 342.393 150.071 cv
342.244 149.874 342.035 149.775 341.772 149.775 cv
341.508 149.775 341.299 149.874 341.151 150.071 cv
341.002 150.269 340.931 150.549 340.931 150.901 cv
340.931 151.258 341.002 151.533 341.151 151.731 cv
341.299 151.929 341.508 152.028 341.772 152.028 cv
342.035 152.028 342.244 151.929 342.393 151.731 cv
342.535 151.533 342.612 151.258 342.612 150.901 cv
343.107 152.066 mo
343.107 152.572 342.992 152.951 342.766 153.203 cv
342.535 153.451 342.189 153.577 341.722 153.577 cv
341.546 153.577 341.387 153.561 341.233 153.539 cv
341.079 153.511 340.925 153.473 340.783 153.418 cv
340.783 152.94 li
340.925 153.017 341.068 153.072 341.211 153.11 cv
341.354 153.149 341.497 153.171 341.645 153.171 cv
341.964 153.171 342.206 153.083 342.371 152.918 cv
342.53 152.747 342.612 152.495 342.612 152.154 cv
342.612 151.912 li
342.508 152.088 342.376 152.22 342.217 152.308 cv
342.057 152.396 341.871 152.44 341.651 152.44 cv
341.277 152.44 340.98 152.302 340.755 152.022 cv
340.53 151.742 340.42 151.368 340.42 150.901 cv
340.42 150.439 340.53 150.066 340.755 149.786 cv
340.98 149.505 341.277 149.362 341.651 149.362 cv
341.871 149.362 342.057 149.406 342.217 149.494 cv
342.376 149.582 342.508 149.714 342.612 149.89 cv
342.612 149.434 li
343.107 149.434 li
343.107 152.066 li
f
344.133 153.022 mo
344.753 153.022 li
344.753 150.883 li
344.08 151.018 li
344.08 150.672 li
344.749 150.537 li
345.13 150.537 li
345.13 153.022 li
345.749 153.022 li
345.749 153.341 li
344.133 153.341 li
344.133 153.022 li
f
347.326 150.787 mo
347.13 150.787 346.984 150.883 346.884 151.076 cv
346.784 151.268 346.738 151.556 346.738 151.941 cv
346.738 152.326 346.784 152.614 346.884 152.807 cv
346.984 152.999 347.13 153.095 347.326 153.095 cv
347.522 153.095 347.668 152.999 347.768 152.807 cv
347.865 152.614 347.915 152.326 347.915 151.941 cv
347.915 151.556 347.865 151.268 347.768 151.076 cv
347.668 150.883 347.522 150.787 347.326 150.787 cv
347.326 150.487 mo
347.638 150.487 347.876 150.614 348.045 150.86 cv
348.211 151.11 348.295 151.472 348.295 151.941 cv
348.295 152.414 348.211 152.776 348.045 153.022 cv
347.876 153.268 347.638 153.391 347.326 153.391 cv
347.011 153.391 346.768 153.268 346.603 153.022 cv
346.438 152.776 346.357 152.414 346.357 151.941 cv
346.357 151.472 346.438 151.11 346.603 150.86 cv
346.768 150.614 347.011 150.487 347.326 150.487 cv
f
351.152 149.89 mo
350.976 149.83 li
350.773 149.808 li
350.509 149.808 350.278 149.912 350.081 150.11 cv
349.883 150.308 349.756 150.577 349.69 150.907 cv
349.388 152.44 li
348.894 152.44 li
349.482 149.434 li
349.976 149.434 li
349.883 149.901 li
350.009 149.731 350.163 149.599 350.35 149.505 cv
350.531 149.412 350.723 149.362 350.932 149.362 cv
351.086 149.373 li
351.245 149.401 li
351.152 149.89 li
f
352.613 149.945 mo
356.053 149.945 li
356.053 150.396 li
352.613 150.396 li
352.613 149.945 li
352.613 151.038 mo
356.053 151.038 li
356.053 151.495 li
352.613 151.495 li
352.613 151.038 li
f
358.222 148.263 mo
358.717 148.263 li
358.717 152.44 li
358.222 152.44 li
358.222 148.263 li
f
360.915 149.78 mo
360.651 149.78 360.442 149.885 360.288 150.093 cv
360.134 150.302 360.057 150.582 360.057 150.94 cv
360.057 151.302 360.129 151.582 360.283 151.791 cv
360.437 152 360.645 152.099 360.915 152.099 cv
361.178 152.099 361.387 152 361.541 151.791 cv
361.695 151.582 361.772 151.302 361.772 150.94 cv
361.772 150.588 361.695 150.302 361.541 150.093 cv
361.387 149.885 361.178 149.78 360.915 149.78 cv
360.915 149.362 mo
361.343 149.362 361.678 149.505 361.926 149.78 cv
362.168 150.06 362.294 150.445 362.294 150.94 cv
362.294 151.434 362.168 151.819 361.926 152.093 cv
361.678 152.374 361.343 152.511 360.915 152.511 cv
360.481 152.511 360.14 152.374 359.898 152.093 cv
359.656 151.819 359.535 151.434 359.535 150.94 cv
359.535 150.445 359.656 150.06 359.898 149.78 cv
360.14 149.505 360.481 149.362 360.915 149.362 cv
f
365.091 150.901 mo
365.091 150.549 365.014 150.269 364.871 150.071 cv
364.723 149.874 364.514 149.775 364.25 149.775 cv
363.986 149.775 363.778 149.874 363.629 150.071 cv
363.481 150.269 363.409 150.549 363.409 150.901 cv
363.409 151.258 363.481 151.533 363.629 151.731 cv
363.778 151.929 363.986 152.028 364.25 152.028 cv
364.514 152.028 364.723 151.929 364.871 151.731 cv
365.014 151.533 365.091 151.258 365.091 150.901 cv
365.585 152.066 mo
365.585 152.572 365.47 152.951 365.245 153.203 cv
365.014 153.451 364.668 153.577 364.201 153.577 cv
364.025 153.577 363.865 153.561 363.712 153.539 cv
363.558 153.511 363.404 153.473 363.261 153.418 cv
363.261 152.94 li
363.404 153.017 363.547 153.072 363.69 153.11 cv
363.833 153.149 363.975 153.171 364.124 153.171 cv
364.442 153.171 364.684 153.083 364.849 152.918 cv
365.008 152.747 365.091 152.495 365.091 152.154 cv
365.091 151.912 li
364.986 152.088 364.855 152.22 364.695 152.308 cv
364.536 152.396 364.349 152.44 364.129 152.44 cv
363.756 152.44 363.459 152.302 363.234 152.022 cv
363.008 151.742 362.898 151.368 362.898 150.901 cv
362.898 150.439 363.008 150.066 363.234 149.786 cv
363.459 149.505 363.756 149.362 364.129 149.362 cv
364.349 149.362 364.536 149.406 364.695 149.494 cv
364.855 149.582 364.986 149.714 365.091 149.89 cv
365.091 149.434 li
365.585 149.434 li
365.585 152.066 li
f
366.612 153.022 mo
367.231 153.022 li
367.231 150.883 li
366.558 151.018 li
366.558 150.672 li
367.227 150.537 li
367.608 150.537 li
367.608 153.022 li
368.227 153.022 li
368.227 153.341 li
366.612 153.341 li
366.612 153.022 li
f
369.804 150.787 mo
369.608 150.787 369.462 150.883 369.362 151.076 cv
369.262 151.268 369.216 151.556 369.216 151.941 cv
369.216 152.326 369.262 152.614 369.362 152.807 cv
369.462 152.999 369.608 153.095 369.804 153.095 cv
370.001 153.095 370.147 152.999 370.247 152.807 cv
370.343 152.614 370.393 152.326 370.393 151.941 cv
370.393 151.556 370.343 151.268 370.247 151.076 cv
370.147 150.883 370.001 150.787 369.804 150.787 cv
369.804 150.487 mo
370.116 150.487 370.355 150.614 370.524 150.86 cv
370.689 151.11 370.774 151.472 370.774 151.941 cv
370.774 152.414 370.689 152.776 370.524 153.022 cv
370.355 153.268 370.116 153.391 369.804 153.391 cv
369.489 153.391 369.247 153.268 369.081 153.022 cv
368.916 152.776 368.835 152.414 368.835 151.941 cv
368.835 151.472 368.916 151.11 369.081 150.86 cv
369.247 150.614 369.489 150.487 369.804 150.487 cv
f
373.586 155.15 mo
373.586 155.322 li
373.05 154.815 372.625 154.193 372.314 153.447 cv
371.998 152.7 371.845 151.853 371.845 150.916 cv
371.845 149.978 372.003 149.112 372.323 148.318 cv
372.644 147.524 373.065 146.921 373.586 146.5 cv
373.586 146.658 li
373.223 147.031 372.916 147.581 372.668 148.308 cv
372.419 149.036 372.299 149.902 372.299 150.916 cv
372.299 152.686 372.725 154.097 373.586 155.15 cv
f
377.279 148.07 mo
377.581 148.07 li
377.944 150.032 li
377.667 150.032 li
377.586 149.529 li
376.703 149.529 li
376.425 150.032 li
376.148 150.032 li
377.279 148.07 li
377.376 148.331 mo
376.824 149.308 li
377.546 149.308 li
377.376 148.331 li
f
376.743 153.341 mo
377.422 153.341 li
377.605 153.341 377.742 153.376 377.834 153.444 cv
377.925 153.514 377.971 153.616 377.971 153.753 cv
377.971 153.88 377.931 153.987 377.852 154.079 cv
377.774 154.171 377.672 154.227 377.546 154.246 cv
377.653 154.273 377.734 154.319 377.788 154.389 cv
377.842 154.459 377.871 154.55 377.871 154.663 cv
377.871 154.863 377.796 155.019 377.651 155.132 cv
377.505 155.248 377.306 155.304 377.053 155.304 cv
376.361 155.304 li
376.743 153.341 li
376.808 154.367 mo
376.668 155.086 li
377.096 155.086 li
377.255 155.086 377.379 155.051 377.465 154.976 cv
377.551 154.903 377.597 154.798 377.597 154.663 cv
377.597 154.561 377.567 154.488 377.511 154.44 cv
377.451 154.391 377.36 154.367 377.233 154.367 cv
376.808 154.367 li
376.964 153.559 mo
376.848 154.152 li
377.244 154.152 li
377.384 154.152 377.494 154.122 377.575 154.06 cv
377.653 153.998 377.694 153.912 377.694 153.804 cv
377.613 153.619 li
377.559 153.581 377.473 153.559 377.357 153.559 cv
376.964 153.559 li
f
379.473 146.672 mo
379.473 146.5 li
380.009 147.007 380.43 147.633 380.745 148.38 cv
381.056 149.131 381.214 149.978 381.214 150.915 cv
381.214 151.853 381.051 152.719 380.731 153.508 cv
380.41 154.298 379.989 154.901 379.473 155.322 cv
379.473 155.164 li
379.836 154.791 380.138 154.24 380.386 153.518 cv
380.635 152.791 380.76 151.925 380.76 150.915 cv
380.76 149.145 380.329 147.729 379.473 146.672 cv
f
375.423 146.809 mo
375.888 149.402 li
375.523 149.402 li
375.235 147.848 li
374.208 149.402 li
373.846 149.402 li
375.154 147.386 li
375.088 147.013 li
375.061 146.855 374.981 146.774 374.846 146.774 cv
374.665 146.774 li
374.723 146.478 li
374.942 146.482 li
375.223 146.49 375.385 146.597 375.423 146.809 cv
f
375.423 152.081 mo
375.888 154.673 li
375.523 154.673 li
375.235 153.119 li
374.208 154.673 li
373.846 154.673 li
375.154 152.658 li
375.088 152.285 li
375.061 152.127 374.981 152.046 374.846 152.046 cv
374.665 152.046 li
374.723 151.75 li
374.942 151.754 li
375.223 151.761 375.385 151.869 375.423 152.081 cv
f
374.011 151.406 mo
378.24 151.406 li
378.24 151.063 li
374.011 151.063 li
cp
f
270.975 131.485 mo
268.62 131.485 li
f
270.975 131.485 mo
268.62 131.485 li
@
260.877 132.842 mo
261.073 132.842 261.219 132.736 261.317 132.52 cv
261.411 132.308 261.462 131.983 261.462 131.547 cv
261.462 131.115 261.411 130.789 261.317 130.574 cv
261.219 130.362 261.073 130.252 260.877 130.252 cv
260.681 130.252 260.532 130.362 260.437 130.574 cv
260.339 130.789 260.292 131.115 260.292 131.547 cv
260.292 131.983 260.339 132.308 260.437 132.52 cv
260.532 132.736 260.681 132.842 260.877 132.842 cv
260.877 133.027 mo
260.563 133.027 260.32 132.897 260.147 132.638 cv
259.974 132.379 259.888 132.018 259.888 131.547 cv
259.888 131.08 259.974 130.715 260.147 130.456 cv
260.32 130.197 260.563 130.063 260.877 130.063 cv
261.187 130.063 261.43 130.197 261.603 130.456 cv
261.776 130.715 261.866 131.08 261.866 131.547 cv
261.866 132.018 261.776 132.379 261.603 132.638 cv
261.43 132.897 261.187 133.027 260.877 133.027 cv
f
262.494 132.775 mo
262.565 132.595 li
262.749 132.52 li
262.93 132.595 li
263.004 132.775 li
262.93 132.956 li
262.749 133.027 li
262.565 132.956 li
262.494 132.775 li
f
264.621 132.842 mo
264.818 132.842 264.963 132.736 265.061 132.52 cv
265.155 132.308 265.206 131.983 265.206 131.547 cv
265.206 131.115 265.155 130.789 265.061 130.574 cv
264.963 130.362 264.818 130.252 264.621 130.252 cv
264.425 130.252 264.276 130.362 264.182 130.574 cv
264.084 130.789 264.037 131.115 264.037 131.547 cv
264.037 131.983 264.084 132.308 264.182 132.52 cv
264.276 132.736 264.425 132.842 264.621 132.842 cv
264.621 133.027 mo
264.307 133.027 264.064 132.897 263.891 132.638 cv
263.719 132.379 263.632 132.018 263.632 131.547 cv
263.632 131.08 263.719 130.715 263.891 130.456 cv
264.064 130.197 264.307 130.063 264.621 130.063 cv
264.932 130.063 265.175 130.197 265.348 130.456 cv
265.52 130.715 265.611 131.08 265.611 131.547 cv
265.611 132.018 265.52 132.379 265.348 132.638 cv
265.175 132.897 264.932 133.027 264.621 133.027 cv
f
270.975 108.724 mo
268.62 108.724 li
f
270.975 108.724 mo
268.62 108.724 li
@
260.877 110.081 mo
261.073 110.081 261.219 109.975 261.317 109.759 cv
261.411 109.547 261.462 109.221 261.462 108.785 cv
261.462 108.354 261.411 108.028 261.317 107.812 cv
261.219 107.6 261.073 107.49 260.877 107.49 cv
260.681 107.49 260.532 107.6 260.437 107.812 cv
260.339 108.028 260.292 108.354 260.292 108.785 cv
260.292 109.221 260.339 109.547 260.437 109.759 cv
260.532 109.975 260.681 110.081 260.877 110.081 cv
260.877 110.265 mo
260.563 110.265 260.32 110.136 260.147 109.877 cv
259.974 109.618 259.888 109.256 259.888 108.785 cv
259.888 108.318 259.974 107.953 260.147 107.694 cv
260.32 107.435 260.563 107.302 260.877 107.302 cv
261.187 107.302 261.43 107.435 261.603 107.694 cv
261.776 107.953 261.866 108.318 261.866 108.785 cv
261.866 109.256 261.776 109.618 261.603 109.877 cv
261.43 110.136 261.187 110.265 260.877 110.265 cv
f
262.494 110.014 mo
262.565 109.833 li
262.749 109.759 li
262.93 109.833 li
263.004 110.014 li
262.93 110.195 li
262.749 110.265 li
262.565 110.195 li
262.494 110.014 li
f
265.348 107.353 mo
265.348 107.667 li
264.037 107.667 li
264.037 108.487 li
264.099 108.44 264.178 108.409 264.268 108.385 cv
264.355 108.362 264.457 108.35 264.566 108.35 cv
264.873 108.35 265.116 108.436 265.297 108.609 cv
265.477 108.782 265.567 109.013 265.567 109.307 cv
265.567 109.614 265.477 109.849 265.297 110.014 cv
265.116 110.183 264.861 110.265 264.535 110.265 cv
264.402 110.265 264.268 110.249 264.131 110.218 cv
263.99 110.191 263.848 110.143 263.707 110.077 cv
263.707 109.519 li
263.923 109.519 li
263.935 109.704 263.993 109.845 264.095 109.939 cv
264.198 110.034 264.347 110.081 264.535 110.081 cv
264.735 110.081 264.888 110.014 264.998 109.881 cv
265.108 109.747 265.163 109.559 265.163 109.307 cv
265.163 109.06 265.108 108.872 265.002 108.738 cv
264.892 108.605 264.739 108.538 264.535 108.538 cv
264.417 108.538 264.315 108.562 264.229 108.601 cv
263.997 108.789 li
263.833 108.789 li
263.833 107.353 li
265.348 107.353 li
f
270.975 85.9625 mo
268.62 85.9625 li
f
270.975 85.9625 mo
268.62 85.9625 li
@
260.186 87.4527 mo
260.186 87.2486 li
260.685 87.2486 li
260.685 84.87 li
260.108 85.2429 li
260.108 84.9917 li
260.806 84.5403 li
261.069 84.5403 li
261.069 87.2486 li
261.568 87.2486 li
261.568 87.4527 li
260.186 87.4527 li
f
262.494 87.2525 mo
262.565 87.072 li
262.749 86.9974 li
262.93 87.072 li
263.004 87.2525 li
262.93 87.4331 li
262.749 87.5037 li
262.565 87.4331 li
262.494 87.2525 li
f
264.621 87.3192 mo
264.818 87.3192 264.963 87.2132 265.061 86.9974 cv
265.155 86.7854 265.206 86.4596 265.206 86.024 cv
265.206 85.5922 265.155 85.2664 265.061 85.0506 cv
264.963 84.8386 264.818 84.7287 264.621 84.7287 cv
264.425 84.7287 264.276 84.8386 264.182 85.0506 cv
264.084 85.2664 264.037 85.5922 264.037 86.024 cv
264.037 86.4596 264.084 86.7854 264.182 86.9974 cv
264.276 87.2132 264.425 87.3192 264.621 87.3192 cv
264.621 87.5037 mo
264.307 87.5037 264.064 87.3742 263.891 87.1151 cv
263.719 86.8561 263.632 86.495 263.632 86.024 cv
263.632 85.5569 263.719 85.1919 263.891 84.9328 cv
264.064 84.6738 264.307 84.5403 264.621 84.5403 cv
264.932 84.5403 265.175 84.6738 265.348 84.9328 cv
265.52 85.1919 265.611 85.5569 265.611 86.024 cv
265.611 86.495 265.52 86.8561 265.348 87.1151 cv
265.175 87.3742 264.932 87.5037 264.621 87.5037 cv
f
270.975 63.2012 mo
268.62 63.2012 li
f
270.975 63.2011 mo
268.62 63.2011 li
@
260.186 64.6916 mo
260.186 64.4875 li
260.685 64.4875 li
260.685 62.1089 li
260.108 62.4818 li
260.108 62.2306 li
260.806 61.7792 li
261.069 61.7792 li
261.069 64.4875 li
261.568 64.4875 li
261.568 64.6916 li
260.186 64.6916 li
f
262.494 64.4914 mo
262.565 64.3109 li
262.749 64.2363 li
262.93 64.3109 li
263.004 64.4914 li
262.93 64.672 li
262.749 64.7426 li
262.565 64.672 li
262.494 64.4914 li
f
265.348 61.8303 mo
265.348 62.1443 li
264.037 62.1443 li
264.037 62.9646 li
264.099 62.9175 264.178 62.8861 264.268 62.8625 cv
264.355 62.839 264.457 62.8272 264.566 62.8272 cv
264.873 62.8272 265.116 62.9136 265.297 63.0863 cv
265.477 63.259 265.567 63.4905 265.567 63.7849 cv
265.567 64.0911 265.477 64.3266 265.297 64.4914 cv
265.116 64.6602 264.861 64.7426 264.535 64.7426 cv
264.402 64.7426 264.268 64.7269 264.131 64.6955 cv
263.99 64.668 263.848 64.6209 263.707 64.5542 cv
263.707 63.9969 li
263.923 63.9969 li
263.935 64.1814 263.993 64.3226 264.095 64.4168 cv
264.198 64.511 264.347 64.5581 264.535 64.5581 cv
264.735 64.5581 264.888 64.4914 264.998 64.358 cv
265.108 64.2245 265.163 64.0361 265.163 63.7849 cv
265.163 63.5376 265.108 63.3492 265.002 63.2158 cv
264.892 63.0823 264.739 63.0156 264.535 63.0156 cv
264.417 63.0156 264.315 63.0392 264.229 63.0784 cv
263.997 63.2668 li
263.833 63.2668 li
263.833 61.8303 li
265.348 61.8303 li
f
270.975 40.4398 mo
268.62 40.4398 li
f
270.975 40.4398 mo
268.62 40.4398 li
@
260.131 39.7518 mo
259.915 39.7518 li
259.915 39.2415 li
260.049 39.1709 260.186 39.1159 260.328 39.0767 cv
260.465 39.0374 260.602 39.0178 260.736 39.0178 cv
261.034 39.0178 261.27 39.0924 261.442 39.2337 cv
261.615 39.3789 261.701 39.5751 261.701 39.8224 cv
261.701 40.105 261.505 40.4386 261.113 40.8272 cv
261.046 40.8939 li
260.324 41.6161 li
261.517 41.6161 li
261.517 41.2629 li
261.741 41.2629 li
261.741 41.9301 li
259.896 41.9301 li
259.896 41.7221 li
260.763 40.8547 li
260.952 40.6663 261.089 40.4897 261.171 40.3287 cv
261.254 40.1678 261.297 39.999 261.297 39.8224 cv
261.297 39.6301 261.246 39.4809 261.144 39.371 cv
261.042 39.2611 260.905 39.2062 260.732 39.2062 cv
260.547 39.2062 260.406 39.2533 260.308 39.3436 cv
260.206 39.4338 260.147 39.5712 260.131 39.7518 cv
f
262.494 41.73 mo
262.565 41.5494 li
262.749 41.4748 li
262.93 41.5494 li
263.004 41.73 li
262.93 41.9105 li
262.749 41.9812 li
262.565 41.9105 li
262.494 41.73 li
f
264.621 41.7967 mo
264.818 41.7967 264.963 41.6907 265.061 41.4748 cv
265.155 41.2629 265.206 40.9371 265.206 40.5014 cv
265.206 40.0697 265.155 39.7439 265.061 39.528 cv
264.963 39.3161 264.818 39.2062 264.621 39.2062 cv
264.425 39.2062 264.276 39.3161 264.182 39.528 cv
264.084 39.7439 264.037 40.0697 264.037 40.5014 cv
264.037 40.9371 264.084 41.2629 264.182 41.4748 cv
264.276 41.6907 264.425 41.7967 264.621 41.7967 cv
264.621 41.9812 mo
264.307 41.9812 264.064 41.8516 263.891 41.5926 cv
263.719 41.3335 263.632 40.9724 263.632 40.5014 cv
263.632 40.0344 263.719 39.6693 263.891 39.4103 cv
264.064 39.1512 264.307 39.0178 264.621 39.0178 cv
264.932 39.0178 265.175 39.1512 265.348 39.4103 cv
265.52 39.6693 265.611 40.0344 265.611 40.5014 cv
265.611 40.9724 265.52 41.3335 265.348 41.5926 cv
265.175 41.8516 264.932 41.9812 264.621 41.9812 cv
f
270.975 17.6785 mo
268.62 17.6785 li
f
270.975 17.6785 mo
268.62 17.6785 li
@
260.131 16.9903 mo
259.915 16.9903 li
259.915 16.48 li
260.049 16.4094 260.186 16.3544 260.328 16.3152 cv
260.465 16.2759 260.602 16.2563 260.736 16.2563 cv
261.034 16.2563 261.27 16.3309 261.442 16.4722 cv
261.615 16.6174 261.701 16.8137 261.701 17.0609 cv
261.701 17.3435 261.505 17.6772 261.113 18.0657 cv
261.046 18.1325 li
260.324 18.8547 li
261.517 18.8547 li
261.517 18.5014 li
261.741 18.5014 li
261.741 19.1687 li
259.896 19.1687 li
259.896 18.9606 li
260.763 18.0932 li
260.952 17.9048 261.089 17.7282 261.171 17.5673 cv
261.254 17.4063 261.297 17.2376 261.297 17.0609 cv
261.297 16.8686 261.246 16.7195 261.144 16.6096 cv
261.042 16.4997 260.905 16.4447 260.732 16.4447 cv
260.547 16.4447 260.406 16.4918 260.308 16.5821 cv
260.206 16.6724 260.147 16.8097 260.131 16.9903 cv
f
262.494 18.9685 mo
262.565 18.7879 li
262.749 18.7134 li
262.93 18.7879 li
263.004 18.9685 li
262.93 19.149 li
262.749 19.2197 li
262.565 19.149 li
262.494 18.9685 li
f
265.348 16.3073 mo
265.348 16.6213 li
264.037 16.6213 li
264.037 17.4417 li
264.099 17.3946 264.178 17.3632 264.268 17.3396 cv
264.355 17.3161 264.457 17.3043 264.566 17.3043 cv
264.873 17.3043 265.116 17.3906 265.297 17.5633 cv
265.477 17.736 265.567 17.9676 265.567 18.262 cv
265.567 18.5681 265.477 18.8036 265.297 18.9685 cv
265.116 19.1373 264.861 19.2197 264.535 19.2197 cv
264.402 19.2197 264.268 19.204 264.131 19.1726 cv
263.99 19.1451 263.848 19.098 263.707 19.0313 cv
263.707 18.4739 li
263.923 18.4739 li
263.935 18.6584 263.993 18.7997 264.095 18.8939 cv
264.198 18.9881 264.347 19.0352 264.535 19.0352 cv
264.735 19.0352 264.888 18.9685 264.998 18.835 cv
265.108 18.7016 265.163 18.5132 265.163 18.262 cv
265.163 18.0147 265.108 17.8263 265.002 17.6929 cv
264.892 17.5594 264.739 17.4927 264.535 17.4927 cv
264.417 17.4927 264.315 17.5162 264.229 17.5555 cv
263.997 17.7439 li
263.833 17.7439 li
263.833 16.3073 li
265.348 16.3073 li
f
256.553 95.5864 mo
256.553 94.7841 li
256.553 94.4654 256.487 94.2291 256.344 94.0807 cv
256.207 93.9324 255.987 93.8554 255.679 93.8554 cv
255.382 93.8554 255.162 93.9324 255.02 94.0807 cv
254.882 94.2291 254.811 94.4654 254.811 94.7841 cv
254.811 95.5864 li
256.553 95.5864 li
254.525 95.5864 mo
254.525 94.905 li
254.525 94.6138 254.47 94.3995 254.36 94.2621 cv
254.25 94.1302 254.069 94.0588 253.822 94.0588 cv
253.58 94.0588 253.399 94.1302 253.289 94.2621 cv
253.179 94.3995 253.118 94.6138 253.118 94.905 cv
253.118 95.5864 li
254.525 95.5864 li
256.838 96.6414 mo
256.553 96.6414 li
256.553 96.1304 li
253.118 96.1304 li
253.118 96.6414 li
252.833 96.6414 li
252.833 94.6632 li
252.833 94.2621 252.915 93.9598 253.08 93.751 cv
253.245 93.5477 253.492 93.4433 253.822 93.4433 cv
254.063 93.4433 254.25 93.5148 254.393 93.6576 cv
254.536 93.8005 254.618 94.0038 254.651 94.2786 cv
254.695 93.9379 254.805 93.6796 254.981 93.5038 cv
255.157 93.3279 255.388 93.24 255.679 93.24 cv
256.075 93.24 256.371 93.3664 256.558 93.6192 cv
256.745 93.8719 256.838 94.2621 256.838 94.7896 cv
256.838 96.6414 li
f
253.981 90.2782 mo
254.695 90.2782 li
254.695 90.5639 li
254.553 90.5749 254.448 90.6134 254.377 90.6793 cv
254.311 90.7508 254.272 90.8552 254.272 90.987 cv
254.272 91.2288 254.36 91.4157 254.525 91.5475 cv
254.695 91.6794 254.937 91.7399 255.25 91.7399 cv
256.553 91.7399 li
256.553 91.1684 li
256.838 91.1684 li
256.838 92.6795 li
256.553 92.6795 li
256.553 92.2344 li
254.267 92.2344 li
254.267 92.707 li
253.987 92.707 li
253.987 91.7399 li
254.492 91.7399 li
254.294 91.6464 254.151 91.5256 254.052 91.3717 cv
253.959 91.2178 253.91 91.031 253.91 90.8112 cv
253.932 90.5584 li
253.943 90.4705 253.959 90.3771 253.981 90.2782 cv
f
255.943 88.0912 mo
255.338 88.0912 li
255.338 88.7286 li
255.338 88.9759 255.393 89.1572 255.498 89.2781 cv
255.608 89.399 255.767 89.454 255.981 89.454 cv
256.179 89.454 256.338 89.3935 256.454 89.2726 cv
256.575 89.1517 256.63 88.9869 256.63 88.7781 cv
256.63 88.5748 256.569 88.4099 256.443 88.2835 cv
256.316 88.1571 256.152 88.0912 255.943 88.0912 cv
255.058 87.5967 mo
256.553 87.5967 li
256.553 87.1571 li
256.838 87.1571 li
256.838 88.0912 li
256.531 88.0912 li
256.663 88.2011 256.762 88.3275 256.822 88.4704 cv
256.877 88.6132 256.91 88.7836 256.91 88.9704 cv
256.91 89.2891 256.827 89.5419 256.663 89.7287 cv
256.498 89.9155 256.267 90.0035 255.981 90.0035 cv
255.69 90.0035 255.465 89.8991 255.3 89.6848 cv
255.135 89.4759 255.053 89.1737 255.053 88.7836 cv
255.053 88.0912 li
254.855 88.0912 li
254.64 88.0912 254.476 88.1571 254.355 88.289 cv
254.234 88.4209 254.173 88.6077 254.173 88.844 cv
254.173 89.0418 254.223 89.1957 254.311 89.3111 cv
254.399 89.432 254.531 89.5034 254.706 89.5309 cv
254.706 89.7837 li
254.129 89.7837 li
254.058 89.6133 254.003 89.4485 253.965 89.2836 cv
253.932 89.1243 253.91 88.9649 253.91 88.8111 cv
253.91 88.4154 254.009 88.1187 254.206 87.9099 cv
254.404 87.7011 254.684 87.5967 255.058 87.5967 cv
f
256.838 86.7779 mo
256.553 86.7779 li
256.553 86.3328 li
254.272 86.3328 li
254.272 86.8054 li
253.987 86.8054 li
253.987 85.8383 li
254.492 85.8383 li
254.305 85.7504 254.157 85.6295 254.058 85.4866 cv
253.959 85.3437 253.91 85.1734 253.91 84.9756 cv
253.91 84.6624 254.003 84.4316 254.179 84.2832 cv
254.36 84.1348 254.64 84.0579 255.025 84.0579 cv
256.553 84.0579 li
256.553 83.6183 li
256.838 83.6183 li
256.838 84.9811 li
256.553 84.9811 li
256.553 84.5525 li
255.179 84.5525 li
254.833 84.5525 254.596 84.5964 254.465 84.6843 cv
254.333 84.7723 254.267 84.9206 254.267 85.1349 cv
254.267 85.3657 254.355 85.5416 254.52 85.6624 cv
254.69 85.7833 254.932 85.8383 255.25 85.8383 cv
256.553 85.8383 li
256.553 85.4097 li
256.838 85.4097 li
256.838 86.7779 li
f
255.981 80.64 mo
256.289 80.7115 256.52 80.8433 256.674 81.0412 cv
256.833 81.239 256.91 81.4973 256.91 81.8105 cv
256.91 82.2281 256.778 82.5578 256.503 82.8106 cv
256.228 83.0633 255.866 83.1897 255.41 83.1897 cv
254.959 83.1897 254.596 83.0633 254.322 82.8106 cv
254.047 82.5578 253.91 82.2281 253.91 81.8105 cv
253.91 81.6346 253.932 81.4533 253.976 81.272 cv
254.02 81.0961 254.08 80.9148 254.162 80.7334 cv
254.893 80.7334 li
254.893 81.0192 li
254.646 81.0577 254.465 81.1401 254.349 81.2665 cv
254.234 81.3928 254.173 81.5742 254.173 81.805 cv
254.173 82.0742 254.278 82.2775 254.487 82.4094 cv
254.695 82.5468 255.003 82.6127 255.41 82.6127 cv
255.827 82.6127 256.135 82.5468 256.344 82.4094 cv
256.553 82.2775 256.652 82.0742 256.652 81.805 cv
256.652 81.5962 256.597 81.4258 256.487 81.2994 cv
256.377 81.173 256.207 81.0851 255.981 81.0357 cv
255.981 80.64 li
f
256.838 80.162 mo
256.553 80.162 li
256.553 79.7169 li
252.948 79.7169 li
252.948 80.1895 li
252.662 80.1895 li
252.662 79.2223 li
254.492 79.2223 li
254.305 79.1344 254.157 79.0135 254.058 78.8707 cv
253.959 78.7278 253.91 78.5574 253.91 78.3596 cv
253.91 78.0464 254.003 77.8156 254.179 77.6673 cv
254.36 77.5189 254.64 77.442 255.025 77.442 cv
256.553 77.442 li
256.553 77.0024 li
256.838 77.0024 li
256.838 78.3651 li
256.553 78.3651 li
256.553 77.9365 li
255.179 77.9365 li
254.833 77.9365 254.596 77.9805 254.465 78.0684 cv
254.338 78.1563 254.272 78.3047 254.272 78.519 cv
254.272 78.7498 254.36 78.9256 254.525 79.0465 cv
254.69 79.1674 254.932 79.2223 255.25 79.2223 cv
256.553 79.2223 li
256.553 78.7937 li
256.838 78.7937 li
256.838 80.162 li
f
256.838 74.7989 mo
256.553 74.7989 li
256.553 74.2879 li
253.118 74.2879 li
253.118 74.7989 li
252.833 74.7989 li
252.833 73.2328 li
253.118 73.2328 li
253.118 73.7439 li
256.509 73.7439 li
256.509 71.914 li
255.838 71.914 li
255.838 71.5843 li
256.838 71.5843 li
256.838 74.7989 li
f
255.465 68.4742 mo
255.465 70.6007 li
255.487 70.6007 li
255.871 70.6007 256.163 70.5293 256.36 70.3864 cv
256.558 70.2436 256.652 70.0293 256.652 69.7435 cv
256.652 69.5292 256.597 69.3534 256.481 69.2105 cv
256.371 69.0731 256.201 68.9742 255.976 68.9193 cv
255.976 68.5236 li
256.289 68.6005 256.525 68.7489 256.679 68.9577 cv
256.833 69.172 256.91 69.4523 256.91 69.793 cv
256.91 70.2106 256.778 70.5458 256.503 70.7985 cv
256.228 71.0513 255.866 71.1777 255.41 71.1777 cv
254.959 71.1777 254.596 71.0568 254.322 70.804 cv
254.047 70.5568 253.91 70.2326 253.91 69.8259 cv
253.91 69.3973 254.047 69.0621 254.311 68.8313 cv
254.574 68.6005 254.959 68.4852 255.465 68.4742 cv
255.179 69.0566 mo
254.849 69.0676 254.596 69.1391 254.426 69.2709 cv
254.261 69.4028 254.173 69.5842 254.173 69.8259 cv
254.173 70.0567 254.261 70.2326 254.432 70.3644 cv
254.602 70.4963 254.849 70.5732 255.179 70.6007 cv
255.179 69.0566 li
f
256.838 67.9741 mo
256.553 67.9741 li
256.553 67.5291 li
254.272 67.5291 li
254.272 68.0016 li
253.987 68.0016 li
253.987 67.0345 li
254.492 67.0345 li
254.305 66.9466 254.157 66.8257 254.058 66.6828 cv
253.959 66.5399 253.91 66.3696 253.91 66.1718 cv
253.91 65.8586 254.003 65.6278 254.179 65.4794 cv
254.36 65.331 254.64 65.2541 255.025 65.2541 cv
256.553 65.2541 li
256.553 64.8145 li
256.838 64.8145 li
256.838 66.1773 li
256.553 66.1773 li
256.553 65.7487 li
255.179 65.7487 li
254.833 65.7487 254.596 65.7926 254.465 65.8805 cv
254.333 65.9685 254.267 66.1168 254.267 66.3311 cv
254.267 66.5619 254.355 66.7378 254.52 66.8587 cv
254.69 66.9796 254.932 67.0345 255.25 67.0345 cv
256.553 67.0345 li
256.553 66.6059 li
256.838 66.6059 li
256.838 67.9741 li
f
254.272 61.7758 mo
256.778 61.7758 li
257.185 61.7758 257.498 61.8912 257.718 62.1165 cv
257.937 62.3418 258.053 62.6605 258.053 63.0781 cv
258.053 63.2649 258.036 63.4463 258.003 63.6166 cv
257.97 63.7925 257.915 63.9573 257.85 64.1112 cv
257.251 64.1112 li
257.251 63.8529 li
257.437 63.8199 257.569 63.7485 257.657 63.6276 cv
257.745 63.5067 257.789 63.3364 257.789 63.1111 cv
257.789 62.8253 257.707 62.611 257.542 62.4737 cv
257.377 62.3418 257.119 62.2704 256.778 62.2704 cv
256.393 62.2704 li
256.575 62.3693 256.707 62.4902 256.789 62.6385 cv
256.866 62.7924 256.91 62.9737 256.91 63.1935 cv
256.91 63.5452 256.772 63.8364 256.498 64.0562 cv
256.223 64.276 255.86 64.3859 255.41 64.3859 cv
254.965 64.3859 254.602 64.276 254.327 64.0562 cv
254.052 63.8364 253.91 63.5452 253.91 63.1935 cv
253.91 62.9737 253.954 62.7924 254.036 62.6385 cv
254.124 62.4902 254.256 62.3693 254.432 62.2704 cv
253.987 62.2704 li
253.987 61.3032 li
254.272 61.3032 li
254.272 61.7758 li
255.272 62.2704 mo
254.932 62.2704 254.673 62.3363 254.492 62.4682 cv
254.311 62.6001 254.217 62.7924 254.217 63.0396 cv
254.217 63.2924 254.322 63.4847 254.52 63.6166 cv
254.717 63.7485 255.014 63.8089 255.41 63.8089 cv
255.805 63.8089 256.108 63.7485 256.305 63.6166 cv
256.509 63.4847 256.608 63.2924 256.608 63.0396 cv
256.608 62.7924 256.52 62.6001 256.338 62.4682 cv
256.163 62.3363 255.899 62.2704 255.553 62.2704 cv
255.272 62.2704 li
f
254.272 60.5504 mo
254.272 60.9845 li
253.987 60.9845 li
253.987 60.5504 li
253.102 60.5504 li
253.102 60.0559 li
253.987 60.0559 li
253.987 59.1272 li
254.272 59.1272 li
254.272 60.0559 li
256.086 60.0559 li
256.327 60.0559 256.487 60.0339 256.553 59.9844 cv
256.619 59.9405 256.652 59.8526 256.652 59.7262 cv
256.652 59.5998 256.613 59.5064 256.536 59.4459 cv
256.459 59.391 256.338 59.358 256.168 59.3525 cv
256.168 58.9788 li
256.432 58.9953 256.619 59.0668 256.734 59.1931 cv
256.849 59.3195 256.91 59.5119 256.91 59.7701 cv
256.91 60.0559 256.844 60.2592 256.723 60.3746 cv
256.602 60.4955 256.388 60.5504 256.086 60.5504 cv
254.272 60.5504 li
f
256.838 58.7096 mo
256.553 58.7096 li
256.553 58.2645 li
252.948 58.2645 li
252.948 58.7371 li
252.662 58.7371 li
252.662 57.77 li
254.492 57.77 li
254.305 57.6821 254.157 57.5612 254.058 57.4183 cv
253.959 57.2754 253.91 57.1051 253.91 56.9073 cv
253.91 56.5941 254.003 56.3633 254.179 56.2149 cv
254.36 56.0665 254.64 55.9896 255.025 55.9896 cv
256.553 55.9896 li
256.553 55.55 li
256.838 55.55 li
256.838 56.9128 li
256.553 56.9128 li
256.553 56.4842 li
255.179 56.4842 li
254.833 56.4842 254.596 56.5281 254.465 56.616 cv
254.338 56.704 254.272 56.8523 254.272 57.0666 cv
254.272 57.2974 254.36 57.4733 254.525 57.5942 cv
254.69 57.715 254.932 57.77 255.25 57.77 cv
256.553 57.77 li
256.553 57.3414 li
256.838 57.3414 li
256.838 58.7096 li
f
gsave
270.974 136.009 mo
446.187 136.009 li
446.187 16.3281 li
270.974 16.3281 li
270.974 136.009 li
clp
274.582 87.2188 mo
277.674 87.2188 li
277.674 82.4664 li
274.582 82.4664 li
274.582 87.2188 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
.686875 lw
0 lj
274.582 87.2188 mo
277.674 87.2188 li
277.674 82.4664 li
274.582 82.4664 li
274.582 87.2188 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
grestore
284.888 98.1211 mo
287.981 98.1211 li
287.981 94.6463 li
284.888 94.6463 li
284.888 98.1211 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
.686875 lw
0 lj
284.888 98.1211 mo
287.981 98.1211 li
287.981 94.6463 li
284.888 94.6463 li
284.888 98.1211 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
295.195 106.591 mo
298.287 106.591 li
298.287 104.16 li
295.195 104.16 li
295.195 106.591 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
295.195 106.591 mo
298.287 106.591 li
298.287 104.16 li
295.195 104.16 li
295.195 106.591 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
305.502 112.491 mo
308.594 112.491 li
308.594 110.934 li
305.502 110.934 li
305.502 112.491 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
305.502 112.491 mo
308.594 112.491 li
308.594 110.934 li
305.502 110.934 li
305.502 112.491 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
315.808 116.988 mo
318.9 116.988 li
318.9 116.068 li
315.808 116.068 li
315.808 116.988 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
315.808 116.988 mo
318.9 116.988 li
318.9 116.068 li
315.808 116.068 li
315.808 116.988 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
326.115 120.56 mo
329.207 120.56 li
329.207 119.809 li
326.115 119.809 li
326.115 120.56 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
326.115 120.56 mo
329.207 120.56 li
329.207 119.809 li
326.115 119.809 li
326.115 120.56 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
336.421 123.358 mo
339.514 123.358 li
339.514 122.878 li
336.421 122.878 li
336.421 123.358 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
336.421 123.358 mo
339.514 123.358 li
339.514 122.878 li
336.421 122.878 li
336.421 123.358 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
346.728 125.274 mo
349.82 125.274 li
349.82 124.996 li
346.728 124.996 li
346.728 125.274 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
346.728 125.274 mo
349.82 125.274 li
349.82 124.996 li
346.728 124.996 li
346.728 125.274 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
357.035 126.777 mo
360.127 126.777 li
360.127 126.609 li
357.035 126.609 li
357.035 126.777 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
357.035 126.777 mo
360.127 126.777 li
360.127 126.609 li
357.035 126.609 li
357.035 126.777 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
367.341 127.938 mo
370.433 127.938 li
370.433 127.812 li
367.341 127.812 li
367.341 127.938 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
367.341 127.938 mo
370.433 127.938 li
370.433 127.812 li
367.341 127.812 li
367.341 127.938 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
377.648 128.786 mo
380.74 128.786 li
380.74 128.701 li
377.648 128.701 li
377.648 128.786 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
377.648 128.786 mo
380.74 128.786 li
380.74 128.701 li
377.648 128.701 li
377.648 128.786 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
387.954 129.404 mo
391.046 129.404 li
391.046 129.346 li
387.954 129.346 li
387.954 129.404 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
387.954 129.404 mo
391.046 129.404 li
391.046 129.346 li
387.954 129.346 li
387.954 129.404 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
398.261 129.857 mo
401.353 129.857 li
401.353 129.819 li
398.261 129.819 li
398.261 129.857 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
398.261 129.857 mo
401.353 129.857 li
401.353 129.819 li
398.261 129.819 li
398.261 129.857 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
408.568 130.175 mo
411.66 130.175 li
411.66 130.144 li
408.568 130.144 li
408.568 130.175 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
408.567 130.175 mo
411.66 130.175 li
411.66 130.144 li
408.567 130.144 li
408.567 130.175 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
418.874 130.388 mo
421.966 130.388 li
421.966 130.367 li
418.874 130.367 li
418.874 130.388 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
418.874 130.388 mo
421.966 130.388 li
421.966 130.367 li
418.874 130.367 li
418.874 130.388 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
429.181 130.505 mo
432.273 130.505 li
432.273 130.486 li
429.181 130.486 li
429.181 130.505 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
429.181 130.505 mo
432.273 130.505 li
432.273 130.486 li
429.181 130.486 li
429.181 130.505 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
gsave
270.974 136.009 mo
446.187 136.009 li
446.187 16.3281 li
270.974 16.3281 li
270.974 136.009 li
clp
439.487 130.543 mo
442.579 130.543 li
442.579 130.528 li
439.487 130.528 li
439.487 130.543 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
439.487 130.543 mo
442.579 130.543 li
442.579 130.528 li
439.487 130.528 li
439.487 130.543 li
cp
1 /0 /CSD get_res sepcs
.753 sep
@
grestore
gsave
270.974 136.009 mo
446.187 136.009 li
446.187 16.3281 li
270.974 16.3281 li
270.974 136.009 li
clp
274.582 44.8678 mo
277.674 44.8678 li
277.674 35.1377 li
274.582 35.1377 li
274.582 44.8678 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
274.582 44.8678 mo
277.674 44.8678 li
277.674 35.1377 li
274.582 35.1377 li
274.582 44.8678 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
grestore
284.888 66.5458 mo
287.981 66.5458 li
287.981 59.761 li
284.888 59.761 li
284.888 66.5458 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
284.888 66.5458 mo
287.981 66.5458 li
287.981 59.761 li
284.888 59.761 li
284.888 66.5458 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
295.195 83.374 mo
298.287 83.374 li
298.287 78.7563 li
295.195 78.7563 li
295.195 83.374 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
295.195 83.374 mo
298.287 83.374 li
298.287 78.7563 li
295.195 78.7563 li
295.195 83.374 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
305.502 95.2091 mo
308.594 95.2091 li
308.594 92.033 li
305.502 92.033 li
305.502 95.2091 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
305.502 95.2091 mo
308.594 95.2091 li
308.594 92.033 li
305.502 92.033 li
305.502 95.2091 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
315.808 104.234 mo
318.9 104.234 li
318.9 102.439 li
315.808 102.439 li
315.808 104.234 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
315.808 104.234 mo
318.9 104.234 li
318.9 102.439 li
315.808 102.439 li
315.808 104.234 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
326.115 111.286 mo
329.207 111.286 li
329.207 109.86 li
326.115 109.86 li
326.115 111.286 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
326.115 111.286 mo
329.207 111.286 li
329.207 109.86 li
326.115 109.86 li
326.115 111.286 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
336.421 116.887 mo
339.514 116.887 li
339.514 115.989 li
336.421 115.989 li
336.421 116.887 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
336.421 116.887 mo
339.514 116.887 li
339.514 115.989 li
336.421 115.989 li
336.421 116.887 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
346.728 120.655 mo
349.82 120.655 li
349.82 120.171 li
346.728 120.171 li
346.728 120.655 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
346.728 120.655 mo
349.82 120.655 li
349.82 120.171 li
346.728 120.171 li
346.728 120.655 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
357.035 123.641 mo
360.127 123.641 li
360.127 123.337 li
357.035 123.337 li
357.035 123.641 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
357.035 123.641 mo
360.127 123.641 li
360.127 123.337 li
357.035 123.337 li
357.035 123.641 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
367.341 125.869 mo
370.433 125.869 li
370.433 125.64 li
367.341 125.64 li
367.341 125.869 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
367.341 125.869 mo
370.433 125.869 li
370.433 125.64 li
367.341 125.64 li
367.341 125.869 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
377.648 127.468 mo
380.74 127.468 li
380.74 127.333 li
377.648 127.333 li
377.648 127.468 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
377.648 127.468 mo
380.74 127.468 li
380.74 127.333 li
377.648 127.333 li
377.648 127.468 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
387.954 128.629 mo
391.046 128.629 li
391.046 128.517 li
387.954 128.517 li
387.954 128.629 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
387.954 128.629 mo
391.046 128.629 li
391.046 128.517 li
387.954 128.517 li
387.954 128.629 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
398.261 129.435 mo
401.353 129.435 li
401.353 129.358 li
398.261 129.358 li
398.261 129.435 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
398.261 129.435 mo
401.353 129.435 li
401.353 129.358 li
398.261 129.358 li
398.261 129.435 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
408.568 129.962 mo
411.66 129.962 li
411.66 129.92 li
408.568 129.92 li
408.568 129.962 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
408.567 129.962 mo
411.66 129.962 li
411.66 129.92 li
408.567 129.92 li
408.567 129.962 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
418.874 130.308 mo
421.966 130.308 li
421.966 130.273 li
418.874 130.273 li
418.874 130.308 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
418.874 130.308 mo
421.966 130.308 li
421.966 130.273 li
418.874 130.273 li
418.874 130.308 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
429.181 130.487 mo
432.273 130.487 li
432.273 130.461 li
429.181 130.461 li
429.181 130.487 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
429.181 130.487 mo
432.273 130.487 li
432.273 130.461 li
429.181 130.461 li
429.181 130.487 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
gsave
270.974 136.009 mo
446.187 136.009 li
446.187 16.3281 li
270.974 16.3281 li
270.974 136.009 li
clp
439.487 130.548 mo
442.579 130.548 li
442.579 130.526 li
439.487 130.526 li
439.487 130.548 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
439.487 130.548 mo
442.579 130.548 li
442.579 130.526 li
439.487 130.526 li
439.487 130.548 li
cp
1 /0 /CSD get_res sepcs
.549 sep
@
grestore
1 lc
1 lj
276.128 87.2188 mo
276.128 93.4592 li
1 /0 /CSD get_res sepcs
.753 sep
@
276.128 82.4663 mo
276.128 75.7985 li
@
275.355 93.4592 mo
276.901 93.4592 li
@
275.355 75.7984 mo
276.901 75.7984 li
@
286.434 98.1211 mo
286.434 101.338 li
@
286.434 94.6464 mo
286.434 91.0759 li
@
285.661 101.339 mo
287.207 101.339 li
@
285.661 91.076 mo
287.207 91.076 li
@
296.741 106.591 mo
296.741 108.412 li
@
296.741 104.16 mo
296.741 100.923 li
@
295.968 108.412 mo
297.514 108.412 li
@
295.968 100.923 mo
297.514 100.923 li
@
307.048 112.491 mo
307.048 113.744 li
@
307.048 110.934 mo
307.048 108.702 li
@
306.275 113.744 mo
307.821 113.744 li
@
306.275 108.702 mo
307.821 108.702 li
@
317.354 116.988 mo
317.354 118.327 li
@
317.354 116.068 mo
317.354 114.714 li
@
316.581 118.327 mo
318.127 118.327 li
@
316.581 114.714 mo
318.127 114.714 li
@
327.661 120.56 mo
327.661 121.462 li
@
327.661 119.809 mo
327.661 119.262 li
@
326.888 121.462 mo
328.434 121.462 li
@
326.888 119.261 mo
328.434 119.261 li
@
337.967 123.358 mo
337.967 123.737 li
@
337.967 122.878 mo
337.967 122.321 li
@
337.194 123.737 mo
338.74 123.737 li
@
337.194 122.321 mo
338.74 122.321 li
@
348.274 125.274 mo
348.274 125.687 li
@
348.274 124.996 mo
348.274 124.651 li
@
347.501 125.687 mo
349.047 125.687 li
@
347.501 124.651 mo
349.047 124.651 li
@
358.581 126.777 mo
358.581 127.02 li
@
358.581 126.609 mo
358.581 126.436 li
@
357.808 127.02 mo
359.354 127.02 li
@
357.808 126.435 mo
359.354 126.435 li
@
368.887 127.938 mo
368.887 128.042 li
@
368.887 127.812 mo
368.887 127.674 li
@
368.114 128.042 mo
369.66 128.042 li
@
368.114 127.674 mo
369.66 127.674 li
@
379.194 128.786 mo
379.194 128.897 li
@
379.194 128.701 mo
379.194 128.579 li
@
378.421 128.897 mo
379.967 128.897 li
@
378.421 128.579 mo
379.967 128.579 li
@
389.5 129.404 mo
389.5 129.488 li
@
389.5 129.346 mo
389.5 129.288 li
@
388.727 129.488 mo
390.273 129.488 li
@
388.727 129.288 mo
390.273 129.288 li
@
399.807 129.857 mo
399.807 129.905 li
@
399.807 129.819 mo
399.807 129.781 li
@
399.034 129.904 mo
400.58 129.904 li
@
399.034 129.781 mo
400.58 129.781 li
@
410.113 130.175 mo
410.113 130.207 li
@
410.113 130.144 mo
410.113 130.104 li
@
409.341 130.207 mo
410.887 130.207 li
@
409.341 130.104 mo
410.887 130.104 li
@
420.42 130.388 mo
420.42 130.418 li
@
420.42 130.367 mo
420.42 130.346 li
@
419.647 130.418 mo
421.193 130.418 li
@
419.647 130.346 mo
421.193 130.346 li
@
430.727 130.505 mo
430.727 130.523 li
@
430.727 130.486 mo
430.727 130.463 li
@
429.954 130.523 mo
431.5 130.523 li
@
429.954 130.463 mo
431.5 130.463 li
@
441.033 130.543 mo
441.033 130.563 li
@
441.033 130.528 mo
441.033 130.509 li
@
440.26 130.563 mo
441.806 130.563 li
@
440.26 130.509 mo
441.806 130.509 li
@
276.128 44.8678 mo
276.128 57.2696 li
1 /0 /CSD get_res sepcs
.549 sep
@
276.128 35.1378 mo
276.128 21.7681 li
@
275.355 57.2696 mo
276.901 57.2696 li
@
275.355 21.7682 mo
276.901 21.7682 li
@
286.434 66.5458 mo
286.434 72.9329 li
@
286.434 59.761 mo
286.434 52.6038 li
@
285.661 72.9328 mo
287.207 72.9328 li
@
285.661 52.6038 mo
287.207 52.6038 li
@
296.741 83.374 mo
296.741 87.0412 li
@
296.741 78.7564 mo
296.741 72.228 li
@
295.968 87.041 mo
297.514 87.041 li
@
295.968 72.2279 mo
297.514 72.2279 li
@
307.048 95.2091 mo
307.048 99.947 li
@
307.048 92.033 mo
307.048 87.9942 li
@
306.275 99.947 mo
307.821 99.947 li
@
306.275 87.994 mo
307.821 87.994 li
@
317.354 104.234 mo
317.354 106.758 li
@
317.354 102.439 mo
317.354 99.7511 li
@
316.581 106.758 mo
318.127 106.758 li
@
316.581 99.7511 mo
318.127 99.7511 li
@
327.661 111.286 mo
327.661 113.024 li
@
327.661 109.86 mo
327.661 108.948 li
@
326.888 113.024 mo
328.434 113.024 li
@
326.888 108.948 mo
328.434 108.948 li
@
337.967 116.887 mo
337.967 117.713 li
@
337.967 115.988 mo
337.967 114.85 li
@
337.194 117.713 mo
338.74 117.713 li
@
337.194 114.85 mo
338.74 114.85 li
@
348.274 120.655 mo
348.274 121.258 li
@
348.274 120.171 mo
348.274 119.616 li
@
347.501 121.258 mo
349.047 121.258 li
@
347.501 119.616 mo
349.047 119.616 li
@
358.581 123.641 mo
358.581 124.073 li
@
358.581 123.336 mo
358.581 122.942 li
@
357.808 124.073 mo
359.354 124.073 li
@
357.808 122.942 mo
359.354 122.942 li
@
368.887 125.869 mo
368.887 126.086 li
@
368.887 125.64 mo
368.887 125.385 li
@
368.114 126.086 mo
369.66 126.086 li
@
368.114 125.385 mo
369.66 125.385 li
@
379.194 127.468 mo
379.194 127.657 li
@
379.194 127.333 mo
379.194 127.197 li
@
378.421 127.657 mo
379.967 127.657 li
@
378.421 127.197 mo
379.967 127.197 li
@
389.5 128.629 mo
389.5 128.783 li
@
389.5 128.517 mo
389.5 128.439 li
@
388.727 128.782 mo
390.273 128.782 li
@
388.727 128.439 mo
390.273 128.439 li
@
399.807 129.435 mo
399.807 129.495 li
@
399.807 129.358 mo
399.807 129.258 li
@
399.034 129.495 mo
400.58 129.495 li
@
399.034 129.258 mo
400.58 129.258 li
@
410.113 129.962 mo
410.113 130.011 li
@
410.113 129.92 mo
410.113 129.873 li
@
409.341 130.011 mo
410.887 130.011 li
@
409.341 129.873 mo
410.887 129.873 li
@
420.42 130.308 mo
420.42 130.342 li
@
420.42 130.273 mo
420.42 130.23 li
@
419.647 130.342 mo
421.193 130.342 li
@
419.647 130.23 mo
421.193 130.23 li
@
430.727 130.487 mo
430.727 130.514 li
@
430.727 130.461 mo
430.727 130.428 li
@
429.954 130.513 mo
431.5 130.513 li
@
429.954 130.428 mo
431.5 130.428 li
@
441.033 130.548 mo
441.033 130.569 li
@
441.033 130.526 mo
441.033 130.497 li
@
440.26 130.569 mo
441.806 130.569 li
@
440.26 130.497 mo
441.806 130.497 li
@
0 lc
[2.198 .942 ] 0 dsh
276.128 84.061 mo
277.794 86.2162 li
279.459 88.2733 li
281.125 90.2365 li
282.791 92.1111 li
284.456 93.9001 li
286.122 95.6079 li
287.788 97.238 li
289.454 98.7938 li
291.119 100.279 li
292.785 101.697 li
294.451 103.05 li
296.116 104.342 li
297.782 105.575 li
299.448 106.751 li
301.114 107.875 li
302.779 108.947 li
304.445 109.971 li
306.111 110.948 li
307.776 111.88 li
309.442 112.77 li
311.108 113.619 li
312.774 114.43 li
314.439 115.204 li
316.105 115.943 li
317.771 116.648 li
319.436 117.321 li
321.102 117.963 li
322.768 118.576 li
324.434 119.161 li
326.099 119.72 li
327.765 120.253 li
329.431 120.761 li
331.096 121.247 li
332.762 121.71 li
334.428 122.152 li
336.094 122.574 li
337.759 122.977 li
339.425 123.361 li
341.091 123.728 li
342.756 124.078 li
344.422 124.412 li
346.088 124.73 li
347.754 125.034 li
349.419 125.324 li
351.085 125.6 li
352.751 125.865 li
354.416 126.116 li
356.082 126.356 li
357.748 126.585 li
359.414 126.804 li
361.079 127.012 li
362.745 127.21 li
364.411 127.4 li
366.076 127.58 li
367.742 127.752 li
369.408 127.916 li
371.073 128.072 li
372.739 128.222 li
374.405 128.363 li
376.071 128.498 li
377.736 128.627 li
379.402 128.749 li
381.068 128.866 li
382.733 128.976 li
384.399 129.082 li
386.065 129.182 li
387.731 129.277 li
389.396 129.368 li
391.062 129.453 li
392.728 129.535 li
394.393 129.612 li
396.059 129.685 li
397.725 129.754 li
399.391 129.82 li
401.056 129.882 li
402.722 129.94 li
404.387 129.995 li
406.053 130.047 li
407.719 130.096 li
409.385 130.142 li
411.05 130.184 li
412.716 130.224 li
414.382 130.262 li
416.047 130.296 li
417.713 130.328 li
419.379 130.358 li
421.045 130.385 li
422.711 130.41 li
424.376 130.432 li
426.042 130.452 li
427.707 130.47 li
429.373 130.486 li
431.039 130.5 li
432.705 130.511 li
434.37 130.52 li
436.036 130.527 li
437.702 130.533 li
439.367 130.536 li
441.033 130.537 li
1 /0 /CSD get_res sepcs
.588 sep
@
[2.198 .942 ] 0 dsh
276.128 38.4875 mo
277.794 42.7955 li
279.459 46.9074 li
281.125 50.8324 li
282.791 54.5784 li
284.456 58.1541 li
286.122 61.5668 li
287.788 64.8242 li
289.454 67.9332 li
291.119 70.9009 li
292.785 73.7332 li
294.451 76.4363 li
296.116 79.0162 li
297.782 81.4784 li
299.448 83.8283 li
301.114 86.071 li
302.779 88.2117 li
304.445 90.2543 li
306.111 92.2038 li
307.776 94.0639 li
309.442 95.8392 li
311.108 97.5332 li
312.774 99.1499 li
314.439 100.692 li
316.105 102.164 li
317.771 103.569 li
319.436 104.908 li
321.102 106.187 li
322.768 107.406 li
324.434 108.57 li
326.099 109.679 li
327.765 110.738 li
329.431 111.748 li
331.096 112.711 li
332.762 113.63 li
334.428 114.505 li
336.094 115.341 li
337.759 116.137 li
339.425 116.896 li
341.091 117.62 li
342.756 118.31 li
344.422 118.967 li
346.088 119.594 li
347.754 120.191 li
349.419 120.759 li
351.085 121.301 li
352.751 121.817 li
354.416 122.308 li
356.082 122.776 li
357.748 123.221 li
359.414 123.645 li
361.079 124.048 li
362.745 124.432 li
364.411 124.796 li
366.076 125.143 li
367.742 125.473 li
369.408 125.786 li
371.073 126.083 li
372.739 126.365 li
374.405 126.634 li
376.071 126.888 li
377.736 127.129 li
379.402 127.358 li
381.068 127.574 li
382.733 127.78 li
384.399 127.974 li
386.065 128.158 li
387.731 128.332 li
389.396 128.496 li
391.062 128.651 li
392.728 128.798 li
394.393 128.936 li
396.059 129.067 li
397.725 129.189 li
399.391 129.305 li
401.056 129.413 li
402.722 129.515 li
404.387 129.611 li
406.053 129.7 li
407.719 129.784 li
409.385 129.862 li
411.05 129.935 li
412.716 130.003 li
414.382 130.066 li
416.047 130.125 li
417.713 130.179 li
419.379 130.228 li
421.045 130.274 li
422.711 130.316 li
424.376 130.354 li
426.042 130.388 li
427.707 130.419 li
429.373 130.446 li
431.039 130.469 li
432.705 130.489 li
434.37 130.506 li
436.036 130.519 li
437.702 130.529 li
439.367 130.535 li
441.033 130.537 li
1 /0 /CSD get_res sepcs
.247 sep
@
1 lc
[] 0 dsh
274.582 85.0895 mo
277.674 85.0895 li
1 /0 /CSD get_res sepcs
.753 sep
@
284.888 96.6587 mo
287.981 96.6587 li
@
295.195 105.385 mo
298.287 105.385 li
@
305.502 111.66 mo
308.594 111.66 li
@
315.808 116.497 mo
318.9 116.497 li
@
326.115 120.146 mo
329.207 120.146 li
@
336.421 123.152 mo
339.514 123.152 li
@
346.728 125.154 mo
349.82 125.154 li
@
357.035 126.7 mo
360.127 126.7 li
@
367.341 127.871 mo
370.433 127.871 li
@
377.648 128.745 mo
380.74 128.745 li
@
387.954 129.375 mo
391.046 129.375 li
@
398.261 129.838 mo
401.353 129.838 li
@
408.567 130.156 mo
411.66 130.156 li
@
418.874 130.378 mo
421.966 130.378 li
@
429.181 130.496 mo
432.273 130.496 li
@
439.487 130.537 mo
442.579 130.537 li
@
274.582 40.5392 mo
277.674 40.5392 li
1 /0 /CSD get_res sepcs
.549 sep
@
284.888 63.5982 mo
287.981 63.5982 li
@
295.195 81.0714 mo
298.287 81.0714 li
@
305.502 93.6334 mo
308.594 93.6334 li
@
315.808 103.341 mo
318.9 103.341 li
@
326.115 110.538 mo
329.207 110.538 li
@
336.421 116.524 mo
339.514 116.524 li
@
346.728 120.469 mo
349.82 120.469 li
@
357.035 123.496 mo
360.127 123.496 li
@
367.341 125.753 mo
370.433 125.753 li
@
377.648 127.404 mo
380.74 127.404 li
@
387.954 128.57 mo
391.046 128.57 li
@
398.261 129.396 mo
401.353 129.396 li
@
408.567 129.939 mo
411.66 129.939 li
@
418.874 130.293 mo
421.966 130.293 li
@
429.181 130.475 mo
432.273 130.475 li
@
439.487 130.536 mo
442.579 130.536 li
@
.490625 lw
2 lc
0 lj
270.975 136.009 mo
270.975 16.3282 li
1 /0 /CSD get_res sepcs
.85 sep
@
446.187 136.009 mo
446.187 16.3282 li
@
270.975 136.009 mo
446.187 136.009 li
@
270.975 16.3282 mo
446.187 16.3282 li
@
298.175 5.99518 mo
300.068 5.99518 li
299.121 3.54362 li
298.175 5.99518 li
296.726 7.86034 mo
296.726 7.49296 li
297.171 7.49296 li
299.008 2.70995 li
299.588 2.70995 li
301.425 7.49296 li
301.933 7.49296 li
301.933 7.86034 li
300.061 7.86034 li
300.061 7.49296 li
300.633 7.49296 li
300.202 6.36256 li
298.033 6.36256 li
297.602 7.49296 li
298.168 7.49296 li
298.168 7.86034 li
296.726 7.86034 li
f
303.608 7.86034 mo
302.258 4.56098 li
301.849 4.56098 li
301.849 4.1936 li
303.53 4.1936 li
303.53 4.56098 li
302.944 4.56098 li
303.975 7.08319 li
305.007 4.56098 li
304.456 4.56098 li
304.456 4.1936 li
305.833 4.1936 li
305.833 4.56098 li
305.423 4.56098 li
304.074 7.86034 li
303.608 7.86034 li
f
309.684 6.09409 mo
306.949 6.09409 li
306.949 6.12235 li
306.949 6.6169 307.041 6.99134 307.225 7.24568 cv
307.409 7.50002 307.684 7.62013 308.052 7.62013 cv
308.327 7.62013 308.553 7.54948 308.737 7.40111 cv
308.914 7.25981 309.041 7.0408 309.111 6.75113 cv
309.62 6.75113 li
309.521 7.15384 309.33 7.45763 309.062 7.65545 cv
308.786 7.85327 308.426 7.95218 307.988 7.95218 cv
307.451 7.95218 307.02 7.78262 306.695 7.42937 cv
306.37 7.07612 306.208 6.60983 306.208 6.02344 cv
306.208 5.44411 306.363 4.97782 306.688 4.62457 cv
307.006 4.27132 307.423 4.09469 307.946 4.09469 cv
308.497 4.09469 308.928 4.27132 309.224 4.61044 cv
309.521 4.94956 309.669 5.44411 309.684 6.09409 cv
308.935 5.72671 mo
308.921 5.30281 308.829 4.97782 308.659 4.7588 cv
308.49 4.54685 308.257 4.43381 307.946 4.43381 cv
307.649 4.43381 307.423 4.54685 307.253 4.76587 cv
307.084 4.98488 306.985 5.30281 306.949 5.72671 cv
308.935 5.72671 li
f
313.414 4.18654 mo
313.414 5.10499 li
313.047 5.10499 li
313.032 4.9213 312.983 4.78706 312.898 4.69522 cv
312.806 4.61044 312.672 4.56098 312.503 4.56098 cv
312.192 4.56098 311.951 4.67402 311.782 4.88597 cv
311.612 5.10499 311.535 5.41585 311.535 5.81855 cv
311.535 7.49296 li
312.269 7.49296 li
312.269 7.86034 li
310.327 7.86034 li
310.327 7.49296 li
310.899 7.49296 li
310.899 4.55392 li
310.291 4.55392 li
310.291 4.1936 li
311.535 4.1936 li
311.535 4.84358 li
311.655 4.58924 311.81 4.40555 312.008 4.27838 cv
312.206 4.15828 312.446 4.09469 312.729 4.09469 cv
312.828 4.09469 312.941 4.10882 313.054 4.12295 cv
313.167 4.13708 313.287 4.15828 313.414 4.18654 cv
f
316.226 6.70874 mo
316.226 5.93159 li
315.406 5.93159 li
315.088 5.93159 314.855 6.00224 314.7 6.13648 cv
314.544 6.27778 314.474 6.48266 314.474 6.7582 cv
314.474 7.01254 314.551 7.21742 314.707 7.36579 cv
314.862 7.52122 315.074 7.59187 315.343 7.59187 cv
315.604 7.59187 315.816 7.51415 315.979 7.35166 cv
316.141 7.18916 316.226 6.97721 316.226 6.70874 cv
316.862 5.57128 mo
316.862 7.49296 li
317.427 7.49296 li
317.427 7.86034 li
316.226 7.86034 li
316.226 7.4647 li
316.084 7.63426 315.922 7.76143 315.738 7.83914 cv
315.555 7.90979 315.336 7.95218 315.095 7.95218 cv
314.686 7.95218 314.361 7.84621 314.12 7.63426 cv
313.88 7.42231 313.767 7.12558 313.767 6.7582 cv
313.767 6.38375 313.901 6.09409 314.177 5.88214 cv
314.445 5.67019 314.834 5.56421 315.336 5.56421 cv
316.226 5.56421 li
316.226 5.30987 li
316.226 5.03434 316.141 4.82239 315.971 4.66696 cv
315.802 4.51153 315.562 4.43381 315.258 4.43381 cv
315.004 4.43381 314.806 4.4974 314.657 4.61044 cv
314.502 4.72348 314.41 4.89304 314.375 5.11912 cv
314.05 5.11912 li
314.05 4.37729 li
314.269 4.28545 314.481 4.2148 314.693 4.16534 cv
314.898 4.12295 315.102 4.09469 315.3 4.09469 cv
315.809 4.09469 316.19 4.22186 316.459 4.4762 cv
316.727 4.73054 316.862 5.09086 316.862 5.57128 cv
f
321.334 4.56098 mo
321.334 7.78262 li
321.334 8.30543 321.185 8.70814 320.896 8.99074 cv
320.606 9.27334 320.196 9.4217 319.659 9.4217 cv
319.419 9.4217 319.186 9.40051 318.967 9.35812 cv
318.741 9.31573 318.529 9.24508 318.331 9.1603 cv
318.331 8.39021 li
318.663 8.39021 li
318.706 8.63042 318.797 8.79998 318.953 8.91302 cv
319.108 9.02606 319.327 9.08258 319.617 9.08258 cv
319.984 9.08258 320.26 8.97661 320.436 8.76466 cv
320.606 8.55271 320.698 8.22065 320.698 7.78262 cv
320.698 7.28807 li
320.571 7.52122 320.415 7.69078 320.224 7.79675 cv
320.027 7.89566 319.794 7.95218 319.511 7.95218 cv
319.059 7.95218 318.684 7.77556 318.402 7.42231 cv
318.119 7.06906 317.978 6.60277 317.978 6.02344 cv
317.978 5.45117 318.119 4.98488 318.402 4.63163 cv
318.684 4.27838 319.059 4.09469 319.511 4.09469 cv
319.794 4.09469 320.027 4.15121 320.224 4.25719 cv
320.415 4.37023 320.571 4.53979 320.698 4.76587 cv
320.698 4.1936 li
321.941 4.1936 li
321.941 4.56098 li
321.334 4.56098 li
320.698 5.84681 mo
320.698 5.40878 320.613 5.07673 320.444 4.84358 cv
320.274 4.61044 320.027 4.49033 319.709 4.49033 cv
319.384 4.49033 319.136 4.62457 318.967 4.87891 cv
318.797 5.13325 318.72 5.51476 318.72 6.02344 cv
318.72 6.53212 318.797 6.92069 318.967 7.17503 cv
319.136 7.43644 319.384 7.56361 319.709 7.56361 cv
320.027 7.56361 320.274 7.45057 320.444 7.21742 cv
320.613 6.99134 320.698 6.65222 320.698 6.20713 cv
320.698 5.84681 li
f
325.975 6.09409 mo
323.241 6.09409 li
323.241 6.12235 li
323.241 6.6169 323.333 6.99134 323.517 7.24568 cv
323.7 7.50002 323.976 7.62013 324.343 7.62013 cv
324.619 7.62013 324.845 7.54948 325.029 7.40111 cv
325.205 7.25981 325.332 7.0408 325.403 6.75113 cv
325.912 6.75113 li
325.813 7.15384 325.622 7.45763 325.354 7.65545 cv
325.078 7.85327 324.718 7.95218 324.28 7.95218 cv
323.743 7.95218 323.312 7.78262 322.987 7.42937 cv
322.662 7.07612 322.499 6.60983 322.499 6.02344 cv
322.499 5.44411 322.655 4.97782 322.98 4.62457 cv
323.298 4.27132 323.715 4.09469 324.237 4.09469 cv
324.788 4.09469 325.219 4.27132 325.516 4.61044 cv
325.813 4.94956 325.961 5.44411 325.975 6.09409 cv
325.227 5.72671 mo
325.212 5.30281 325.121 4.97782 324.951 4.7588 cv
324.781 4.54685 324.548 4.43381 324.237 4.43381 cv
323.941 4.43381 323.715 4.54685 323.545 4.76587 cv
323.375 4.98488 323.277 5.30281 323.241 5.72671 cv
325.227 5.72671 li
f
330.32 7.49296 mo
331.352 7.49296 li
331.762 7.49296 332.065 7.40818 332.256 7.22449 cv
332.447 7.04786 332.546 6.76526 332.546 6.36962 cv
332.546 5.98811 332.447 5.70551 332.256 5.52182 cv
332.065 5.3452 331.762 5.25335 331.352 5.25335 cv
330.32 5.25335 li
330.32 7.49296 li
330.32 4.88597 mo
331.196 4.88597 li
331.571 4.88597 331.846 4.81532 332.023 4.67402 cv
332.193 4.53272 332.284 4.29958 332.284 3.98165 cv
332.284 3.67079 332.193 3.43765 332.023 3.29635 cv
331.846 3.15505 331.571 3.07733 331.196 3.07733 cv
330.32 3.07733 li
330.32 4.88597 li
328.964 7.86034 mo
328.964 7.49296 li
329.621 7.49296 li
329.621 3.07733 li
328.964 3.07733 li
328.964 2.70995 li
331.507 2.70995 li
332.023 2.70995 332.412 2.81593 332.68 3.02788 cv
332.941 3.23983 333.076 3.55775 333.076 3.98165 cv
333.076 4.29251 332.984 4.53272 332.8 4.71641 cv
332.616 4.9001 332.355 5.00608 332.002 5.04847 cv
332.44 5.10499 332.772 5.24629 332.998 5.47237 cv
333.224 5.69845 333.337 5.99518 333.337 6.36962 cv
333.337 6.8783 333.175 7.25981 332.85 7.50002 cv
332.525 7.74023 332.023 7.86034 331.345 7.86034 cv
328.964 7.86034 li
f
337.145 4.18654 mo
337.145 5.10499 li
336.778 5.10499 li
336.764 4.9213 336.714 4.78706 336.629 4.69522 cv
336.538 4.61044 336.403 4.56098 336.234 4.56098 cv
335.923 4.56098 335.683 4.67402 335.513 4.88597 cv
335.344 5.10499 335.266 5.41585 335.266 5.81855 cv
335.266 7.49296 li
336.001 7.49296 li
336.001 7.86034 li
334.058 7.86034 li
334.058 7.49296 li
334.63 7.49296 li
334.63 4.55392 li
334.022 4.55392 li
334.022 4.1936 li
335.266 4.1936 li
335.266 4.84358 li
335.386 4.58924 335.541 4.40555 335.739 4.27838 cv
335.937 4.15828 336.177 4.09469 336.46 4.09469 cv
336.559 4.09469 336.672 4.10882 336.785 4.12295 cv
336.898 4.13708 337.018 4.15828 337.145 4.18654 cv
f
339.957 6.70874 mo
339.957 5.93159 li
339.137 5.93159 li
338.819 5.93159 338.586 6.00224 338.431 6.13648 cv
338.275 6.27778 338.205 6.48266 338.205 6.7582 cv
338.205 7.01254 338.283 7.21742 338.438 7.36579 cv
338.593 7.52122 338.805 7.59187 339.074 7.59187 cv
339.335 7.59187 339.547 7.51415 339.71 7.35166 cv
339.872 7.18916 339.957 6.97721 339.957 6.70874 cv
340.593 5.57128 mo
340.593 7.49296 li
341.158 7.49296 li
341.158 7.86034 li
339.957 7.86034 li
339.957 7.4647 li
339.816 7.63426 339.653 7.76143 339.469 7.83914 cv
339.286 7.90979 339.067 7.95218 338.827 7.95218 cv
338.417 7.95218 338.092 7.84621 337.852 7.63426 cv
337.611 7.42231 337.498 7.12558 337.498 6.7582 cv
337.498 6.38375 337.633 6.09409 337.908 5.88214 cv
338.177 5.67019 338.565 5.56421 339.067 5.56421 cv
339.957 5.56421 li
339.957 5.30987 li
339.957 5.03434 339.872 4.82239 339.703 4.66696 cv
339.533 4.51153 339.293 4.43381 338.989 4.43381 cv
338.735 4.43381 338.537 4.4974 338.389 4.61044 cv
338.233 4.72348 338.141 4.89304 338.106 5.11912 cv
337.781 5.11912 li
337.781 4.37729 li
338 4.28545 338.212 4.2148 338.424 4.16534 cv
338.629 4.12295 338.834 4.09469 339.031 4.09469 cv
339.54 4.09469 339.922 4.22186 340.19 4.4762 cv
340.459 4.73054 340.593 5.09086 340.593 5.57128 cv
f
341.645 7.86034 mo
341.645 7.49296 li
342.218 7.49296 li
342.218 4.56098 li
341.61 4.56098 li
341.61 4.1936 li
342.854 4.1936 li
342.854 4.84358 li
342.967 4.60337 343.122 4.41262 343.306 4.28545 cv
343.489 4.15828 343.708 4.09469 343.963 4.09469 cv
344.365 4.09469 344.662 4.2148 344.853 4.44088 cv
345.044 4.67402 345.143 5.03434 345.143 5.52889 cv
345.143 7.49296 li
345.708 7.49296 li
345.708 7.86034 li
343.956 7.86034 li
343.956 7.49296 li
344.507 7.49296 li
344.507 5.72671 li
344.507 5.28161 344.45 4.97782 344.337 4.80826 cv
344.224 4.6387 344.033 4.55392 343.758 4.55392 cv
343.461 4.55392 343.235 4.66696 343.08 4.87891 cv
342.924 5.09792 342.854 5.40878 342.854 5.81855 cv
342.854 7.49296 li
343.405 7.49296 li
343.405 7.86034 li
341.645 7.86034 li
f
349.537 6.7582 mo
349.445 7.15384 349.276 7.45057 349.021 7.64839 cv
348.767 7.85327 348.435 7.95218 348.032 7.95218 cv
347.495 7.95218 347.071 7.78262 346.746 7.42937 cv
346.421 7.07612 346.259 6.60983 346.259 6.02344 cv
346.259 5.44411 346.421 4.97782 346.746 4.62457 cv
347.071 4.27132 347.495 4.09469 348.032 4.09469 cv
348.258 4.09469 348.491 4.12295 348.725 4.17947 cv
348.951 4.23599 349.184 4.31371 349.417 4.41968 cv
349.417 5.35933 li
349.05 5.35933 li
349 5.0414 348.894 4.80826 348.732 4.65989 cv
348.569 4.51153 348.336 4.43381 348.039 4.43381 cv
347.693 4.43381 347.432 4.56805 347.262 4.83652 cv
347.085 5.10499 347.001 5.50063 347.001 6.02344 cv
347.001 6.56038 347.085 6.95602 347.262 7.22449 cv
347.432 7.49296 347.693 7.62013 348.039 7.62013 cv
348.308 7.62013 348.527 7.54948 348.689 7.40818 cv
348.852 7.26688 348.965 7.04786 349.028 6.7582 cv
349.537 6.7582 li
f
350.152 7.86034 mo
350.152 7.49296 li
350.724 7.49296 li
350.724 2.85832 li
350.116 2.85832 li
350.116 2.49094 li
351.36 2.49094 li
351.36 4.84358 li
351.473 4.60337 351.628 4.41262 351.812 4.28545 cv
351.996 4.15828 352.215 4.09469 352.469 4.09469 cv
352.872 4.09469 353.168 4.2148 353.359 4.44088 cv
353.55 4.67402 353.649 5.03434 353.649 5.52889 cv
353.649 7.49296 li
354.214 7.49296 li
354.214 7.86034 li
352.462 7.86034 li
352.462 7.49296 li
353.013 7.49296 li
353.013 5.72671 li
353.013 5.28161 352.956 4.97782 352.843 4.80826 cv
352.73 4.64576 352.54 4.56098 352.264 4.56098 cv
351.967 4.56098 351.741 4.67402 351.586 4.88597 cv
351.43 5.09792 351.36 5.40878 351.36 5.81855 cv
351.36 7.49296 li
351.911 7.49296 li
351.911 7.86034 li
350.152 7.86034 li
f
357.047 7.86034 mo
357.047 7.49296 li
357.704 7.49296 li
357.704 3.07733 li
357.047 3.07733 li
357.047 2.70995 li
359.061 2.70995 li
359.061 3.07733 li
358.404 3.07733 li
358.404 7.43644 li
360.756 7.43644 li
360.756 6.57451 li
361.18 6.57451 li
361.18 7.86034 li
357.047 7.86034 li
f
365.179 6.09409 mo
362.445 6.09409 li
362.445 6.12235 li
362.445 6.6169 362.537 6.99134 362.72 7.24568 cv
362.904 7.50002 363.179 7.62013 363.547 7.62013 cv
363.822 7.62013 364.048 7.54948 364.232 7.40111 cv
364.409 7.25981 364.536 7.0408 364.607 6.75113 cv
365.115 6.75113 li
365.016 7.15384 364.826 7.45763 364.557 7.65545 cv
364.282 7.85327 363.921 7.95218 363.483 7.95218 cv
362.946 7.95218 362.515 7.78262 362.19 7.42937 cv
361.865 7.07612 361.703 6.60983 361.703 6.02344 cv
361.703 5.44411 361.858 4.97782 362.183 4.62457 cv
362.501 4.27132 362.918 4.09469 363.441 4.09469 cv
363.992 4.09469 364.423 4.27132 364.72 4.61044 cv
365.016 4.94956 365.165 5.44411 365.179 6.09409 cv
364.43 5.72671 mo
364.416 5.30281 364.324 4.97782 364.154 4.7588 cv
363.985 4.54685 363.752 4.43381 363.441 4.43381 cv
363.144 4.43381 362.918 4.54685 362.748 4.76587 cv
362.579 4.98488 362.48 5.30281 362.445 5.72671 cv
364.43 5.72671 li
f
365.822 7.86034 mo
365.822 7.49296 li
366.394 7.49296 li
366.394 4.56098 li
365.786 4.56098 li
365.786 4.1936 li
367.03 4.1936 li
367.03 4.84358 li
367.143 4.60337 367.298 4.41262 367.482 4.28545 cv
367.666 4.15828 367.885 4.09469 368.139 4.09469 cv
368.542 4.09469 368.839 4.2148 369.029 4.44088 cv
369.22 4.67402 369.319 5.03434 369.319 5.52889 cv
369.319 7.49296 li
369.884 7.49296 li
369.884 7.86034 li
368.132 7.86034 li
368.132 7.49296 li
368.683 7.49296 li
368.683 5.72671 li
368.683 5.28161 368.627 4.97782 368.514 4.80826 cv
368.4 4.6387 368.21 4.55392 367.934 4.55392 cv
367.637 4.55392 367.411 4.66696 367.256 4.87891 cv
367.1 5.09792 367.03 5.40878 367.03 5.81855 cv
367.03 7.49296 li
367.581 7.49296 li
367.581 7.86034 li
365.822 7.86034 li
f
373.791 4.56098 mo
373.791 7.78262 li
373.791 8.30543 373.643 8.70814 373.353 8.99074 cv
373.063 9.27334 372.654 9.4217 372.117 9.4217 cv
371.876 9.4217 371.643 9.40051 371.424 9.35812 cv
371.198 9.31573 370.986 9.24508 370.788 9.1603 cv
370.788 8.39021 li
371.12 8.39021 li
371.163 8.63042 371.255 8.79998 371.41 8.91302 cv
371.566 9.02606 371.785 9.08258 372.074 9.08258 cv
372.442 9.08258 372.717 8.97661 372.894 8.76466 cv
373.063 8.55271 373.155 8.22065 373.155 7.78262 cv
373.155 7.28807 li
373.028 7.52122 372.873 7.69078 372.682 7.79675 cv
372.484 7.89566 372.251 7.95218 371.968 7.95218 cv
371.516 7.95218 371.142 7.77556 370.859 7.42231 cv
370.576 7.06906 370.435 6.60277 370.435 6.02344 cv
370.435 5.45117 370.576 4.98488 370.859 4.63163 cv
371.142 4.27838 371.516 4.09469 371.968 4.09469 cv
372.251 4.09469 372.484 4.15121 372.682 4.25719 cv
372.873 4.37023 373.028 4.53979 373.155 4.76587 cv
373.155 4.1936 li
374.399 4.1936 li
374.399 4.56098 li
373.791 4.56098 li
373.155 5.84681 mo
373.155 5.40878 373.07 5.07673 372.901 4.84358 cv
372.731 4.61044 372.484 4.49033 372.166 4.49033 cv
371.841 4.49033 371.594 4.62457 371.424 4.87891 cv
371.255 5.13325 371.177 5.51476 371.177 6.02344 cv
371.177 6.53212 371.255 6.92069 371.424 7.17503 cv
371.594 7.43644 371.841 7.56361 372.166 7.56361 cv
372.484 7.56361 372.731 7.45057 372.901 7.21742 cv
373.07 6.99134 373.155 6.65222 373.155 6.20713 cv
373.155 5.84681 li
f
375.367 4.56098 mo
374.808 4.56098 li
374.808 4.1936 li
375.367 4.1936 li
375.367 3.05614 li
376.002 3.05614 li
376.002 4.1936 li
377.196 4.1936 li
377.196 4.56098 li
376.002 4.56098 li
376.002 6.89243 li
376.002 7.20329 376.031 7.40818 376.094 7.49296 cv
376.151 7.57774 376.264 7.62013 376.426 7.62013 cv
376.589 7.62013 376.709 7.57067 376.787 7.47176 cv
376.857 7.37285 376.9 7.21742 376.907 6.99841 cv
377.387 6.99841 li
377.366 7.33753 377.274 7.57774 377.112 7.7261 cv
376.949 7.87447 376.702 7.95218 376.37 7.95218 cv
376.002 7.95218 375.741 7.8674 375.593 7.71197 cv
375.437 7.55654 375.367 7.28101 375.367 6.89243 cv
375.367 4.56098 li
f
377.733 7.86034 mo
377.733 7.49296 li
378.306 7.49296 li
378.306 2.85832 li
377.698 2.85832 li
377.698 2.49094 li
378.941 2.49094 li
378.941 4.84358 li
379.054 4.60337 379.21 4.41262 379.394 4.28545 cv
379.577 4.15828 379.796 4.09469 380.051 4.09469 cv
380.453 4.09469 380.75 4.2148 380.941 4.44088 cv
381.132 4.67402 381.23 5.03434 381.23 5.52889 cv
381.23 7.49296 li
381.796 7.49296 li
381.796 7.86034 li
380.044 7.86034 li
380.044 7.49296 li
380.595 7.49296 li
380.595 5.72671 li
380.595 5.28161 380.538 4.97782 380.425 4.80826 cv
380.312 4.64576 380.121 4.56098 379.846 4.56098 cv
379.549 4.56098 379.323 4.67402 379.167 4.88597 cv
379.012 5.09792 378.941 5.40878 378.941 5.81855 cv
378.941 7.49296 li
379.492 7.49296 li
379.492 7.86034 li
377.733 7.86034 li
f
382.389 7.65545 mo
382.389 6.80059 li
382.756 6.80059 li
382.763 7.07612 382.848 7.28101 383.011 7.41524 cv
383.173 7.55654 383.413 7.62013 383.731 7.62013 cv
384.014 7.62013 384.233 7.57067 384.381 7.45763 cv
384.53 7.35166 384.607 7.19623 384.607 6.99134 cv
384.607 6.83591 384.551 6.70168 384.445 6.60277 cv
384.332 6.50386 384.106 6.39788 383.753 6.28484 cv
383.293 6.12941 li
382.975 6.0305 382.749 5.90333 382.608 5.7479 cv
382.467 5.59954 382.396 5.40878 382.396 5.16857 cv
382.396 4.83652 382.516 4.57511 382.763 4.38436 cv
383.011 4.1936 383.35 4.09469 383.788 4.09469 cv
383.979 4.09469 384.184 4.12295 384.396 4.17241 cv
384.607 4.22186 384.834 4.29251 385.06 4.39142 cv
385.06 5.18977 li
384.692 5.18977 li
384.678 4.95662 384.6 4.77293 384.445 4.6387 cv
384.29 4.50446 384.078 4.43381 383.809 4.43381 cv
383.541 4.43381 383.336 4.48327 383.202 4.57511 cv
383.06 4.67402 382.997 4.81532 382.997 4.99901 cv
382.997 5.15444 383.046 5.28161 383.152 5.37346 cv
383.251 5.4653 383.463 5.55715 383.774 5.65606 cv
384.275 5.81149 li
384.622 5.92453 384.869 6.05876 385.024 6.22126 cv
385.18 6.38375 385.257 6.58864 385.257 6.84298 cv
385.257 7.19623 385.123 7.4647 384.855 7.66252 cv
384.586 7.86034 384.226 7.95218 383.76 7.95218 cv
383.519 7.95218 383.293 7.92392 383.067 7.88153 cv
382.841 7.83914 382.615 7.76143 382.389 7.65545 cv
f
389.609 7.86034 mo
388.26 4.56098 li
387.85 4.56098 li
387.85 4.1936 li
389.532 4.1936 li
389.532 4.56098 li
388.945 4.56098 li
389.977 7.08319 li
391.008 4.56098 li
390.457 4.56098 li
390.457 4.1936 li
391.835 4.1936 li
391.835 4.56098 li
391.425 4.56098 li
390.076 7.86034 li
389.609 7.86034 li
f
392.252 7.65545 mo
392.252 6.80059 li
392.619 6.80059 li
392.626 7.07612 392.711 7.28101 392.873 7.41524 cv
393.036 7.55654 393.276 7.62013 393.594 7.62013 cv
393.877 7.62013 394.096 7.57067 394.244 7.45763 cv
394.392 7.35166 394.47 7.19623 394.47 6.99134 cv
394.47 6.83591 394.414 6.70168 394.308 6.60277 cv
394.195 6.50386 393.969 6.39788 393.615 6.28484 cv
393.156 6.12941 li
392.838 6.0305 392.612 5.90333 392.471 5.7479 cv
392.329 5.59954 392.259 5.40878 392.259 5.16857 cv
392.259 4.83652 392.379 4.57511 392.626 4.38436 cv
392.873 4.1936 393.213 4.09469 393.651 4.09469 cv
393.841 4.09469 394.046 4.12295 394.258 4.17241 cv
394.47 4.22186 394.696 4.29251 394.922 4.39142 cv
394.922 5.18977 li
394.555 5.18977 li
394.541 4.95662 394.463 4.77293 394.308 4.6387 cv
394.152 4.50446 393.94 4.43381 393.672 4.43381 cv
393.403 4.43381 393.198 4.48327 393.064 4.57511 cv
392.923 4.67402 392.859 4.81532 392.859 4.99901 cv
392.859 5.15444 392.909 5.28161 393.015 5.37346 cv
393.114 5.4653 393.326 5.55715 393.637 5.65606 cv
394.138 5.81149 li
394.484 5.92453 394.732 6.05876 394.887 6.22126 cv
395.042 6.38375 395.12 6.58864 395.12 6.84298 cv
395.12 7.19623 394.986 7.4647 394.717 7.66252 cv
394.449 7.86034 394.089 7.95218 393.622 7.95218 cv
393.382 7.95218 393.156 7.92392 392.93 7.88153 cv
392.704 7.83914 392.478 7.76143 392.252 7.65545 cv
f
396.145 7.50002 mo
396.145 7.37285 396.187 7.26688 396.272 7.17503 cv
396.357 7.09025 396.47 7.0408 396.604 7.0408 cv
396.731 7.0408 396.837 7.09025 396.929 7.17503 cv
397.014 7.26688 397.063 7.37285 397.063 7.50002 cv
397.063 7.62719 397.014 7.74023 396.929 7.82501 cv
396.837 7.90979 396.731 7.95218 396.604 7.95218 cv
396.47 7.95218 396.357 7.90979 396.272 7.82501 cv
396.187 7.74023 396.145 7.63426 396.145 7.50002 cv
f
400.638 2.49094 mo
401.274 2.49094 li
401.274 7.86034 li
400.638 7.86034 li
400.638 2.49094 li
f
404.1 4.44088 mo
403.761 4.44088 403.492 4.57511 403.294 4.84358 cv
403.096 5.11205 402.998 5.47237 402.998 5.93159 cv
402.998 6.39788 403.089 6.7582 403.287 7.02667 cv
403.485 7.29514 403.754 7.42231 404.1 7.42231 cv
404.439 7.42231 404.707 7.29514 404.905 7.02667 cv
405.103 6.7582 405.202 6.39788 405.202 5.93159 cv
405.202 5.47943 405.103 5.11205 404.905 4.84358 cv
404.707 4.57511 404.439 4.44088 404.1 4.44088 cv
404.1 3.90394 mo
404.651 3.90394 405.082 4.08763 405.4 4.44088 cv
405.711 4.80119 405.873 5.29574 405.873 5.93159 cv
405.873 6.56744 405.711 7.06199 405.4 7.41524 cv
405.082 7.77556 404.651 7.95218 404.1 7.95218 cv
403.542 7.95218 403.104 7.77556 402.793 7.41524 cv
402.482 7.06199 402.326 6.56744 402.326 5.93159 cv
402.326 5.29574 402.482 4.80119 402.793 4.44088 cv
403.104 4.08763 403.542 3.90394 404.1 3.90394 cv
f
409.469 5.88214 mo
409.469 5.42998 409.37 5.06966 409.187 4.81532 cv
408.996 4.56098 408.727 4.43381 408.388 4.43381 cv
408.049 4.43381 407.781 4.56098 407.59 4.81532 cv
407.399 5.06966 407.307 5.42998 407.307 5.88214 cv
407.307 6.34136 407.399 6.69461 407.59 6.94895 cv
407.781 7.20329 408.049 7.33046 408.388 7.33046 cv
408.727 7.33046 408.996 7.20329 409.187 6.94895 cv
409.37 6.69461 409.469 6.34136 409.469 5.88214 cv
410.105 7.37992 mo
410.105 8.0299 409.957 8.51738 409.667 8.84237 cv
409.37 9.1603 408.925 9.32279 408.325 9.32279 cv
408.099 9.32279 407.894 9.3016 407.696 9.27334 cv
407.498 9.23801 407.3 9.18856 407.116 9.11791 cv
407.116 8.50325 li
407.3 8.60216 407.484 8.67281 407.668 8.72227 cv
407.851 8.77172 408.035 8.79998 408.226 8.79998 cv
408.635 8.79998 408.946 8.68694 409.158 8.47499 cv
409.363 8.25598 409.469 7.93099 409.469 7.49296 cv
409.469 7.1821 li
409.335 7.40818 409.165 7.57774 408.96 7.69078 cv
408.756 7.80382 408.515 7.86034 408.233 7.86034 cv
407.752 7.86034 407.371 7.68371 407.081 7.3234 cv
406.791 6.96308 406.65 6.48266 406.65 5.88214 cv
406.65 5.28868 406.791 4.80826 407.081 4.44794 cv
407.371 4.08763 407.752 3.90394 408.233 3.90394 cv
408.515 3.90394 408.756 3.96046 408.96 4.0735 cv
409.165 4.18654 409.335 4.3561 409.469 4.58218 cv
409.469 3.99578 li
410.105 3.99578 li
410.105 7.37992 li
f
411.424 8.60892 mo
412.221 8.60892 li
412.221 5.85922 li
411.355 6.03231 li
411.355 5.58722 li
412.216 5.41412 li
412.705 5.41412 li
412.705 8.60892 li
413.502 8.60892 li
413.502 9.01939 li
411.424 9.01939 li
411.424 8.60892 li
f
415.529 5.73558 mo
415.277 5.73558 415.089 5.85922 414.961 6.10649 cv
414.832 6.35377 414.773 6.72468 414.773 7.21923 cv
414.773 7.71378 414.832 8.08469 414.961 8.33197 cv
415.089 8.57924 415.277 8.70288 415.529 8.70288 cv
415.781 8.70288 415.969 8.57924 416.098 8.33197 cv
416.222 8.08469 416.286 7.71378 416.286 7.21923 cv
416.286 6.72468 416.222 6.35377 416.098 6.10649 cv
415.969 5.85922 415.781 5.73558 415.529 5.73558 cv
415.529 5.34983 mo
415.93 5.34983 416.236 5.51303 416.454 5.82955 cv
416.667 6.151 416.776 6.61588 416.776 7.21923 cv
416.776 7.82753 416.667 8.29241 416.454 8.60892 cv
416.236 8.92543 415.93 9.08369 415.529 9.08369 cv
415.124 9.08369 414.812 8.92543 414.6 8.60892 cv
414.387 8.29241 414.283 7.82753 414.283 7.21923 cv
414.283 6.61588 414.387 6.151 414.6 5.82955 cv
414.812 5.51303 415.124 5.34983 415.529 5.34983 cv
f
420.448 4.58218 mo
420.222 4.50446 li
420.137 4.49033 420.053 4.4762 419.961 4.4762 cv
419.622 4.4762 419.325 4.61044 419.071 4.86478 cv
418.816 5.11912 418.654 5.4653 418.569 5.8892 cv
418.18 7.86034 li
417.545 7.86034 li
418.301 3.99578 li
418.936 3.99578 li
418.816 4.59631 li
418.979 4.37729 419.177 4.20773 419.417 4.08763 cv
419.65 3.96752 419.897 3.90394 420.166 3.90394 cv
420.364 3.91807 li
420.568 3.95339 li
420.448 4.58218 li
f
439.696 35.2048 mo
362.061 35.2048 li
361.559 35.1961 361.343 34.9808 361.334 34.4789 cv
361.334 23.2435 li
361.343 22.7415 361.559 22.5261 362.061 22.5173 cv
439.696 22.5173 li
440.198 22.5261 440.413 22.7415 440.422 23.2435 cv
440.422 34.4789 li
440.413 34.9808 440.198 35.1961 439.696 35.2048 cv
1 /1 /CSD get_res sepcs
0 sep
f
439.697 35.3227 mo
439.697 35.3227 439.696 35.3227 439.696 35.3227 cv
362.061 35.3227 li
361.79 35.3229 361.576 35.2545 361.43 35.1091 cv
361.285 34.9637 361.217 34.7494 361.217 34.4789 cv
361.217 23.2435 li
361.217 22.9728 361.285 22.7586 361.43 22.6133 cv
361.575 22.4679 361.789 22.3997 362.059 22.3997 cv
362.06 22.3997 362.06 22.3997 362.061 22.3997 cv
439.696 22.3997 li
439.967 22.3995 440.181 22.4677 440.326 22.6133 cv
440.472 22.7586 440.54 22.9728 440.54 23.2435 cv
440.54 34.4789 li
440.54 34.7494 440.472 34.9637 440.326 35.1091 cv
440.181 35.2543 439.967 35.3227 439.697 35.3227 cv
362.061 35.2048 mo
439.696 35.2048 li
440.198 35.1961 440.413 34.9808 440.422 34.4789 cv
440.422 23.2435 li
440.413 22.7415 440.198 22.5261 439.696 22.5173 cv
362.061 22.5173 li
361.559 22.5261 361.343 22.7415 361.334 23.2435 cv
361.334 34.4789 li
361.343 34.9808 361.559 35.1961 362.061 35.2048 cv
362.061 35.2048 li
1 /1 /CSD get_res sepcs
.160784 sep
f
362.846 27.0091 mo
370.696 27.0091 li
370.696 24.2616 li
362.846 24.2616 li
cp
1 /0 /CSD get_res sepcs
.247 sep
f
.11775 lw
0 lc
362.846 27.0091 mo
370.696 27.0091 li
370.696 24.2616 li
362.846 24.2616 li
cp
@
374.621 25.973 mo
375.673 25.973 li
375.147 24.6111 li
374.621 25.973 li
373.816 27.0092 mo
373.816 26.8051 li
374.063 26.8051 li
375.084 24.1479 li
375.406 24.1479 li
376.426 26.8051 li
376.709 26.8051 li
376.709 27.0092 li
375.669 27.0092 li
375.669 26.8051 li
375.987 26.8051 li
375.747 26.1771 li
374.542 26.1771 li
374.303 26.8051 li
374.617 26.8051 li
374.617 27.0092 li
373.816 27.0092 li
1 /0 /CSD get_res sepcs
.85 sep
f
377.639 27.0092 mo
376.889 25.1763 li
376.662 25.1763 li
376.662 24.9722 li
377.596 24.9722 li
377.596 25.1763 li
377.27 25.1763 li
377.843 26.5775 li
378.416 25.1763 li
378.11 25.1763 li
378.11 24.9722 li
378.875 24.9722 li
378.875 25.1763 li
378.648 25.1763 li
377.898 27.0092 li
377.639 27.0092 li
f
381.015 26.028 mo
379.496 26.028 li
379.496 26.0437 li
379.496 26.3184 379.547 26.5265 379.649 26.6678 cv
379.751 26.8091 379.904 26.8758 380.108 26.8758 cv
380.261 26.8758 380.387 26.8365 380.489 26.7541 cv
380.587 26.6756 380.657 26.5539 380.697 26.393 cv
380.979 26.393 li
380.924 26.6167 380.818 26.7855 380.669 26.8954 cv
380.516 27.0053 380.316 27.0603 380.073 27.0603 cv
379.774 27.0603 379.535 26.9661 379.354 26.7698 cv
379.174 26.5736 379.084 26.3145 379.084 25.9887 cv
379.084 25.6669 379.17 25.4078 379.35 25.2116 cv
379.527 25.0153 379.759 24.9172 380.049 24.9172 cv
380.355 24.9172 380.595 25.0153 380.759 25.2037 cv
380.924 25.3921 381.007 25.6669 381.015 26.028 cv
380.599 25.8239 mo
380.591 25.5884 380.54 25.4078 380.445 25.2862 cv
380.351 25.1684 380.222 25.1056 380.049 25.1056 cv
379.884 25.1056 379.759 25.1684 379.664 25.2901 cv
379.57 25.4118 379.515 25.5884 379.496 25.8239 cv
380.599 25.8239 li
f
383.087 24.9682 mo
383.087 25.4785 li
382.883 25.4785 li
382.875 25.3764 382.848 25.3019 382.8 25.2508 cv
382.749 25.2037 382.675 25.1763 382.581 25.1763 cv
382.408 25.1763 382.275 25.2391 382.18 25.3568 cv
382.086 25.4785 382.043 25.6512 382.043 25.8749 cv
382.043 26.8051 li
382.451 26.8051 li
382.451 27.0092 li
381.372 27.0092 li
381.372 26.8051 li
381.69 26.8051 li
381.69 25.1723 li
381.352 25.1723 li
381.352 24.9722 li
382.043 24.9722 li
382.043 25.3333 li
382.11 25.192 382.196 25.0899 382.306 25.0193 cv
382.416 24.9525 382.549 24.9172 382.706 24.9172 cv
382.887 24.9329 li
383.087 24.9682 li
f
384.649 26.3695 mo
384.649 25.9377 li
384.194 25.9377 li
384.017 25.9377 383.888 25.977 383.801 26.0515 cv
383.715 26.13 383.676 26.2439 383.676 26.3969 cv
383.676 26.5382 383.719 26.6521 383.805 26.7345 cv
383.892 26.8208 384.009 26.8601 384.159 26.8601 cv
384.304 26.8601 384.421 26.8169 384.512 26.7266 cv
384.602 26.6364 384.649 26.5186 384.649 26.3695 cv
385.002 25.7375 mo
385.002 26.8051 li
385.316 26.8051 li
385.316 27.0092 li
384.649 27.0092 li
384.649 26.7894 li
384.571 26.8836 384.48 26.9543 384.378 26.9975 cv
384.276 27.0367 384.155 27.0603 384.021 27.0603 cv
383.793 27.0603 383.613 27.0014 383.479 26.8836 cv
383.346 26.7659 383.283 26.601 383.283 26.3969 cv
383.283 26.1889 383.358 26.028 383.511 25.9102 cv
383.66 25.7925 383.876 25.7336 384.155 25.7336 cv
384.649 25.7336 li
384.649 25.5923 li
384.649 25.4392 384.602 25.3215 384.508 25.2351 cv
384.414 25.1488 384.28 25.1056 384.111 25.1056 cv
383.97 25.1056 383.86 25.1409 383.778 25.2037 cv
383.691 25.2665 383.64 25.3607 383.621 25.4863 cv
383.44 25.4863 li
383.44 25.0742 li
383.562 25.0232 383.68 24.9839 383.797 24.9565 cv
383.911 24.9329 384.025 24.9172 384.135 24.9172 cv
384.418 24.9172 384.63 24.9879 384.779 25.1292 cv
384.928 25.2705 385.002 25.4706 385.002 25.7375 cv
f
387.487 25.1763 mo
387.487 26.9661 li
387.487 27.2565 387.404 27.4802 387.244 27.6372 cv
387.083 27.7942 386.855 27.8767 386.557 27.8767 cv
386.423 27.8767 386.294 27.8649 386.172 27.8413 cv
386.046 27.8178 385.929 27.7785 385.819 27.7314 cv
385.819 27.3036 li
386.003 27.3036 li
386.027 27.4371 386.078 27.5313 386.164 27.5941 cv
386.251 27.6569 386.372 27.6883 386.533 27.6883 cv
386.737 27.6883 386.89 27.6294 386.988 27.5116 cv
387.083 27.3939 387.134 27.2094 387.134 26.9661 cv
387.134 26.6913 li
387.063 26.8208 386.977 26.915 386.871 26.9739 cv
386.761 27.0289 386.631 27.0603 386.474 27.0603 cv
386.223 27.0603 386.015 26.9621 385.858 26.7659 cv
385.701 26.5696 385.622 26.3106 385.622 25.9887 cv
385.622 25.6708 385.701 25.4118 385.858 25.2155 cv
386.015 25.0193 386.223 24.9172 386.474 24.9172 cv
386.631 24.9172 386.761 24.9486 386.871 25.0075 cv
386.977 25.0703 387.063 25.1645 387.134 25.2901 cv
387.134 24.9722 li
387.824 24.9722 li
387.824 25.1763 li
387.487 25.1763 li
387.134 25.8906 mo
387.134 25.6473 387.087 25.4628 386.992 25.3333 cv
386.898 25.2037 386.761 25.137 386.584 25.137 cv
386.404 25.137 386.266 25.2116 386.172 25.3529 cv
386.078 25.4942 386.035 25.7061 386.035 25.9887 cv
386.035 26.2713 386.078 26.4872 386.172 26.6285 cv
386.266 26.7737 386.404 26.8444 386.584 26.8444 cv
386.761 26.8444 386.898 26.7816 386.992 26.6521 cv
387.087 26.5265 387.134 26.3381 387.134 26.0908 cv
387.134 25.8906 li
f
390.066 26.028 mo
388.547 26.028 li
388.547 26.0437 li
388.547 26.3184 388.598 26.5265 388.7 26.6678 cv
388.802 26.8091 388.955 26.8758 389.159 26.8758 cv
389.312 26.8758 389.438 26.8365 389.54 26.7541 cv
389.638 26.6756 389.708 26.5539 389.748 26.393 cv
390.03 26.393 li
389.975 26.6167 389.869 26.7855 389.72 26.8954 cv
389.567 27.0053 389.367 27.0603 389.124 27.0603 cv
388.825 27.0603 388.586 26.9661 388.405 26.7698 cv
388.225 26.5736 388.134 26.3145 388.134 25.9887 cv
388.134 25.6669 388.221 25.4078 388.401 25.2116 cv
388.578 25.0153 388.81 24.9172 389.1 24.9172 cv
389.406 24.9172 389.646 25.0153 389.81 25.2037 cv
389.975 25.3921 390.058 25.6669 390.066 26.028 cv
389.65 25.8239 mo
389.642 25.5884 389.591 25.4078 389.496 25.2862 cv
389.402 25.1684 389.273 25.1056 389.1 25.1056 cv
388.935 25.1056 388.81 25.1684 388.715 25.2901 cv
388.621 25.4118 388.566 25.5884 388.547 25.8239 cv
389.65 25.8239 li
f
392.479 25.5531 mo
392.986 25.5531 li
393.174 25.5531 393.319 25.502 393.421 25.4 cv
393.52 25.2979 393.571 25.1488 393.571 24.9525 cv
393.571 24.7563 393.52 24.6071 393.421 24.5051 cv
393.319 24.403 393.174 24.352 392.986 24.352 cv
392.479 24.352 li
392.479 25.5531 li
391.726 27.0092 mo
391.726 26.8051 li
392.091 26.8051 li
392.091 24.352 li
391.726 24.352 li
391.726 24.1479 li
393.08 24.1479 li
393.363 24.1479 393.59 24.2225 393.759 24.3677 cv
393.924 24.5129 394.01 24.7092 394.01 24.9525 cv
394.01 25.1998 393.924 25.3961 393.759 25.5413 cv
393.59 25.6865 393.363 25.7572 393.08 25.7572 cv
392.479 25.7572 li
392.479 26.8051 li
392.923 26.8051 li
392.923 27.0092 li
391.726 27.0092 li
f
396.279 26.028 mo
394.76 26.028 li
394.76 26.0437 li
394.76 26.3184 394.811 26.5265 394.913 26.6678 cv
395.015 26.8091 395.168 26.8758 395.372 26.8758 cv
395.525 26.8758 395.651 26.8365 395.753 26.7541 cv
395.851 26.6756 395.922 26.5539 395.961 26.393 cv
396.244 26.393 li
396.189 26.6167 396.083 26.7855 395.933 26.8954 cv
395.78 27.0053 395.58 27.0603 395.337 27.0603 cv
395.039 27.0603 394.799 26.9661 394.619 26.7698 cv
394.438 26.5736 394.348 26.3145 394.348 25.9887 cv
394.348 25.6669 394.434 25.4078 394.615 25.2116 cv
394.791 25.0153 395.023 24.9172 395.313 24.9172 cv
395.619 24.9172 395.859 25.0153 396.024 25.2037 cv
396.189 25.3921 396.271 25.6669 396.279 26.028 cv
395.863 25.8239 mo
395.855 25.5884 395.804 25.4078 395.71 25.2862 cv
395.616 25.1684 395.486 25.1056 395.313 25.1056 cv
395.148 25.1056 395.023 25.1684 394.929 25.2901 cv
394.834 25.4118 394.779 25.5884 394.76 25.8239 cv
395.863 25.8239 li
f
396.636 27.0092 mo
396.636 26.8051 li
396.954 26.8051 li
396.954 25.1763 li
396.616 25.1763 li
396.616 24.9722 li
397.307 24.9722 li
397.307 25.3333 li
397.37 25.1998 397.456 25.0938 397.558 25.0232 cv
397.66 24.9525 397.782 24.9172 397.923 24.9172 cv
398.147 24.9172 398.312 24.9839 398.418 25.1095 cv
398.524 25.2391 398.579 25.4392 398.579 25.714 cv
398.579 26.8051 li
398.893 26.8051 li
398.893 27.0092 li
397.919 27.0092 li
397.919 26.8051 li
398.226 26.8051 li
398.226 25.8239 li
398.226 25.5766 398.194 25.4078 398.131 25.3136 cv
398.069 25.2194 397.963 25.1723 397.81 25.1723 cv
397.645 25.1723 397.519 25.2351 397.433 25.3529 cv
397.346 25.4746 397.307 25.6473 397.307 25.8749 cv
397.307 26.8051 li
397.613 26.8051 li
397.613 27.0092 li
396.636 27.0092 li
f
401.063 26.8051 mo
401.401 26.8051 li
401.401 27.0092 li
400.71 27.0092 li
400.71 26.6913 li
400.64 26.8208 400.553 26.915 400.447 26.9739 cv
400.337 27.0289 400.208 27.0603 400.051 27.0603 cv
399.8 27.0603 399.592 26.9621 399.435 26.7659 cv
399.278 26.5696 399.199 26.3106 399.199 25.9887 cv
399.199 25.6708 399.278 25.4118 399.435 25.2155 cv
399.592 25.0193 399.8 24.9172 400.051 24.9172 cv
400.208 24.9172 400.337 24.9486 400.447 25.0075 cv
400.553 25.0703 400.64 25.1645 400.71 25.2901 cv
400.71 24.2303 li
400.377 24.2303 li
400.377 24.0262 li
401.063 24.0262 li
401.063 26.8051 li
400.71 26.0908 mo
400.71 25.8906 li
400.71 25.6473 400.663 25.4628 400.569 25.3333 cv
400.475 25.2037 400.337 25.137 400.161 25.137 cv
399.98 25.137 399.843 25.2116 399.749 25.3529 cv
399.654 25.4942 399.611 25.7061 399.611 25.9887 cv
399.611 26.2713 399.654 26.4872 399.749 26.6285 cv
399.843 26.7737 399.98 26.8444 400.161 26.8444 cv
400.337 26.8444 400.475 26.7816 400.569 26.6521 cv
400.663 26.5265 400.71 26.3381 400.71 26.0908 cv
f
403.077 26.3695 mo
403.077 25.9377 li
402.622 25.9377 li
402.445 25.9377 402.315 25.977 402.229 26.0515 cv
402.143 26.13 402.104 26.2439 402.104 26.3969 cv
402.104 26.5382 402.147 26.6521 402.233 26.7345 cv
402.319 26.8208 402.437 26.8601 402.586 26.8601 cv
402.732 26.8601 402.849 26.8169 402.94 26.7266 cv
403.03 26.6364 403.077 26.5186 403.077 26.3695 cv
403.43 25.7375 mo
403.43 26.8051 li
403.744 26.8051 li
403.744 27.0092 li
403.077 27.0092 li
403.077 26.7894 li
402.998 26.8836 402.908 26.9543 402.806 26.9975 cv
402.704 27.0367 402.582 27.0603 402.449 27.0603 cv
402.221 27.0603 402.041 27.0014 401.907 26.8836 cv
401.774 26.7659 401.711 26.601 401.711 26.3969 cv
401.711 26.1889 401.786 26.028 401.939 25.9102 cv
402.088 25.7925 402.304 25.7336 402.582 25.7336 cv
403.077 25.7336 li
403.077 25.5923 li
403.077 25.4392 403.03 25.3215 402.936 25.2351 cv
402.841 25.1488 402.708 25.1056 402.539 25.1056 cv
402.398 25.1056 402.288 25.1409 402.206 25.2037 cv
402.119 25.2665 402.068 25.3607 402.049 25.4863 cv
401.868 25.4863 li
401.868 25.0742 li
401.99 25.0232 402.107 24.9839 402.225 24.9565 cv
402.339 24.9329 402.453 24.9172 402.563 24.9172 cv
402.845 24.9172 403.057 24.9879 403.206 25.1292 cv
403.356 25.2705 403.43 25.4706 403.43 25.7375 cv
f
404.015 27.0092 mo
404.015 26.8051 li
404.333 26.8051 li
404.333 25.1763 li
403.995 25.1763 li
403.995 24.9722 li
404.686 24.9722 li
404.686 25.3333 li
404.749 25.1998 404.835 25.0938 404.937 25.0232 cv
405.039 24.9525 405.161 24.9172 405.302 24.9172 cv
405.526 24.9172 405.691 24.9839 405.797 25.1095 cv
405.903 25.2391 405.958 25.4392 405.958 25.714 cv
405.958 26.8051 li
406.272 26.8051 li
406.272 27.0092 li
405.298 27.0092 li
405.298 26.8051 li
405.605 26.8051 li
405.605 25.8239 li
405.605 25.5766 405.573 25.4078 405.51 25.3136 cv
405.448 25.2194 405.342 25.1723 405.189 25.1723 cv
405.024 25.1723 404.898 25.2351 404.812 25.3529 cv
404.725 25.4746 404.686 25.6473 404.686 25.8749 cv
404.686 26.8051 li
404.992 26.8051 li
404.992 27.0092 li
404.015 27.0092 li
f
406.806 25.1763 mo
406.496 25.1763 li
406.496 24.9722 li
406.806 24.9722 li
406.806 24.3402 li
407.159 24.3402 li
407.159 24.9722 li
407.822 24.9722 li
407.822 25.1763 li
407.159 25.1763 li
407.159 26.4715 li
407.159 26.6442 407.175 26.758 407.21 26.8051 cv
407.241 26.8522 407.304 26.8758 407.394 26.8758 cv
407.485 26.8758 407.551 26.8483 407.595 26.7934 cv
407.634 26.7384 407.657 26.6521 407.661 26.5304 cv
407.928 26.5304 li
407.916 26.7188 407.865 26.8522 407.775 26.9347 cv
407.685 27.0171 407.547 27.0603 407.363 27.0603 cv
407.159 27.0603 407.014 27.0132 406.931 26.9268 cv
406.845 26.8405 406.806 26.6874 406.806 26.4715 cv
406.806 25.1763 li
f
410.177 26.8051 mo
410.75 26.8051 li
410.978 26.8051 411.147 26.758 411.253 26.656 cv
411.359 26.5579 411.414 26.4009 411.414 26.1811 cv
411.414 25.9691 411.359 25.8121 411.253 25.7101 cv
411.147 25.6119 410.978 25.5609 410.75 25.5609 cv
410.177 25.5609 li
410.177 26.8051 li
410.177 25.3568 mo
410.664 25.3568 li
410.872 25.3568 411.025 25.3176 411.123 25.2391 cv
411.217 25.1606 411.268 25.031 411.268 24.8544 cv
411.268 24.6817 411.217 24.5522 411.123 24.4737 cv
411.025 24.3952 410.872 24.352 410.664 24.352 cv
410.177 24.352 li
410.177 25.3568 li
409.424 27.0092 mo
409.424 26.8051 li
409.789 26.8051 li
409.789 24.352 li
409.424 24.352 li
409.424 24.1479 li
410.836 24.1479 li
411.123 24.1479 411.339 24.2068 411.488 24.3245 cv
411.633 24.4423 411.708 24.6189 411.708 24.8544 cv
411.708 25.0271 411.657 25.1606 411.555 25.2626 cv
411.453 25.3647 411.307 25.4235 411.111 25.4471 cv
411.355 25.4785 411.539 25.557 411.665 25.6826 cv
411.79 25.8082 411.853 25.973 411.853 26.1811 cv
411.853 26.4637 411.763 26.6756 411.582 26.8091 cv
411.402 26.9425 411.123 27.0092 410.746 27.0092 cv
409.424 27.0092 li
f
413.969 24.9682 mo
413.969 25.4785 li
413.765 25.4785 li
413.757 25.3764 413.729 25.3019 413.682 25.2508 cv
413.631 25.2037 413.557 25.1763 413.462 25.1763 cv
413.29 25.1763 413.156 25.2391 413.062 25.3568 cv
412.968 25.4785 412.925 25.6512 412.925 25.8749 cv
412.925 26.8051 li
413.333 26.8051 li
413.333 27.0092 li
412.253 27.0092 li
412.253 26.8051 li
412.571 26.8051 li
412.571 25.1723 li
412.234 25.1723 li
412.234 24.9722 li
412.925 24.9722 li
412.925 25.3333 li
412.991 25.192 413.078 25.0899 413.188 25.0193 cv
413.297 24.9525 413.431 24.9172 413.588 24.9172 cv
413.768 24.9329 li
413.969 24.9682 li
f
415.531 26.3695 mo
415.531 25.9377 li
415.076 25.9377 li
414.899 25.9377 414.769 25.977 414.683 26.0515 cv
414.597 26.13 414.557 26.2439 414.557 26.3969 cv
414.557 26.5382 414.601 26.6521 414.687 26.7345 cv
414.773 26.8208 414.891 26.8601 415.04 26.8601 cv
415.185 26.8601 415.303 26.8169 415.393 26.7266 cv
415.484 26.6364 415.531 26.5186 415.531 26.3695 cv
415.884 25.7375 mo
415.884 26.8051 li
416.198 26.8051 li
416.198 27.0092 li
415.531 27.0092 li
415.531 26.7894 li
415.452 26.8836 415.362 26.9543 415.26 26.9975 cv
415.158 27.0367 415.036 27.0603 414.903 27.0603 cv
414.675 27.0603 414.495 27.0014 414.361 26.8836 cv
414.228 26.7659 414.165 26.601 414.165 26.3969 cv
414.165 26.1889 414.24 26.028 414.393 25.9102 cv
414.542 25.7925 414.758 25.7336 415.036 25.7336 cv
415.531 25.7336 li
415.531 25.5923 li
415.531 25.4392 415.484 25.3215 415.39 25.2351 cv
415.295 25.1488 415.162 25.1056 414.993 25.1056 cv
414.852 25.1056 414.742 25.1409 414.659 25.2037 cv
414.573 25.2665 414.522 25.3607 414.503 25.4863 cv
414.322 25.4863 li
414.322 25.0742 li
414.444 25.0232 414.561 24.9839 414.679 24.9565 cv
414.793 24.9329 414.907 24.9172 415.017 24.9172 cv
415.299 24.9172 415.511 24.9879 415.66 25.1292 cv
415.81 25.2705 415.884 25.4706 415.884 25.7375 cv
f
416.469 27.0092 mo
416.469 26.8051 li
416.787 26.8051 li
416.787 25.1763 li
416.449 25.1763 li
416.449 24.9722 li
417.14 24.9722 li
417.14 25.3333 li
417.203 25.1998 417.289 25.0938 417.391 25.0232 cv
417.493 24.9525 417.615 24.9172 417.756 24.9172 cv
417.98 24.9172 418.145 24.9839 418.251 25.1095 cv
418.357 25.2391 418.412 25.4392 418.412 25.714 cv
418.412 26.8051 li
418.726 26.8051 li
418.726 27.0092 li
417.752 27.0092 li
417.752 26.8051 li
418.059 26.8051 li
418.059 25.8239 li
418.059 25.5766 418.027 25.4078 417.964 25.3136 cv
417.902 25.2194 417.796 25.1723 417.642 25.1723 cv
417.478 25.1723 417.352 25.2351 417.266 25.3529 cv
417.179 25.4746 417.14 25.6473 417.14 25.8749 cv
417.14 26.8051 li
417.446 26.8051 li
417.446 27.0092 li
416.469 27.0092 li
f
420.853 26.3969 mo
420.802 26.6167 420.708 26.7816 420.567 26.8915 cv
420.425 27.0053 420.241 27.0603 420.017 27.0603 cv
419.719 27.0603 419.483 26.9661 419.303 26.7698 cv
419.122 26.5736 419.032 26.3145 419.032 25.9887 cv
419.032 25.6669 419.122 25.4078 419.303 25.2116 cv
419.483 25.0153 419.719 24.9172 420.017 24.9172 cv
420.143 24.9172 420.272 24.9329 420.402 24.9643 cv
420.527 24.9957 420.657 25.0389 420.786 25.0978 cv
420.786 25.6198 li
420.582 25.6198 li
420.555 25.4432 420.496 25.3136 420.406 25.2312 cv
420.315 25.1488 420.186 25.1056 420.021 25.1056 cv
419.829 25.1056 419.683 25.1802 419.589 25.3293 cv
419.491 25.4785 419.444 25.6983 419.444 25.9887 cv
419.444 26.287 419.491 26.5068 419.589 26.656 cv
419.683 26.8051 419.829 26.8758 420.021 26.8758 cv
420.17 26.8758 420.292 26.8365 420.382 26.758 cv
420.472 26.6795 420.535 26.5579 420.57 26.3969 cv
420.853 26.3969 li
f
421.195 27.0092 mo
421.195 26.8051 li
421.512 26.8051 li
421.512 24.2303 li
421.175 24.2303 li
421.175 24.0262 li
421.866 24.0262 li
421.866 25.3333 li
421.929 25.1998 422.015 25.0938 422.117 25.0232 cv
422.219 24.9525 422.341 24.9172 422.482 24.9172 cv
422.706 24.9172 422.871 24.9839 422.977 25.1095 cv
423.082 25.2391 423.137 25.4392 423.137 25.714 cv
423.137 26.8051 li
423.451 26.8051 li
423.451 27.0092 li
422.478 27.0092 li
422.478 26.8051 li
422.784 26.8051 li
422.784 25.8239 li
422.784 25.5766 422.753 25.4078 422.69 25.3136 cv
422.627 25.2234 422.521 25.1763 422.368 25.1763 cv
422.203 25.1763 422.078 25.2391 421.991 25.3568 cv
421.905 25.4746 421.866 25.6473 421.866 25.8749 cv
421.866 26.8051 li
422.172 26.8051 li
422.172 27.0092 li
421.195 27.0092 li
f
425.025 27.0092 mo
425.025 26.8051 li
425.39 26.8051 li
425.39 24.352 li
425.025 24.352 li
425.025 24.1479 li
426.144 24.1479 li
426.144 24.352 li
425.779 24.352 li
425.779 26.7737 li
427.086 26.7737 li
427.086 26.2949 li
427.321 26.2949 li
427.321 27.0092 li
425.025 27.0092 li
f
429.543 26.028 mo
428.024 26.028 li
428.024 26.0437 li
428.024 26.3184 428.075 26.5265 428.177 26.6678 cv
428.279 26.8091 428.432 26.8758 428.636 26.8758 cv
428.789 26.8758 428.915 26.8365 429.017 26.7541 cv
429.115 26.6756 429.186 26.5539 429.225 26.393 cv
429.508 26.393 li
429.453 26.6167 429.347 26.7855 429.198 26.8954 cv
429.044 27.0053 428.844 27.0603 428.601 27.0603 cv
428.303 27.0603 428.063 26.9661 427.883 26.7698 cv
427.702 26.5736 427.612 26.3145 427.612 25.9887 cv
427.612 25.6669 427.698 25.4078 427.879 25.2116 cv
428.055 25.0153 428.287 24.9172 428.577 24.9172 cv
428.884 24.9172 429.123 25.0153 429.288 25.2037 cv
429.453 25.3921 429.535 25.6669 429.543 26.028 cv
429.127 25.8239 mo
429.119 25.5884 429.068 25.4078 428.974 25.2862 cv
428.88 25.1684 428.75 25.1056 428.577 25.1056 cv
428.413 25.1056 428.287 25.1684 428.193 25.2901 cv
428.099 25.4118 428.044 25.5884 428.024 25.8239 cv
429.127 25.8239 li
f
429.9 27.0092 mo
429.9 26.8051 li
430.218 26.8051 li
430.218 25.1763 li
429.881 25.1763 li
429.881 24.9722 li
430.571 24.9722 li
430.571 25.3333 li
430.634 25.1998 430.721 25.0938 430.823 25.0232 cv
430.925 24.9525 431.046 24.9172 431.188 24.9172 cv
431.411 24.9172 431.576 24.9839 431.682 25.1095 cv
431.788 25.2391 431.843 25.4392 431.843 25.714 cv
431.843 26.8051 li
432.157 26.8051 li
432.157 27.0092 li
431.184 27.0092 li
431.184 26.8051 li
431.49 26.8051 li
431.49 25.8239 li
431.49 25.5766 431.458 25.4078 431.396 25.3136 cv
431.333 25.2194 431.227 25.1723 431.074 25.1723 cv
430.909 25.1723 430.783 25.2351 430.697 25.3529 cv
430.611 25.4746 430.571 25.6473 430.571 25.8749 cv
430.571 26.8051 li
430.878 26.8051 li
430.878 27.0092 li
429.9 27.0092 li
f
434.328 25.1763 mo
434.328 26.9661 li
434.328 27.2565 434.245 27.4802 434.084 27.6372 cv
433.923 27.7942 433.696 27.8767 433.397 27.8767 cv
433.264 27.8767 433.134 27.8649 433.013 27.8413 cv
432.887 27.8178 432.769 27.7785 432.659 27.7314 cv
432.659 27.3036 li
432.844 27.3036 li
432.867 27.4371 432.919 27.5313 433.005 27.5941 cv
433.091 27.6569 433.213 27.6883 433.374 27.6883 cv
433.578 27.6883 433.731 27.6294 433.829 27.5116 cv
433.923 27.3939 433.974 27.2094 433.974 26.9661 cv
433.974 26.6913 li
433.904 26.8208 433.817 26.915 433.711 26.9739 cv
433.601 27.0289 433.472 27.0603 433.315 27.0603 cv
433.064 27.0603 432.856 26.9621 432.699 26.7659 cv
432.542 26.5696 432.463 26.3106 432.463 25.9887 cv
432.463 25.6708 432.542 25.4118 432.699 25.2155 cv
432.856 25.0193 433.064 24.9172 433.315 24.9172 cv
433.472 24.9172 433.601 24.9486 433.711 25.0075 cv
433.817 25.0703 433.904 25.1645 433.974 25.2901 cv
433.974 24.9722 li
434.665 24.9722 li
434.665 25.1763 li
434.328 25.1763 li
433.974 25.8906 mo
433.974 25.6473 433.927 25.4628 433.833 25.3333 cv
433.739 25.2037 433.601 25.137 433.425 25.137 cv
433.244 25.137 433.107 25.2116 433.013 25.3529 cv
432.919 25.4942 432.875 25.7061 432.875 25.9887 cv
432.875 26.2713 432.919 26.4872 433.013 26.6285 cv
433.107 26.7737 433.244 26.8444 433.425 26.8444 cv
433.601 26.8444 433.739 26.7816 433.833 26.6521 cv
433.927 26.5265 433.974 26.3381 433.974 26.0908 cv
433.974 25.8906 li
f
435.203 25.1763 mo
434.893 25.1763 li
434.893 24.9722 li
435.203 24.9722 li
435.203 24.3402 li
435.556 24.3402 li
435.556 24.9722 li
436.219 24.9722 li
436.219 25.1763 li
435.556 25.1763 li
435.556 26.4715 li
435.556 26.6442 435.572 26.758 435.607 26.8051 cv
435.638 26.8522 435.701 26.8758 435.792 26.8758 cv
435.882 26.8758 435.949 26.8483 435.992 26.7934 cv
436.031 26.7384 436.055 26.6521 436.058 26.5304 cv
436.325 26.5304 li
436.314 26.7188 436.263 26.8522 436.172 26.9347 cv
436.082 27.0171 435.945 27.0603 435.76 27.0603 cv
435.556 27.0603 435.411 27.0132 435.328 26.9268 cv
435.242 26.8405 435.203 26.6874 435.203 26.4715 cv
435.203 25.1763 li
f
436.518 27.0092 mo
436.518 26.8051 li
436.836 26.8051 li
436.836 24.2303 li
436.498 24.2303 li
436.498 24.0262 li
437.189 24.0262 li
437.189 25.3333 li
437.252 25.1998 437.338 25.0938 437.44 25.0232 cv
437.542 24.9525 437.664 24.9172 437.805 24.9172 cv
438.029 24.9172 438.194 24.9839 438.3 25.1095 cv
438.406 25.2391 438.461 25.4392 438.461 25.714 cv
438.461 26.8051 li
438.775 26.8051 li
438.775 27.0092 li
437.801 27.0092 li
437.801 26.8051 li
438.107 26.8051 li
438.107 25.8239 li
438.107 25.5766 438.076 25.4078 438.013 25.3136 cv
437.95 25.2234 437.844 25.1763 437.691 25.1763 cv
437.526 25.1763 437.401 25.2391 437.314 25.3568 cv
437.228 25.4746 437.189 25.6473 437.189 25.8749 cv
437.189 26.8051 li
437.495 26.8051 li
437.495 27.0092 li
436.518 27.0092 li
f
362.846 32.823 mo
370.696 32.823 li
370.696 30.0755 li
362.846 30.0755 li
cp
1 /0 /CSD get_res sepcs
.588 sep
f
362.846 32.823 mo
370.696 32.823 li
370.696 30.0755 li
362.846 30.0755 li
cp
@
374.621 31.7867 mo
375.673 31.7867 li
375.147 30.4248 li
374.621 31.7867 li
373.816 32.8229 mo
373.816 32.6188 li
374.063 32.6188 li
375.084 29.9616 li
375.406 29.9616 li
376.426 32.6188 li
376.709 32.6188 li
376.709 32.8229 li
375.669 32.8229 li
375.669 32.6188 li
375.987 32.6188 li
375.747 31.9908 li
374.542 31.9908 li
374.303 32.6188 li
374.617 32.6188 li
374.617 32.8229 li
373.816 32.8229 li
1 /0 /CSD get_res sepcs
.85 sep
f
377.639 32.8229 mo
376.889 30.99 li
376.662 30.99 li
376.662 30.7859 li
377.596 30.7859 li
377.596 30.99 li
377.27 30.99 li
377.843 32.3912 li
378.416 30.99 li
378.11 30.99 li
378.11 30.7859 li
378.875 30.7859 li
378.875 30.99 li
378.648 30.99 li
377.898 32.8229 li
377.639 32.8229 li
f
381.015 31.8417 mo
379.496 31.8417 li
379.496 31.8574 li
379.496 32.1321 379.547 32.3402 379.649 32.4815 cv
379.751 32.6228 379.904 32.6895 380.108 32.6895 cv
380.261 32.6895 380.387 32.6502 380.489 32.5678 cv
380.587 32.4893 380.657 32.3676 380.697 32.2067 cv
380.979 32.2067 li
380.924 32.4304 380.818 32.5992 380.669 32.7091 cv
380.516 32.819 380.316 32.874 380.073 32.874 cv
379.774 32.874 379.535 32.7798 379.354 32.5835 cv
379.174 32.3873 379.084 32.1282 379.084 31.8024 cv
379.084 31.4806 379.17 31.2215 379.35 31.0253 cv
379.527 30.829 379.759 30.7309 380.049 30.7309 cv
380.355 30.7309 380.595 30.829 380.759 31.0174 cv
380.924 31.2058 381.007 31.4806 381.015 31.8417 cv
380.599 31.6376 mo
380.591 31.4021 380.54 31.2215 380.445 31.0999 cv
380.351 30.9821 380.222 30.9193 380.049 30.9193 cv
379.884 30.9193 379.759 30.9821 379.664 31.1038 cv
379.57 31.2255 379.515 31.4021 379.496 31.6376 cv
380.599 31.6376 li
f
383.087 30.7819 mo
383.087 31.2922 li
382.883 31.2922 li
382.875 31.1901 382.848 31.1156 382.8 31.0645 cv
382.749 31.0174 382.675 30.99 382.581 30.99 cv
382.408 30.99 382.275 31.0528 382.18 31.1705 cv
382.086 31.2922 382.043 31.4649 382.043 31.6886 cv
382.043 32.6188 li
382.451 32.6188 li
382.451 32.8229 li
381.372 32.8229 li
381.372 32.6188 li
381.69 32.6188 li
381.69 30.986 li
381.352 30.986 li
381.352 30.7859 li
382.043 30.7859 li
382.043 31.147 li
382.11 31.0057 382.196 30.9036 382.306 30.833 cv
382.416 30.7662 382.549 30.7309 382.706 30.7309 cv
382.887 30.7466 li
383.087 30.7819 li
f
384.649 32.1832 mo
384.649 31.7514 li
384.194 31.7514 li
384.017 31.7514 383.888 31.7907 383.801 31.8652 cv
383.715 31.9437 383.676 32.0576 383.676 32.2106 cv
383.676 32.3519 383.719 32.4658 383.805 32.5482 cv
383.892 32.6345 384.009 32.6738 384.159 32.6738 cv
384.304 32.6738 384.421 32.6306 384.512 32.5403 cv
384.602 32.4501 384.649 32.3323 384.649 32.1832 cv
385.002 31.5512 mo
385.002 32.6188 li
385.316 32.6188 li
385.316 32.8229 li
384.649 32.8229 li
384.649 32.6031 li
384.571 32.6973 384.48 32.768 384.378 32.8112 cv
384.276 32.8504 384.155 32.874 384.021 32.874 cv
383.793 32.874 383.613 32.8151 383.479 32.6973 cv
383.346 32.5796 383.283 32.4147 383.283 32.2106 cv
383.283 32.0026 383.358 31.8417 383.511 31.7239 cv
383.66 31.6062 383.876 31.5473 384.155 31.5473 cv
384.649 31.5473 li
384.649 31.406 li
384.649 31.2529 384.602 31.1352 384.508 31.0488 cv
384.414 30.9625 384.28 30.9193 384.111 30.9193 cv
383.97 30.9193 383.86 30.9546 383.778 31.0174 cv
383.691 31.0802 383.64 31.1744 383.621 31.3 cv
383.44 31.3 li
383.44 30.8879 li
383.562 30.8369 383.68 30.7976 383.797 30.7702 cv
383.911 30.7466 384.025 30.7309 384.135 30.7309 cv
384.418 30.7309 384.63 30.8016 384.779 30.9429 cv
384.928 31.0842 385.002 31.2843 385.002 31.5512 cv
f
387.487 30.99 mo
387.487 32.7798 li
387.487 33.0702 387.404 33.2939 387.244 33.4509 cv
387.083 33.6079 386.855 33.6904 386.557 33.6904 cv
386.423 33.6904 386.294 33.6786 386.172 33.655 cv
386.046 33.6315 385.929 33.5922 385.819 33.5451 cv
385.819 33.1173 li
386.003 33.1173 li
386.027 33.2508 386.078 33.345 386.164 33.4078 cv
386.251 33.4706 386.372 33.502 386.533 33.502 cv
386.737 33.502 386.89 33.4431 386.988 33.3253 cv
387.083 33.2076 387.134 33.0231 387.134 32.7798 cv
387.134 32.505 li
387.063 32.6345 386.977 32.7287 386.871 32.7876 cv
386.761 32.8426 386.631 32.874 386.474 32.874 cv
386.223 32.874 386.015 32.7758 385.858 32.5796 cv
385.701 32.3833 385.622 32.1243 385.622 31.8024 cv
385.622 31.4845 385.701 31.2255 385.858 31.0292 cv
386.015 30.833 386.223 30.7309 386.474 30.7309 cv
386.631 30.7309 386.761 30.7623 386.871 30.8212 cv
386.977 30.884 387.063 30.9782 387.134 31.1038 cv
387.134 30.7859 li
387.824 30.7859 li
387.824 30.99 li
387.487 30.99 li
387.134 31.7043 mo
387.134 31.461 387.087 31.2765 386.992 31.147 cv
386.898 31.0174 386.761 30.9507 386.584 30.9507 cv
386.404 30.9507 386.266 31.0253 386.172 31.1666 cv
386.078 31.3079 386.035 31.5198 386.035 31.8024 cv
386.035 32.085 386.078 32.3009 386.172 32.4422 cv
386.266 32.5874 386.404 32.6581 386.584 32.6581 cv
386.761 32.6581 386.898 32.5953 386.992 32.4658 cv
387.087 32.3402 387.134 32.1518 387.134 31.9045 cv
387.134 31.7043 li
f
390.066 31.8417 mo
388.547 31.8417 li
388.547 31.8574 li
388.547 32.1321 388.598 32.3402 388.7 32.4815 cv
388.802 32.6228 388.955 32.6895 389.159 32.6895 cv
389.312 32.6895 389.438 32.6502 389.54 32.5678 cv
389.638 32.4893 389.708 32.3676 389.748 32.2067 cv
390.03 32.2067 li
389.975 32.4304 389.869 32.5992 389.72 32.7091 cv
389.567 32.819 389.367 32.874 389.124 32.874 cv
388.825 32.874 388.586 32.7798 388.405 32.5835 cv
388.225 32.3873 388.134 32.1282 388.134 31.8024 cv
388.134 31.4806 388.221 31.2215 388.401 31.0253 cv
388.578 30.829 388.81 30.7309 389.1 30.7309 cv
389.406 30.7309 389.646 30.829 389.81 31.0174 cv
389.975 31.2058 390.058 31.4806 390.066 31.8417 cv
389.65 31.6376 mo
389.642 31.4021 389.591 31.2215 389.496 31.0999 cv
389.402 30.9821 389.273 30.9193 389.1 30.9193 cv
388.935 30.9193 388.81 30.9821 388.715 31.1038 cv
388.621 31.2255 388.566 31.4021 388.547 31.6376 cv
389.65 31.6376 li
f
392.479 32.6188 mo
393.052 32.6188 li
393.28 32.6188 393.449 32.5717 393.555 32.4697 cv
393.661 32.3716 393.716 32.2146 393.716 31.9948 cv
393.716 31.7828 393.661 31.6258 393.555 31.5238 cv
393.449 31.4256 393.28 31.3746 393.052 31.3746 cv
392.479 31.3746 li
392.479 32.6188 li
392.479 31.1705 mo
392.966 31.1705 li
393.174 31.1705 393.327 31.1313 393.425 31.0528 cv
393.52 30.9743 393.571 30.8447 393.571 30.6681 cv
393.571 30.4954 393.52 30.3659 393.425 30.2874 cv
393.327 30.2089 393.174 30.1657 392.966 30.1657 cv
392.479 30.1657 li
392.479 31.1705 li
391.726 32.8229 mo
391.726 32.6188 li
392.091 32.6188 li
392.091 30.1657 li
391.726 30.1657 li
391.726 29.9616 li
393.139 29.9616 li
393.425 29.9616 393.641 30.0205 393.79 30.1382 cv
393.936 30.256 394.01 30.4326 394.01 30.6681 cv
394.01 30.8408 393.959 30.9743 393.857 31.0763 cv
393.755 31.1784 393.61 31.2372 393.414 31.2608 cv
393.657 31.2922 393.841 31.3707 393.967 31.4963 cv
394.093 31.6219 394.155 31.7867 394.155 31.9948 cv
394.155 32.2774 394.065 32.4893 393.885 32.6228 cv
393.704 32.7562 393.425 32.8229 393.049 32.8229 cv
391.726 32.8229 li
f
396.271 30.7819 mo
396.271 31.2922 li
396.067 31.2922 li
396.059 31.1901 396.032 31.1156 395.984 31.0645 cv
395.933 31.0174 395.859 30.99 395.765 30.99 cv
395.592 30.99 395.458 31.0528 395.364 31.1705 cv
395.27 31.2922 395.227 31.4649 395.227 31.6886 cv
395.227 32.6188 li
395.635 32.6188 li
395.635 32.8229 li
394.556 32.8229 li
394.556 32.6188 li
394.874 32.6188 li
394.874 30.986 li
394.536 30.986 li
394.536 30.7859 li
395.227 30.7859 li
395.227 31.147 li
395.294 31.0057 395.38 30.9036 395.49 30.833 cv
395.6 30.7662 395.733 30.7309 395.89 30.7309 cv
396.071 30.7466 li
396.271 30.7819 li
f
397.833 32.1832 mo
397.833 31.7514 li
397.378 31.7514 li
397.201 31.7514 397.072 31.7907 396.985 31.8652 cv
396.899 31.9437 396.86 32.0576 396.86 32.2106 cv
396.86 32.3519 396.903 32.4658 396.989 32.5482 cv
397.076 32.6345 397.193 32.6738 397.343 32.6738 cv
397.488 32.6738 397.605 32.6306 397.696 32.5403 cv
397.786 32.4501 397.833 32.3323 397.833 32.1832 cv
398.186 31.5512 mo
398.186 32.6188 li
398.5 32.6188 li
398.5 32.8229 li
397.833 32.8229 li
397.833 32.6031 li
397.755 32.6973 397.664 32.768 397.562 32.8112 cv
397.46 32.8504 397.339 32.874 397.205 32.874 cv
396.977 32.874 396.797 32.8151 396.664 32.6973 cv
396.53 32.5796 396.467 32.4147 396.467 32.2106 cv
396.467 32.0026 396.542 31.8417 396.695 31.7239 cv
396.844 31.6062 397.06 31.5473 397.339 31.5473 cv
397.833 31.5473 li
397.833 31.406 li
397.833 31.2529 397.786 31.1352 397.692 31.0488 cv
397.598 30.9625 397.464 30.9193 397.295 30.9193 cv
397.154 30.9193 397.044 30.9546 396.962 31.0174 cv
396.875 31.0802 396.824 31.1744 396.805 31.3 cv
396.624 31.3 li
396.624 30.8879 li
396.746 30.8369 396.864 30.7976 396.981 30.7702 cv
397.095 30.7466 397.209 30.7309 397.319 30.7309 cv
397.602 30.7309 397.814 30.8016 397.963 30.9429 cv
398.112 31.0842 398.186 31.2843 398.186 31.5512 cv
f
398.771 32.8229 mo
398.771 32.6188 li
399.089 32.6188 li
399.089 30.99 li
398.752 30.99 li
398.752 30.7859 li
399.442 30.7859 li
399.442 31.147 li
399.505 31.0135 399.591 30.9075 399.694 30.8369 cv
399.796 30.7662 399.917 30.7309 400.059 30.7309 cv
400.282 30.7309 400.447 30.7976 400.553 30.9232 cv
400.659 31.0528 400.714 31.2529 400.714 31.5277 cv
400.714 32.6188 li
401.028 32.6188 li
401.028 32.8229 li
400.055 32.8229 li
400.055 32.6188 li
400.361 32.6188 li
400.361 31.6376 li
400.361 31.3903 400.329 31.2215 400.267 31.1273 cv
400.204 31.0331 400.098 30.986 399.945 30.986 cv
399.78 30.986 399.654 31.0488 399.568 31.1666 cv
399.482 31.2883 399.442 31.461 399.442 31.6886 cv
399.442 32.6188 li
399.748 32.6188 li
399.748 32.8229 li
398.771 32.8229 li
f
403.155 32.2106 mo
403.104 32.4304 403.01 32.5953 402.869 32.7052 cv
402.728 32.819 402.543 32.874 402.319 32.874 cv
402.021 32.874 401.786 32.7798 401.605 32.5835 cv
401.424 32.3873 401.334 32.1282 401.334 31.8024 cv
401.334 31.4806 401.424 31.2215 401.605 31.0253 cv
401.786 30.829 402.021 30.7309 402.319 30.7309 cv
402.445 30.7309 402.574 30.7466 402.704 30.778 cv
402.83 30.8094 402.959 30.8526 403.089 30.9115 cv
403.089 31.4335 li
402.885 31.4335 li
402.857 31.2569 402.798 31.1273 402.708 31.0449 cv
402.618 30.9625 402.488 30.9193 402.323 30.9193 cv
402.131 30.9193 401.986 30.9939 401.892 31.143 cv
401.793 31.2922 401.746 31.512 401.746 31.8024 cv
401.746 32.1007 401.793 32.3205 401.892 32.4697 cv
401.986 32.6188 402.131 32.6895 402.323 32.6895 cv
402.472 32.6895 402.594 32.6502 402.684 32.5717 cv
402.775 32.4932 402.837 32.3716 402.873 32.2106 cv
403.155 32.2106 li
f
403.497 32.8229 mo
403.497 32.6188 li
403.815 32.6188 li
403.815 30.044 li
403.477 30.044 li
403.477 29.8399 li
404.168 29.8399 li
404.168 31.147 li
404.231 31.0135 404.317 30.9075 404.419 30.8369 cv
404.521 30.7662 404.643 30.7309 404.784 30.7309 cv
405.008 30.7309 405.173 30.7976 405.279 30.9232 cv
405.385 31.0528 405.44 31.2529 405.44 31.5277 cv
405.44 32.6188 li
405.754 32.6188 li
405.754 32.8229 li
404.78 32.8229 li
404.78 32.6188 li
405.086 32.6188 li
405.086 31.6376 li
405.086 31.3903 405.055 31.2215 404.992 31.1273 cv
404.93 31.0371 404.823 30.99 404.67 30.99 cv
404.506 30.99 404.38 31.0528 404.294 31.1705 cv
404.207 31.2883 404.168 31.461 404.168 31.6886 cv
404.168 32.6188 li
404.474 32.6188 li
404.474 32.8229 li
403.497 32.8229 li
f
407.328 32.8229 mo
407.328 32.6188 li
407.693 32.6188 li
407.693 30.1657 li
407.328 30.1657 li
407.328 29.9616 li
408.446 29.9616 li
408.446 30.1657 li
408.081 30.1657 li
408.081 32.5874 li
409.388 32.5874 li
409.388 32.1086 li
409.624 32.1086 li
409.624 32.8229 li
407.328 32.8229 li
f
411.845 31.8417 mo
410.326 31.8417 li
410.326 31.8574 li
410.326 32.1321 410.377 32.3402 410.479 32.4815 cv
410.581 32.6228 410.735 32.6895 410.939 32.6895 cv
411.092 32.6895 411.217 32.6502 411.319 32.5678 cv
411.417 32.4893 411.488 32.3676 411.527 32.2067 cv
411.81 32.2067 li
411.755 32.4304 411.649 32.5992 411.5 32.7091 cv
411.347 32.819 411.147 32.874 410.903 32.874 cv
410.605 32.874 410.366 32.7798 410.185 32.5835 cv
410.004 32.3873 409.914 32.1282 409.914 31.8024 cv
409.914 31.4806 410.001 31.2215 410.181 31.0253 cv
410.358 30.829 410.589 30.7309 410.88 30.7309 cv
411.186 30.7309 411.425 30.829 411.59 31.0174 cv
411.755 31.2058 411.837 31.4806 411.845 31.8417 cv
411.429 31.6376 mo
411.421 31.4021 411.37 31.2215 411.276 31.0999 cv
411.182 30.9821 411.052 30.9193 410.88 30.9193 cv
410.715 30.9193 410.589 30.9821 410.495 31.1038 cv
410.401 31.2255 410.346 31.4021 410.326 31.6376 cv
411.429 31.6376 li
f
412.202 32.8229 mo
412.202 32.6188 li
412.52 32.6188 li
412.52 30.99 li
412.183 30.99 li
412.183 30.7859 li
412.874 30.7859 li
412.874 31.147 li
412.936 31.0135 413.023 30.9075 413.125 30.8369 cv
413.227 30.7662 413.349 30.7309 413.49 30.7309 cv
413.714 30.7309 413.878 30.7976 413.984 30.9232 cv
414.09 31.0528 414.145 31.2529 414.145 31.5277 cv
414.145 32.6188 li
414.459 32.6188 li
414.459 32.8229 li
413.486 32.8229 li
413.486 32.6188 li
413.792 32.6188 li
413.792 31.6376 li
413.792 31.3903 413.761 31.2215 413.698 31.1273 cv
413.635 31.0331 413.529 30.986 413.376 30.986 cv
413.211 30.986 413.086 31.0488 412.999 31.1666 cv
412.913 31.2883 412.874 31.461 412.874 31.6886 cv
412.874 32.6188 li
413.18 32.6188 li
413.18 32.8229 li
412.202 32.8229 li
f
416.63 30.99 mo
416.63 32.7798 li
416.63 33.0702 416.547 33.2939 416.386 33.4509 cv
416.226 33.6079 415.998 33.6904 415.7 33.6904 cv
415.566 33.6904 415.437 33.6786 415.315 33.655 cv
415.189 33.6315 415.072 33.5922 414.962 33.5451 cv
414.962 33.1173 li
415.146 33.1173 li
415.17 33.2508 415.221 33.345 415.307 33.4078 cv
415.393 33.4706 415.515 33.502 415.676 33.502 cv
415.88 33.502 416.033 33.4431 416.131 33.3253 cv
416.226 33.2076 416.277 33.0231 416.277 32.7798 cv
416.277 32.505 li
416.206 32.6345 416.12 32.7287 416.014 32.7876 cv
415.904 32.8426 415.774 32.874 415.617 32.874 cv
415.366 32.874 415.158 32.7758 415.001 32.5796 cv
414.844 32.3833 414.765 32.1243 414.765 31.8024 cv
414.765 31.4845 414.844 31.2255 415.001 31.0292 cv
415.158 30.833 415.366 30.7309 415.617 30.7309 cv
415.774 30.7309 415.904 30.7623 416.014 30.8212 cv
416.12 30.884 416.206 30.9782 416.277 31.1038 cv
416.277 30.7859 li
416.967 30.7859 li
416.967 30.99 li
416.63 30.99 li
416.277 31.7043 mo
416.277 31.461 416.229 31.2765 416.135 31.147 cv
416.041 31.0174 415.904 30.9507 415.727 30.9507 cv
415.547 30.9507 415.409 31.0253 415.315 31.1666 cv
415.221 31.3079 415.178 31.5198 415.178 31.8024 cv
415.178 32.085 415.221 32.3009 415.315 32.4422 cv
415.409 32.5874 415.547 32.6581 415.727 32.6581 cv
415.904 32.6581 416.041 32.5953 416.135 32.4658 cv
416.229 32.3402 416.277 32.1518 416.277 31.9045 cv
416.277 31.7043 li
f
417.505 30.99 mo
417.195 30.99 li
417.195 30.7859 li
417.505 30.7859 li
417.505 30.1539 li
417.858 30.1539 li
417.858 30.7859 li
418.522 30.7859 li
418.522 30.99 li
417.858 30.99 li
417.858 32.2852 li
417.858 32.4579 417.874 32.5717 417.909 32.6188 cv
417.941 32.6659 418.004 32.6895 418.094 32.6895 cv
418.184 32.6895 418.251 32.662 418.294 32.6071 cv
418.333 32.5521 418.357 32.4658 418.361 32.3441 cv
418.628 32.3441 li
418.616 32.5325 418.565 32.6659 418.475 32.7484 cv
418.384 32.8308 418.247 32.874 418.062 32.874 cv
417.858 32.874 417.713 32.8269 417.631 32.7405 cv
417.544 32.6542 417.505 32.5011 417.505 32.2852 cv
417.505 30.99 li
f
418.82 32.8229 mo
418.82 32.6188 li
419.138 32.6188 li
419.138 30.044 li
418.8 30.044 li
418.8 29.8399 li
419.491 29.8399 li
419.491 31.147 li
419.554 31.0135 419.64 30.9075 419.742 30.8369 cv
419.844 30.7662 419.966 30.7309 420.107 30.7309 cv
420.331 30.7309 420.496 30.7976 420.602 30.9232 cv
420.708 31.0528 420.763 31.2529 420.763 31.5277 cv
420.763 32.6188 li
421.077 32.6188 li
421.077 32.8229 li
420.103 32.8229 li
420.103 32.6188 li
420.41 32.6188 li
420.41 31.6376 li
420.41 31.3903 420.378 31.2215 420.315 31.1273 cv
420.253 31.0371 420.147 30.99 419.994 30.99 cv
419.829 30.99 419.703 31.0528 419.617 31.1705 cv
419.53 31.2883 419.491 31.461 419.491 31.6886 cv
419.491 32.6188 li
419.797 32.6188 li
419.797 32.8229 li
418.82 32.8229 li
f
grestore
%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7CDD8B4397BC5D546373275BA909D41337177A39F41B58C96866A4C171F786C9B49E0B845D6F92D561ED969B60685344F4B3DE87DBA038984A25C9A3BB855F4BE09D2B653E4B0E57C4942F5E843087B81EB813B74925AF65E3A479E3B2E9C034B803FE5EE7939682697FC076E59CAED8A56821B085006724DA544D253B65E7F266FF76BD33F328219> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b 157{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf344.215 168.686 mo(\(b\))[3.29318 4.70477 0 ]xsh%ADOBeginSubsetFont: JAAAAA+CMB10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /JAAAAA+CMB10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMB10.) def/Weight (Bold) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 70 /F putdef/FontBBox {-62 -250 1011 750} defendsystemdict begindup /Private14 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 0 444 453 655 676 686 697] def/OtherBlues [-201 -194] def/BlueScale 0.04379 def/StdHW [47] def/StdVW [108] def/StemSnapH [40 47] def/StemSnapV [108 142] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/F <1C60D8A8C9B66621C3D36726E8ABEB5EDBA786D8663C15A7B0528F4BFEF62FAE3D9775AEFA9D8C6C57527DE00C209507A119889357CEA21EE614F228EFDCAD7CD2E294F2D171A23B13AA8C0D91E5ADE4909376ECB67D8520963FFA15802E632E31CBBFE4D033B84802C38E643EF2A58AD188CA7EED8F7DBE611CE305256E244EAD8895B8FF86> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBURY+CMB10 /JAAAAA+CMB10 findfont ct_VMDictPut/YRBURY+CMB10*1 [70{/.notdef}rp /F 185{/.notdef}rp]YRBURY+CMB10 nfYRBURY+CMB10*1 [7.9701 0 0 -7.9701 0 0 ]msf-15.824 195.136 mo(F)sh%ADOBeginSubsetFont: KAAAAA+CMCSC10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /KAAAAA+CMCSC10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMCSC10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 69 /E putdup 71 /G putdup 73 /I putdup 82 /R putdup 85 /U putdef/FontBBox {14 -250 1077 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 514 528 666 677 683 705] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/StemSnapV [72 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/E <1C60D8A8C9B6184AC77504634ED277E54BC62EA0AE080AB2C4C1246D78662038448C351BD6DC55B0B252FB32FBD0FF3EF8CEBFAAA6BCEB614A26E1F26FD486885FCD6E95B31D0613B46B88B9E0433F97166F0F4CFF96C2D565F2B7F0580A2D26978918F3FDB025F6C63BEFA2CD12C42ADB4AE86218158E1750DE91A8F9AA02F416C4> |-/G <1C60D8A8C9B686F750F3796B1A183BD136482689B886760779B4D9CB8ACD1797667CC1B92B9189180D161424B9FF26F3288DFF8B5B9EDDF001DF226012FA575ED8A4D0BF419F23849789A973A711BC53726F18F9CD92D13020B3E97ADDB0A6CCC7ED3DD87EBD22D9B4D62FF6C59D8CF34A5EC2618004DD23FF824E38D816F5D718D615A117BFA48A480AB57A4B5ED90F0B6901A263E16D016A15D80F5AC10A12803B591699F61A5E0E7F16C6070D4BCB985B81A8FBD75DFA73C19AE31A5F9078EA0FC4> |-/I <1C60D8A8C9B7065364184C355AAB9A4C4BA59BF980474E590ADA31D4C17A8B6782A18A0F80AAB7DA58A657E32705CF706BB9DAC4EFC379B6A95183FE14B7902F25FC2EA6CB9F693EFDE76D7B920639DF9378A55DCB3F190E05821C182845E3B121E8B6EFB3D5C3D5AE9FA5A43F714A733977D43E7F982139A875D63E65BCB6FFD9ADF9DB4821B7C66AF589C776B081760A> |-/R <1C60D8A8C9B6D5A0D101B9F80CA3B6BBE38DC7FAB3F1622FAD85F5909818A715D3908560F5E7CCA5861B29AB0B664BDCCEF8C7EEC1F06FBAA06B9605BDE42A897156B999BB2AA7821CDF8AC90BA3710E5DC2AC47C5D3CE61864183568B0552770896857E45DFC9ADF260FDBE504C0ED2E3E7E308E64CADDDDDF29022532BBDC3A66632FBCD2C6904F5DBCAB01CC855B169E0086A276854936D9AEBB0A2EAD89B4CF933C606FE14686F1519296AA278E5EC397FC187CA6BCBAF880B186BC0E83A3CB985AFD0045945FF96696ECD59971C651A219AF259F7536A6A97913A7EDCBF6568C6AB7DE11DC9AB7D351AF94D9375456B1731C6CEE10F6A3D97603FF128C933D65730B93EF77249F6C4AF0116DA> |-/U <1C60D8A8C9B6A0FCAEF91917C6365E1EE48618494DCDABE21988810038B32505245E90740421C1C850CC32B5AD8512888C092BC58A9A1BEFE7B41FD2FDDDD105E1DD891C0CF6E8E869FC4193BA051C3A743D20788A820C7B1A09397618056DB4CFBB1E14A402DC2C0B192EC9E8EF96744C2D666790FD4A379A9C4FAB726EE38F66DC47354048EF44B637788B0A8894B69BCF40DE17B431136E30F6841BDB09CE36DCE5EDE40942EFBE76BC31A0C1F7DAADDB80DFD608> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBURZ+CMCSC10 /KAAAAA+CMCSC10 findfont ct_VMDictPut/YRBURZ+CMCSC10*1 [69{/.notdef}rp /E /.notdef /G /.notdef /I 8{/.notdef}rp /R 2{/.notdef}rp /U 170{/.notdef}rp]YRBURZ+CMCSC10 nfYRBURZ+CMCSC10*1 [7.9701 0 0 -7.9701 0 0 ]msf-10.82 195.136 mo(IGURE)[3.23262 6.78571 6.48689 6.3761 0 ]xsh%ADOBeginSubsetFont: JAAAAA+CMB10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURY+CMB10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8574464AC22750EB81234EE9B80BF7783FF03EF3FC51337A3B1BC74AE196A780F1BCD9E6E> |-/two <1C60D8A8C9B7A73DC5243F90D8256FD8815A455EB7E596A9D57EE9A4B7075C593D95EA126D36ACAD450F1911A2ACE0C854E4612530429879DF562A7D90903031C0012358E61667D4551ED129F13C119011244892ABE039E3B1FD36CB72E252EE5DF9D488F3143FC9A1A6864EA7673C77991B62AAC23D39917617534F3C502F868BB322833597FDD6FC6885AE81EE> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURY+CMB10 /Encoding getdup 46 /period putdup 50 /two putpop%ADOEndSubsetFont
/YRBURY+CMB10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 19{/.notdef}rp /F 185{/.notdef}rp]YRBURY+CMB10 nfYRBURY+CMB10*1 [7.9701 0 0 -7.9701 0 0 ]msf20.324 195.136 mo(2.)[3.98505 0 ]xsh%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B845C87883D105C3F24E2FD53DB6D616962DA6D0C4A6D7304DBF45F56C78C81D2EE50FF2DDE45F1C04302817F5C526DAC136A897C61D169A73FA87E65EB2F5EF73E1F878> |-/c <1C60D8A8C9B74383EF980222A6B5E458AA3D6B433D9D5D3C23E2026B269887927B3DF12955B37A4877214D068FD3C2E5841CCCB4F446BFDB874487058C31D1724E4656920FAD5D552FDF1DCF11E462BE0C50EDA119ACB5BBAE5A80C48C80CE43B1E11AB874B2CB3CF1346235562729371E56E3> |-/d <1C60D8A8C9B7CDD8B4397BC5D546373275BA90C4515798C9B3E3AE6AF3554AD2E418A7032490B6B98BE88035378F8D560CD03D4F698A84C210943595D27237173958355F95C86EE3859E71BFE20F9E0CC27C2DCDC86416AAC1ADEF3B85620DD70EBE8D07A49BDEA5000ACFCA59569F53CAE891AEB1079327F3C14A6BA93841F6312DB6077AE59F6C3D1D44E629B7> |-/e <1C60D8A8C9B74383EF980222186AC412A37061F7DA1A075A58C4EB92AF05251C4F544837EE77DF2FD3FD46B59FD3554B7172B19B99F4BBA7EB9A3F6A9B54C1050351BB54E475583D5D0877A11CCAC1C029E4402750715303229C0A8A7556406100EEAD8CA3E3685225736E4C7D6700DD8B4CFDDA19A31D> |-/f <1C60D8A8C9B826CBB7BBEADA7EFAF4C7CFE0713C33BBCE2C7F4CEB07D4119C52C6107FFE630FA96457A3C154C3C9AD89170452ABED2B70BBC8BA234393C5B0080F370EDF8D47B04EEFFEFD66DDDB5B3C7A82468D3451E8E8EA56D47C39C8995A2CBE65FA6419B666CF4D995BB404532900AF302F9AFD65D101A8D8B47820DE23FD1297D1A014200C02D890C049C86D68CC8FB9E2F77E82> |-/g <1C60D8A8C9B7883C373F05ABE9DC810D0BC598FCE8477BFB3E028A776983DDADA517DD6E567B973DBF8B5799DC5BD64E6237B3589C95C27EF745FEFB57D008F7C5090EEF0F3F3FBA635A9C0C42F6226DF6B3249B6DADD1F5B059CCA451EE66A6CE92415EE2896D39D74A28D516AAB4934312777BE9858CD83E9072359F945C16AFAC62BA6BCDFDB283002A341FFBE1A0406A26CB90452A29AAFA540BBB6E1A194722AA7FD386841A84F73718C11EA66F8F217B5043157E2D8296B17C3D6536F64D3C06365B12AB13BE5273A730B8CBB79ECC09A66AC2EDADC2EED71F88E575E091E2A220FAE924775CF57D6C9538CFDBF64F3846> |-/h <1C60D8A8C9B7CDD8BE0229A9F7DBF0CCAE754B865B43F223DF733D11888419AC6AF60FFBD0D1CA633FE1FE2C6E1F64DDF217BE68448AE4474BFFE2D08589EBD1FCBCAE1335A3FEDD67F9E622D0FD888A8B09AE8FC7005E7EF7700206D1E054393C2C65BBBF83352EF87A969BBA10BA81D938F63206F49A1F21D525B7FB0F2CB58A4724384AE97212E8B7D8D76836611DED5BE4702DD6039379B0437C3C137D5AC9C0BC8475A5E2634B783F90F5C2F5B426852C901B080E58E24CEE> |-/i <1C60D8A8C9B845C80829510E46B066D617592C2752F4719A972C90DEABB522FDEAA3EF457E51B858973B4D0B0FBB25EFBEF1DBC7CB2D0C715C3BAB84315A0C25E75381301FF942ED170560D3DC9F01113C33FA4E643697198914D9405D4567A946F198597C5B4B842DDE84CF67B10114310ED3022D924089FBA3B4> |-/k <1C60D8A8C9B7EB081EFE6AFB11A2C967A0CC0F6D11FCEA577E07A23BCC2C7AFAA23FF9210DC2852003EDFBE5D63CAFFD3E526C36B82F1DFEAFED80EFF61815F8A309758B9FEB6CFBD5128B17302F8BCE32D80310D7F9FD263FA9D7214CECAC22D5B463C8810DACA768418399D2B715891E65E67E4BD11043BF5C372DCE4B807A0B51E9672616A774F715CA9A26A8586430EA1DDE6F128983EDDF84E9286F41655A61347250F84410CB6820D371EA70010EF4CC6978E13F5991C317F2AFD03563DAEA8AC64C4CAB63FE60AFB0A8DC10A81FCECE907E55DED56117F3ECE5B79ADF0C3EAA064F03485CE3897BE0DE65D68C80B29842126CDE3BD8> |-/l <1C60D8A8C9B845C80829510F2B6BB6DDB6DBD81EACB6BC16C2545FA3EAD2BC6F384F7DBBF19F0060CFA1157B24C1E5ABD97E4D5EF2C31AE2D7E682D087F247A450CCBCD70D5B46AF891DDA7EAE02F47171CED31962EAE834F0D1C6F815> |-/n <1C60D8A8C9B7CDD8BE0229A9F7DBF0C2A966CCBCFEB550A2AF7F67D4E5F22C43CC99744433C65943913F08908A73A43E3699889519171A2ACB6AB5A398468C17752140CC9610F45893A0D08573FBCB4ED93DBC4C35D46EFF4E1EF29C50FC850B2878743220735A5072AEDECF0B09D1F747A6DB4C08F5487D5E36F63AD5E121B5BD9D0867360CC0C002915A82939C5634567A88B45A0A07465D31C12E7A045B18EF8C0A0C7534C2C5497DDF33440E5FB7BB302E727236> |-/o <1C60D8A8C9B7883C4DB1DE675E90B0F4A835049649F018A5DADA634F86DAA57613197E8B0F6DFD79D88111B056183A6CE9D391DA36227DE230C1DF352E21FDE409CC70F4EB326556A563408237CB833F03E9966A04A8D110B55C62A7F326000C9DD21BF98FF3E2C03CBBC5CD920F53BF93E47BF0870557EEFA> |-/p <1C60D8A8C9B7CDD8CEC3C3B22188F9EF41126D2D281C4C44EC2AF1EF95B90DBC18E5253908081A36F13D5070BDA9E68BC0AF8DC2943C2259ECB48C2E73152791A1921AE51B16FDD8412C2AE03FC791018BA479F481B152109E921299C23EA248AC46A552FE79E0C01C0A43440A1C23690B84B6E65F06457A853888879000EDD0895C00385A9914B6943436988A9D040D195F81AF07D80426B5C66F3EAF2184E92805D4F984733F31F176AD89> |-/r <1C60D8A8C9B71DE7AEBBE327700164145A7987C663F5708624971209183C1AA5AE7985618809D8530182A6954B7D298F8533949148FD10D074ECCBB0E4BD9237A4CB4A90465D136A5C2F39F0FDE2A674B4B320C16AA9A48F8E602F9DC5BA66848AB29267CC1A9D2762085785E6610E9CC9E8C5B6B4186371F402E776D132214C560E0505324D5C14EECA9A5B> |-/s <1C60D8A8C9B718ECA8B2B4494EBC135E9E4A103528B9D0F29E3F5C6DD8113435432E5CEDD6A5D462314B4DBA1AA18956DB12B8904A6ABB953CF320952D9AA3DDB593C49DE1A3F9893AD9ED261E356F88258E00F78B9C23A635CA77B4C5F025261DE2F4614C61D058962F2264807C6FEB557C9F99BD9D0617C02B54EED21661E53BA6D1C6F72DD9C7FBA243D1B5E3D68C15C10E45BD1407AC69524E17EE9636B012B64F16CEA682484F1AF5D3F344113D9A9E569744F8A6BB0CBE1D3D74BDA6B7B95E9E> |-/t <1C60D8A8C9B71EB5EE6C6DCE30F4A15DE0491CF726FD0973E0358E88609FF52B82D96726F88858573641C46778AB6CB1A69C1546570740CE361A0F5F2EBA90B678DCA87F0E4369608991A4A17842AD893F8D2E664B681D02> |-/v <1C60D8A8C9B7EB0814E2CE9AAC218DAEF2E8826CC8F0E51AF5C67E02936B196C9DBEA75FDEF071DC733934BD7949AC2CD3B31A852B3CF30C5EAF6B22A1E9966AFDA65C0DA94E21343EFAA3D6DE44CC8195847337D197CA8EA856C9543148AC85FB6DAAE5E3E072D933E09DF47DACE750B2A32BDD6E4E14310005D367A4AC8C03D9D665E194CCB88DAF1D68F90FEBC6A747AD97F7358A336594D88EDB1B31A46FDC975C730D36A227DE186D2D40CFA49F21> |-/x <1C60D8A8C9B7EB081EFE6AFA6267D5AA9D5E413589FDB01D795E85FC9662CE1A624D0C74A12C9B3BDBEEA8DC05457ABA7B161321E77C2CB91A53E879F463673280A903B65E303E65C5E4F9DE38144ECD413F5C0B37881368BF0760230FC9EC5AC81085B43778FD3F4B35F5BF52ABAC595ECDDC446822A19A320F1A018DB195BAE9E24ADD2CA3E496C770ACDE0E29502E195A27D96287013398D97BFD0C5E6EBA0DF0A55749A72007D6A79929F1FD5FCD96C4B26DF88E4D2E6B5A938B55039B9783F653BAF37307A50265BBDF478243CE462EB84E960C6F82B0C21244110E0A95DD97BBE6299EAFD0E1BF26D5F51EAEE137C0CF9280EEB5708A582C90C07767FB0D6FF79A8D203B06E6E68441610800F7A5FB4305DEDBC9929E94722362B21C0472DC6FC329648514F982813674721EEC59> |-/y <1C60D8A8C9B7EB086EB4A789EEF7D65C5CF25537E4A831871A743460E474E839B62979D960D0DF8D729402C0E9BC892041C72E405B3EDE1777E8AFB67B013BB74725BE41A822DD85607ADA97C255A983F1B95284EA854C329E502B1D6679A76C3656E234B70A3A17897BD8BC323FBF134D890F4AD38CC7F0D228A4F52FAA4B868CF780EF272005AAE015E30578F05476316C7691B97903C54058CA0C4045FB7EE856D968B30655F7AFA9D2A3FB08216AF66E9AAE5BE0512C0305E6C03ADE6BF70E2DA877344FC094CF43384BFF82F7> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 44 /comma putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 107 /k putdup 108 /l putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 118 /v putdup 120 /x putdup 121 /y putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /.notdef /n /o /p /.notdef /r /s /t /.notdef /v /.notdef /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf40.312 195.136 mo(Theoreticalexpectationsof\(a\)cherryfraction\(dasheddarkgrayline\)andactiveleaffraction\(dashedlightgrayline\),)[6.11621 4.70477 3.76346 4.23448 3.30037 3.76347 3.29318 2.35202 3.76346 4.23448 4.85463 3.76347 4.46968 4.93588 3.76347 3.76347 3.29318 4.2345 3.29318 2.35202 4.23447 4.70477 5.84286 4.23447 5.08261 3.29318 4.23447 5.79581 3.52438 4.70474 3.76349 3.30035 3.30035 6.97229 2.58795 3.30038 4.23444 3.76349 3.29321 2.35199 4.2345 7.1994 3.29315 4.70477 4.2345 3.34024 4.70477 3.76346 7.20737 4.70477 4.23447 3.30035 6.96436 4.23447 3.30035 4.00336 6.96432 2.35202 2.35202 4.70477 3.76343 5.79584 4.23444 4.70477 7.1994 4.2345 3.76349 3.29315 2.35205 4.23853 6.25812 2.35199 3.76349 4.2345 5.09052 2.58795 3.30035 4.2345 3.76349 3.29315 2.35205 4.2345 7.1994 3.29315 4.70477 4.2345 3.34021 4.70477 3.76349 7.20734 2.35205 2.35199 4.2345 4.46564 5.79584 4.23444 3.30042 3.99536 6.97229 2.35199 2.35205 4.70477 3.76343 3.29321 0 ]xsh%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/m <1C60D8A8C9B59B43992944ED490C19A15D8735441315F95002383D7FB55CBE87771592826C484758BB609F7DA8BB17A0AD5F34356927AD6AEFDB58A28643E71533CEC1200C271AF80201C51CB23AC4E21EC48E2905B47AF54251BE0EFD9D868C76E0679EE191CAA0999955AAF990983016435DE0E01D02AE248F5D5EDBD10DD3A3DEA4A2800D6A621A3BA50BF1580431497240FD20A31D470DC52CCDE58A4C6324A0F849B194B7185D6A197C82E6492E54FB3F79F4634E1835DA3CE502B62DDEE63B11A0797EF3C321B60CE1648C96026DA5BFFF88D8ED804E6814DE911E94BA75231DCC793D2DCF52A70D33A7C8617207C4D09DDCE6DFD800E0BF281FF22E0A5D8D71AED2E5D1BC45CEA583B1> |-/u <1C60D8A8C9B7CDD8B4397BC5C54C67A59D54BF3E30C4F705D24054AF402519E3BE071AD7D52923E6CC431686D26A514C0341C8057C4D1AF43DBC925E2B88457377B8C53FDB1A63A50921FCB8EC4ECDCCCC14530F53D8C66EEDB79E4CC12CD217E5B4> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 109 /m putdup 117 /u putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf-25.232 204.103 mo(and\(b\)branchlength\(dasheddarkgrayline\)andpendantbranchlength\(dashedlightgrayline\)versussimulateddistributions\(inbox)[4.23448 4.70476 7.22332 3.29318 4.70476 5.81972 4.70476 3.30037 4.23448 4.70476 3.52437 7.23128 2.35202 3.76347 4.70476 4.23448 3.29318 7.22333 3.29318 4.70476 4.23448 3.34024 4.70477 3.76346 7.23129 4.70477 4.23447 3.30037 6.98824 4.23447 3.30035 4.00336 6.98825 2.35202 2.35199 4.70477 3.76346 5.81973 4.23447 4.70477 7.2233 4.94388 3.76346 4.70477 4.70477 4.23447 4.46567 5.8197 4.70474 3.30038 4.2265 4.70477 3.53232 7.22333 2.35999 3.76346 4.70477 4.2265 3.29318 7.23129 3.29318 4.70477 4.23447 3.34027 4.70477 3.76346 7.22333 2.35202 2.35999 4.2265 4.47363 5.81177 4.23447 3.30035 4.00336 6.98825 2.35202 2.35202 4.70477 3.76346 5.81973 4.23056 3.76349 3.30035 3.34027 4.70474 5.86679 3.34024 2.35202 6.81769 4.70477 2.35202 4.23444 3.29321 3.76349 7.23126 4.70477 2.35199 3.34027 3.29321 3.30035 2.35199 4.70477 4.70477 3.29315 2.35205 4.2345 4.70471 5.85883 3.29321 2.35999 7.22333 4.94385 3.99536 0 ]xsh%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7883CBAA78CA806F705F10D1AC319938D611C6D9BBD69F6190342FB8FEE9368658E53BCE0AE7824A3280DBA7A5BEF9C087CCC08CFF6EE3D1CDFAC58984B448A56F36AF08290137970E991F67C347622795CF41E8928BFB8E257576760A149EDA95EF674E027B6AB519EF80CF7C75785FE2FE5A8F75A3518927237EA043AA5EE9A8092D5C4A8721DCA0DF83E6E87BB> |-/one <1C60D8A8C9B7883C47E9695A643EC7CDC9D492AB150D29B838BCDE529851B4F36139BB3C5556B7F7E4934494C8CA669B61323ACA68A6240E429D123FC3286EBB7794C68A02175F48138D7512A6C24D04FF2F8E1915AEBF24AD4C9B5E652D787177BE307207126057745DD2D6A7D78294> |-/w <1C60D8A8C9B6F21D01646DC0414B82B4BEFC9DE695ABBB53C2A79E96C8525DBC55D37415CFB76275C3DF257D310FA16F508F72CB1B0DBCF21B27F8B7EB04C141611FBE8962D24C82958B164E32306E1A0AC5D96F184273A90FB5A1B68A3157D1D6DA84AD57CAB6EB3C5F2ED8EFA7C0A92589B982B65F636E4CF5A8F4324AF3D2819E488C9CE5F8696211FFF02CFCCAF69FA51F2675DAD64A48C21C81CE2F8CD1A36704997CBD2C2C90F7C7B28FBDFE131ACBBC13CC9A2521E4113E32661255DCA09F0A24BC8BA4E0E32685EC8A81572A8D87500B6C12118E2B7A825A011C835348FE53B57589F410D621A67E1522EC2721318DF0F15D03CD67DF47C423336917B34FCA6D8E3FAF6C24F1> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 48 /zero putdup 49 /one putdup 119 /w putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp /zero /one 15{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf-25.232 213.069 mo(plots\)using100replicateswith)[4.70477 2.35201 4.23448 3.29319 3.34025 6.13851 4.70476 3.34026 2.35202 4.70476 7.0798 4.23448 4.23448 7.0798 3.30037 3.76346 4.70477 2.35201 2.35202 3.76347 4.23447 3.2932 3.76347 6.18558 6.11621 2.35202 3.29318 0 ]xsh%ADOBeginSubsetFont: ZAAAAA+CMMI8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ZAAAAA+CMMI8 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI8.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 110 /n putdef/FontBBox {-24 -250 1110 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 0 431 441 452 463 683 704] def/OtherBlues [-204 -194] def/BlueScale 0.04379 def/StdHW [32] def/StdVW [78] def/StemSnapH [28 32] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/n <1C60D8A8C9B679735CF591AC0735064CCD1C8690DCB8FA18163F603A770B46B213E2B9C19C696470FB8263894CE86AF7D936BFEA1E6EC01B739C633454E04FDD9F1FC0CDBA63AC48652D31F5CB4165BFF7F9949F6C36AB89EB4AFE6AB798AA2DC5DA7D8FB4A86B6A90222D5784A96FF63AAF565EF005B3E12EA78FBDD09E7F20C18656C7555E96DDD2431CA1EDF9682FE641EAC3DCB1B379ADFDDE32A0816C34DFAA495A67B1B848C924F3EAA51012F9BF45710543F7EFB8E18C6EB0B22BE1DD032083B71C0B7A96E9CDD3D6DC6D55A0AF9B16A0592EAD319AA2A76CD94D> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBUSA+CMMI8 /ZAAAAA+CMMI8 findfont ct_VMDictPut/YRBUSA+CMMI8*1 [110{/.notdef}rp /n 145{/.notdef}rp]YRBUSA+CMMI8 nfYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf93.585 213.069 mo(n)sh%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7883C47E9695598D0AF3A7007C55B549EB9B3F3F46104652844342745D2B91FB2D0F00634244F88463533B1B57C29F84779340190813A1C1D067290CD1A5A15C3546B4439E2525D45177EB37490815EF6B6C58818E7C9CDA495E2BF3E7B45D1B291D529E999804ECD42D22A6077E492DD51C0EA4F3AC647B0CA8614C7> |-/six <1C60D8A8C9B7883CBAA92BB7052CB3D025D26C786B134C7D4D024227A6CF5116B65C7F3EDCBB046A6D5B58FC55EB7A6349771E207AC0F1620248BBC82765A477B525CA3035D65AD150E1FA66D14C00F4D62FA003E8267DAD2E0BC6EB428EE745E8A441D5D96DA8071D8B76F53B9FED393417E799F3B539D42A45B55E0575B899A9FA1CBDD41774F8FB6DCE28637A97B1A33161930CB80D70A25BF74CEBE689B485DF0013312A677C6070E950F089378CB5> |-/nine <1C60D8A8C9B7883CBAA92BFC2795CB489FAB13B9BB6E18181A103EC5B1E1B8B191BF9985DC765CB882D3BB429A7391E9ABEFC63A1500585FC331EAC31ED3AE6DF0951839AC3A95570CFCA4F606382A77C8150F60C2BC2EE07B6BFEEA74B5BCB1B549978D6E5BDA7FAEE8A0209BF3A3DE0B37D2771CE9D9460866923DAB9D9EA5A831A08CAABC890AF2E7ED89FF5AB09011E7F1A13FA90477058C41C6677EE1251D> |-/equal <1C60D8A8C9B6AF04192A4BB30DDD738252E20241690489A62629F3B344313DD3D5F1F837570FB3ACBDAD182696C7EA47D7904E4AA1692C85CD41F507B0C4FDE1117DD6F957380D576A13E4CC28E9DC> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 52 /four putdup 54 /six putdup 57 /nine putdup 61 /equal putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp /zero /one 2{/.notdef}rp /four /.notdef /six 2{/.notdef}rp /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf99.664 213.069 mo(=4096,)[7.52696 4.23448 4.23448 4.23448 4.23448 0 ]xsh%ADOBeginSubsetFont: ZAAAAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSA+CMMI8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/lambda <1C60D8A8C9B7D04D90D6E236568011900BAD2F20399369CB7C98C4A9191CFD78A6CB7CD53128F591433E34EED11BA6F599A3D7F66AB9CF17F494B90F1F1380D9FDF7CA9EC1333F11D2F214244761CF011F33EB2B4B73786AEAB1A1D1FD4F95820C76A92056B6CA65C36E10A9BF25DB6561BD9BC806C5> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSA+CMMI8 /Encoding getdup 21 /lambda putpop%ADOEndSubsetFont
/YRBUSA+CMMI8*1 [21{/.notdef}rp /lambda 88{/.notdef}rp /n 145{/.notdef}rp]YRBUSA+CMMI8 nfYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf129.326 213.069 mo(\025)sh%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7883CBAA92BB64A311DA1354F5D68776F2608BEB81B80294D73AA8C3FEDAFF58B4E60701097923423FBE4C36FE8DFBF6F2C385E130C47988B6844413476018C63C43A8DDDFAE187820C43250C18C9D130DC31BAEF4A60888F65AD1678646D1687B470D47BD523EE331174DDD0831E389327B2B700E7A6A776152FCA4C02EC65B75F7B57D7BCCCD6954215D1EB0A1CFBA00896F64363A45CDA240697> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp /zero /one 2{/.notdef}rp /four /.notdef /six /.notdef /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf135.207 213.069 mo(=48,andvaryingvaluesof)[7.52698 4.23447 4.2345 5.19733 4.2345 4.70474 7.55008 3.99945 4.2345 3.30035 4.46967 2.35202 4.70477 7.0798 3.99945 4.2345 2.35199 4.70477 3.76349 6.18555 4.2345 0 ]xsh%ADOBeginSubsetFont: ZAAAAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSA+CMMI8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/r <1C60D8A8C9B75CBB2AADD1FB054120522F9945A278F1641D057749298E592E90B6E80BF48A8F64C2042F081B070E797C7E4F49F9F2C4C6BF7F5BE2F20BEBDE192B562681D3E4238448F943B844317F8F4D0FB1C3FDDC65FFD4CF5656DAB81C96B664469944C3ABCB0C6702461F40F287BD7570E947A9990DBD1AEB36489F5B681A4F5C68A6B7DCE055AB79BD26D2FCB129D2334BF0ABA9E8A6991B9F917DDDDA994A66DFBCE5D95779248B15AB1EFEC4> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSA+CMMI8 /Encoding getdup 114 /r putpop%ADOEndSubsetFont
/YRBUSA+CMMI8*1 [21{/.notdef}rp /lambda 88{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]YRBUSA+CMMI8 nfYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf237.934 213.069 mo(r)shYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf244.836 213.069 mo(\()sh%ADOBeginSubsetFont: ZAAAAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSA+CMMI8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/x <1C60D8A8C9B7C56CCD1BC9B75D21714387D3AD3ACF25872779F83EBDBCD6CE54998B30575B69D40B2B697D333CBED0D896F89234E6F827B9F19B541AEECDD45EC7D4F1126ACAC87C3C4D72FD40DA2D588CFB8C9AF0D6150F97A0BBCACF17E32B0710E68246003F62B2AF95E8C00AF3FB2ACCA95B4562458782BB96AE0D72D6A76D406E7FC05EB25A15FD9C1667627A43B16E6DD22F1CE36567E1826982769D5C422DD7BB5E3E35F941B799D5AEBBC4B4E2730F1B5D705BCF2BBDB32026E31AC1304D5EC2EBCC373B5FC5716F11810C91BEE34479C921C13FD7B947EC284CF09393A7> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSA+CMMI8 /Encoding getdup 120 /x putpop%ADOEndSubsetFont
/YRBUSA+CMMI8*1 [21{/.notdef}rp /lambda 88{/.notdef}rp /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSA+CMMI8 nfYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf248.129 213.069 mo(x)sh%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B80898F3D3B620DE269D78A71890A6A5D42D0F4711153258DD> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 45 /hyphen putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 2{/.notdef}rp /zero /one 2{/.notdef}rp /four /.notdef /six /.notdef /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf252.896 213.069 mo(-axis\)from1)[2.82303 4.23447 4.4697 2.35202 3.34024 6.13852 2.58795 3.30035 4.2345 9.9021 0 ]xsh%ADOBeginSubsetFont: ZAAAAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSA+CMMI8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B7883C37D0390FA268C00AA6E97DC38CEE127D52926793076D8BD8C99F8C962F92C6BE23785C233A1AF987223E7CAAECD01BCB4653B763A7F816DCDFEEB26CDA48> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSA+CMMI8 /Encoding getdup 61 /slash putpop%ADOEndSubsetFont
/YRBUSA+CMMI8*1 [21{/.notdef}rp /lambda 39{/.notdef}rp /slash 48{/.notdef}rp /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSA+CMMI8 nfYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf300.512 213.069 mo(=)sh%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B845C808722EC4BC14AFF8AE2E7B77E6E7C9BED6C8454E4CF0B0ACAAF01739DBE1B2A56ED6> |-/two <1C60D8A8C9B7883C479819BD474E9964F6BF369AAF487ABFE629F8A56337D176F7C9556B1CAAE607CA6285C927013D8BDE6137B6739AFDAF8D7D8B1E86BAFBB9D834592D58F996DFF88B929F1FABA7347C2BBDB5519BE210DDE834DD1DCB9A84AA77E585DFD5A86708901622F6AC3CFFFF626D8C5FD08A157C4A8F19F7F5FA2E61175441FDD6> |-/N <1C60D8A8C9B6CE042A9AE41F8CB5724C466A7174DB24543F33B15CB36B7630D2AB88162326161B49E519D74CAB6C239535F01B98CB9657590F9AC35D418C934440B5DA9466CA92914E765F0AE5E7A375924FA4FE89EFCDC2BA05CCC12116C22DF8078E9EDEA06BA8A6DEB0107D5AC1EA20DCEE792A0778804590279C10D7343A7095F4F7D77E32CA633398EDF503D99CB686E119AA77ECF3D280BC58AB1320E4FE30ABA37C60DE45F2E3389C95413D2A52DC5B4FA96869F22CF607A4B6F2FEE0C576> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 46 /period putdup 50 /two putdup 78 /N putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf304.746 213.069 mo(1024to1.Notethatthenumberofcherriesis)[4.23447 4.2345 4.23447 7.0798 3.29321 7.0798 4.23447 5.19733 6.34268 4.23447 3.29321 6.60876 3.29321 4.70474 4.2345 6.13852 3.29315 4.70477 6.60883 4.46564 4.70477 6.82562 4.93591 3.76349 6.14569 4.23444 5.43329 3.53235 4.70477 3.76349 3.30035 3.30035 2.35199 3.76349 6.18561 2.35199 0 ]xshYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf-25.232 222.035 mo(themaximumparsimonyestimateofthenumberofactiveelements,andthemostparsimoniousestimateworkswellforlowvaluesof)[3.29319 4.70476 6.44939 7.05678 4.23448 4.46968 2.35202 6.82564 4.70476 9.74271 4.70477 4.23447 3.30038 3.34024 2.35202 7.05678 4.23448 4.46567 7.15559 3.76347 3.34024 3.2932 2.35201 7.05679 4.23447 3.2932 6.45737 4.23448 5.27386 3.29318 4.70477 6.4494 4.46564 4.70477 6.82562 4.93591 3.76346 5.9863 4.23447 5.28183 4.2345 3.76346 3.29318 2.35205 4.23053 6.4494 3.76349 2.35199 3.76349 7.05676 3.76349 4.47363 3.29318 3.34024 5.03796 4.23447 4.70477 7.39069 3.29318 4.70477 6.4494 7.05679 4.23447 3.34024 5.97913 4.70477 4.2345 3.30035 3.34024 2.35202 7.05679 4.23447 4.70477 2.35202 4.23447 4.70477 6.03415 3.76346 3.34027 3.29318 2.35202 7.05676 4.2345 3.29318 6.4494 5.87714 4.23447 3.30035 4.4697 6.02618 5.88507 3.76349 2.35199 5.03796 2.58795 4.2345 5.98627 2.35205 4.00336 8.80219 3.99939 4.2345 2.35199 4.70477 3.76343 6.02625 4.2345 0 ]xshYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf468.483 222.035 mo(r)shYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf472.54 222.035 mo(.)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/F <1C60D8A8C9B6415B3711EB1374ABAAA5807C9EEF546BB48E20B7C80F2440A33EBF154406CF8E0357C9FC59A91B81A30E2A6B39737D11C4098B5A80670049AA0D28AEFFF6CC9623E77045E059C85ED1DEF097E8AD8EB596D92ECDFA2450852F5239A26C6AE22D6FF2A11E41BB2F0B25F77CCF63F0DFBDCAFB46AB38C0475BF38716AF7C70011524830AEDECD5FE884C30BE71797C9E6C523F53FAFC27E6> |-/e <1C60D8A8C9B77FE2B98B448A6D851DB2CAC9451BC5A778A9834F3ED148EF8C2095ABE60FC1B26DBB94057B63BED2BEE770D96BCB613AAAF017CD18C97CCA61C46589119EDD299B58A1852EFEBDB7EF2A6D8606D19DEFCD13B1531BE3098F0C00520EFD32FA435A0514B86269DFF5EE650657E526962BA2F3447589A03D4DA2371542253C2A1E1B028917A1E5> |-/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A163CFC67672A34CC74B0AEAADF24229DF1CCAA1488AE3E348FE2ACD572EA487EC9D77FBB0710AB421B03DD5B8AE5519B5C269E9648E819E7ECE806EEF16A6618D07D9AAB350E57F26F5259E8FCF9E5C2D96BBEAD16502F9E7819E854042DDB2BC674C39681CC2E5224219582BC7B59BBAEF869C9DF91CA7770A97BAD53C3C3A99175BA8F0A5744B5969D3BC15831A95918F7C707E41F5D87B8DB2D57378BC9C297DAE69E4BF438246E63F565B22D86CBE28DEF748262FB9FF82A88935451D6280A28F1AD964E6E476D5779321E42D3A86BE41122F1BED36C3DC47E1E01C22534598D0431873197ABE1C8EC03B4011E4B26D249635BDBABB8E5B69BE07AFA65F88EAF6> |-/i <1C60D8A8C9B8574464F1B435BC57209FEB2C54026A3BBB707C1ACEEAD444C0BCD7940801068D7665A567CBC52ABA43208AF37F075A1C65586B76611081AB5310CF42CD496B0F8F59766AFDA0C4BF40BC709402C0DD0AB42B4F3987C50B5617CF3B4859C86132A1A7E65B42225B2228E50B44DBFBE367ABD36EBF02ACAD4FB895EE90259DCAEBCEFB9765574F> |-/r <1C60D8A8C9B734780FC88FD3B21DF573DE0BD8E19ECF409327C58E3627DF4B64D82C290E296AD12D16F3BDD53C90C5D592551EDF5E8C7E8FE6B97498610F068FB40EF014C6896F922B40CC34CEEEFE16781389974FD1D8010C3A1B93DA9423D6C4280D86498AD092998E974DDACA1FA3CA4F3751905AC346A3F69D4682194D3342733C7CF3000C654F8E9DE159A2316F10B36E49A0996D15FEF4DE5D84332102ECD35D818CF4C1F221D14DB48C0FB5BD30A2> |-/u <1C60D8A8C9B790A8362C570CFB2800E8CBF5A206A67F17BAAE343254C03E958F83CB5A12ADFA8B4412150589560DDE9B70784A29B02FB60C9645231D13A978308E5EE53984B78C9AC2AA2F0EE5269299E66EC0A2F6D2FC9C7C56146B4A2D450F3E529F72E7D7FD96107695E2148A6B3CC77B93CD510A44599C53106E6043B1ADA6520148DE> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 70 /F putdup 101 /e putdup 103 /g putdup 105 /i putdup 114 /r putdup 117 /u putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [46{/.notdef}rp /period 7{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L 2{/.notdef}rp /O 6{/.notdef}rp /V 14{/.notdef}rp /e /.notdef /g /.notdef /i 8{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-15.27 250.484 mo(Figure)[6.5036 2.76762 4.98131 5.53525 3.90228 0 ]xsh.930816 .793027 0 0 cmyk
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A07BD51606BCA866C4BD24CA34E86B9CA5A529B664F3EEDB6B4AF8A2B994DB57B49473E162231CB943675FE63E9B92B8AEBB62FB22456EC4173C66EF6C2F34FFEC22ACAE77FFFAAD70F3754CADC0D2CF63CB6D286D930AEA5A613E5AB9CB004BEAEBADDD070EDAF4FF25FDB6421F540D58D2C7A3FC40290CBCF831BE1B89B7F> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L 2{/.notdef}rp /O 6{/.notdef}rp /V 14{/.notdef}rp /e /.notdef /g /.notdef /i 8{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf17.2509 250.484 mo(2)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/a <1C60D8A8C9B7A73DCB03313BCF7AD8C8EE234E5372D46A65E92A78F4B7E02ECC58F71EE6C027AD4D56C5E4DE1AF1031295DC17C0E7AC8D8358634F9A19B02A110E5539C10136C68E0D2CBEA6658A501D9D73323861F8C29EB92F9080ACC3E236C5F14389534682EC2925F59CD4A215569A7BD7B9F7827A30BA75EB840535B2A2C8F92AD166CE93D277314A4C690C47DB847F73BFE1049631CDDB9124FD762753AA8DB187C216ED3005CA929015114EA53826E55872B63FD1FA60DB9883C727F137C754792AB823A705DD0DF28293037E1DA5DE4936C6573A1718CA6713783EC51D8DA977> |-/b <1C60D8A8C9B790A83D9E7A6001AC854EF8B943E743E91B99DA29586301CDD5839823233D99B1C577C1F4DFF0EA0F32BC2086F2707A7DD20AF9B67CEAF2A8142C0184903C062BCDA3F619B0D53D20F97863BA7527C41ABC984D83E79275377BA320AFBB48F48B2D10088BC89EBB9C01D05CB682732B7056131A0BF4F223A45FB196C15FF8C20088CC8B4C909F5F0D72D1839A24540D889C90DD68E933DDAD60B1B6BFBEF9B96EA41D08123BC10ECBE3BFA295FF397E499C14DA43850D729620> |-/c <1C60D8A8C9B77FE2B98B448AAC15CD6088822B1EF090F0AF6EBCC9DDBBDBF65EF50E59DA466BEF0FA242351362893C7564E99AEB6F42CD9ABC234329EBDD53E590403FF06858A28FE170B71597883CA2148468202C6DAD0EC83B55607026EDF229F6C24FEC7F46E5F53E3632239AC20591F5D1A939BB80017E6C55D3D86751973D2E06541F43DD3086EAE96863ECE0301F79F72109AFDFA112C3A8> |-/d <1C60D8A8C9B790A8362C570CE7DC14ED8339A5DD8D37983A5A2D0B4F515EB70692477F5F548E28F1DCAB41EDF4BA0728DAF245495BE02E394B0DD240B5D55EE51A3675003CB15BB911F900B1E5DDC9F583E654C623831C440B91AF47A14F90BB1788AEF8D63BB1C09A0DFFCC46AF6B9E95BF92169FAA4D5042B81ADB2768FDD695BCD7BA015B086BADFFD844444D05A45C7E170A2C8460474939E15E0EBABF1131915EE0697E92536E40A464505CA536EC3A6940E2FEEC193EC0EB65C18399A9D9> |-/h <1C60D8A8C9B790A83D946A52D133532E9DDB252C41638FA043533341FF45F4E0EEA3BF171DE971DA044D93815FABEAC6A961DE24CD8980B97FCA250A2CD3DBC1C9175E22BC18E41FEAAE3FDFFC1EC461872FCD8D617F792306109E6C32D9EEF5544F9D280B7D28E77406A0CD8B488898A862DE88999A354709E3D39075170B03FDE60F1E3F7008331FFBCAD1B838829FBE76742914B50EBA96CF0A9BFB3610334BBAB609B960E9922A4587A5710F25CDF35D8C915B99DCE5DB414BDFAE707D88DDA35DD290F04B> |-/j <1C60D8A8C9B83BB86FEC4D024150CA04554E200F53272B8D7E0ACF72631639195ECDA6C5023993C1F0A275818E30C9895799114AD3F9DEDF0FDD32E3475F87E182F6D1D5F4088DC5F2DE6D7F0089FD4803FF4392B4D3E6E13302514C8C29F5F8B3499217973564C156AE45D9AC7EF590B757A40EF930069520A6F6BE60FA60A65628551AAA971B3E> |-/l <1C60D8A8C9B8574464F1B434E924E8E17F47A16A389514CB900F56482ADFB78CE880D41A1EAC41DBDDDAD723AAD75825AFFB2E5AD2853D684AACA377F4CFF61F8762E467D7432F03C259012AF7AA821CB502C120A1BA693F9CB4DA4BB1D32A> |-/n <1C60D8A8C9B790A83D946A52D13353207152D3DCC239C62B9F0F0BD9624AAEAC8EB33D804BC103BF4C84F8FCB252709B3422B4E5F4D698E79D5531B2BC676C0D12EEB603C056C169F17DCC9F0F6AC43F292D82458847D2D279D19F466EA84C7027B712BFD7C4B4B770C9E0BD2D556C526F95495C91C927B8F7463DFDACF3970984B31C39C074ECA243D9C8BFA10955B7D910908799AA616A425B937E17FF6121AD71909EE5D3B89CA2D13AAC585FB6F54A794E7F44844B39E96B6AE21032D420B68967AC9AC0F0DA0D53B8016F26EED527CB2387F1592BCDB6A91E073E83C3181BD7505792D4855E> |-/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDFC5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-/s <1C60D8A8C9B731071688E37ED9B7C64FA956A3F4F3785F4130685F1AE6ECB30084C557AE5797D39605F849A2D9ADE2A65CA0927636C7629B25FDC4D569E897F36515E172780EBFB2CFAF71CF0EA8B4DD392E776CF20E7204D59F8DC03F56CB4421E12FE8430EBD29CFDF5F6509E086EB0664E99116F88F2D5E9A8F8E96C847773BE6B8B90D0A0CCE846E18C0A1DF77A626724C95EC9E6FDFE55022CAFC8918AE45838B303979E3A9BFE7F7BDAB73505805005500EF4C5AC6405B1E840CF1B619C716D89CA7E80EEDEA1B928C67F7A10B24DE3EC254855DAC8B83797B28> |-/t <1C60D8A8C9B737EC5C828C415A21EF65A8DCE4AB75C4F804FD2F74AAED0332CF1075799E326C4CB510197DA3A668B8EFF3F2CAC89EFC9F1E24EFCBB6E4F7D58562BB90C45FF297D6656314FD65E690525FFF895AC8C24B58CDA801> |-/w <1C60D8A8C9B6079F1534F6C9E4A028DF1A3B0F45C5ED9660DAC93A0D8C3F14212FFFC33A5BF9F9DD1C33FCCFCA8E96FE6463AF5069DBFBDDA36D99F88520652F25FDAFA9A8FF2873E3FDAD8A56EC3357F44ECB370CA4BFB8352215DEAFC22A0DFA018C56F834AADBF74CAA36536863C75BD9D7A1CEF77767FBD18809BFE6294ECFE5D3634C7FCBBBF987220663EF315339F3D9AF5AA5B0F66F6EA972A5EE22BB54794478F89EC6375B180C36468ADC7E7CAF0A17CB4A0ECCE19DAEAC46ADA738E6EE5AB37B1A9CDCACA6A56A4B556E8FC78C8021B1E08F770EC97987838BDF3A71E528C5695396142E79124F182E83C76D32BCA38AD1CB77748E00880A049F1E82A6C5E7A5A7404A74F28E09F8202A196F8E9F69EAA58A4A3555B55F> |-/y <1C60D8A8C9B78C66EF659E90818F97757EE825CF655AFC48477B2EBD1F4499DC02D3D00D2C79F15A6A14FA0E2836DE647DF694EA1CBE5D7DC52383058018A4A5582F22DA6D7CA5C65B837F7ACE7A37D8295111416CC9542C83315A00DCC58E29D7A527B2702A3D42A1DF4479D981119205E9B3AA4589ADB8E455F287AEE97EF0B05E9F424581B6FBD77BBF4A2F94CB7C67A1D393F0F92A930746CD86812D0F3B42F48F3482F4A9EA27C315DF77B6F7CF19EE636DE6A48B0C90655339955118E2A4E2CE041041FB27A226D9B9C797FB178764482B1E4FE17D6316683F26947316> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 104 /h putdup 106 /j putdup 108 /l putdup 110 /n putdup 111 /o putdup 115 /s putdup 116 /t putdup 119 /w putdup 121 /y putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L 2{/.notdef}rp /O 6{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /.notdef /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u /.notdef /w /.notdef /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf22.2322 250.484 mo(bshowsthattheconjecturedresultsclosely)[9.92876 3.92918 5.53525 4.70236 7.20493 8.32269 3.87447 5.53526 4.98129 8.27792 3.87447 5.53526 8.82085 4.43732 4.98131 5.52527 3.04462 4.4373 4.42735 3.87445 5.5253 3.90228 4.43732 9.92877 3.90228 4.42731 3.9292 5.53528 2.76761 3.87448 8.33264 4.42734 2.76761 4.98132 3.9292 4.42734 2.76761 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RAAAAA+CMSS8 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSS8.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdef/FontBBox {-65 -250 1062 761} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 0 444 459 656 677 694 715] def/OtherBlues [-205 -194] def/BlueScale 0.04379 def/StdHW [66] def/StdVW [87] def/StemSnapH [59 66] def/StemSnapV [87 101] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/one <1C60D8A8C9B7883C478FD7F46F74AD01DD5B54699EA0E353C31BD1A212ADADED6E40A7A9FBC51D62BA784D7A55D02BB8B16483754CBF9A880FE2F6BDF42A0714> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBUSB+CMSS8 /RAAAAA+CMSS8 findfont ct_VMDictPut/YRBUSB+CMSS8*1 [49{/.notdef}rp /one 206{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 250.484 mo(1)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/f <1C60D8A8C9B83BB81FA130945C39F84E5B6E4A6C9F65F126BAA27979D5DD24D841AF174619487B50FE2700B1E5283B920CF0C36EBD127A2FB193DC3CC442CA2E2038702792712AC88F8A95F0FA297EC3B143EBC57B59693CDD3FD2B58E1A0E615D44B1BC286B802CB88D50954B5E67313CC26D2733BD799245E69ACF97F2A9BABCDB06A9D69EA77A4D41E95E2A8D3382998D0B0648C54FDA3BC85D30> |-/m <1C60D8A8C9B6B41CBB73614D2DDC1714A2872D80DD283A0865738F60F13894266612CF652F44C217A476812BE532AC6358E0DAFFB0D5E5117642F5BA2923BEDB1C7E5DCDCA6F9C7FD13A241FE9CAACF60BAB1EA0492936F6C6CF04C43B9AFAC5B2026A794CD9C7836D055F7A78383659A460B574C21AA89D092E6B58E9A31CB4E83AFE695EB2A4193C039EA5F618CAF7745B1FDA9ADBC0C4AFF43C821C2538E4D3E0311619B8D0096703429D61227134D3D4F10264801F2AA4B0A71E89914A580FDC8088D541BDE06B262C3D90AF19EF55DBE228CA71D5828F50534BACCEF423C267E1995B8408ADC61022455B144160D98EB158310C4459DDC5A63157F982CF307D29294A260DA3997052E3598EEBA826650D8D48FE852C19EC9306D47760211C4650B51CCF133ADCA8B28F2087D2999D418C5739327F2B40FD7891074FBE2A054E78BE9D42> |-/v <1C60D8A8C9B78C669403575833C8C1B14674B390D764957989B7FCA39046F88EAC215F3348F64657FA41BBBD2D5465C3FAEC5C4992D77A70D6D0FF5B9FE84D58B8A01F974B26A648270BCBC3DA08E1FB6DCB4BD59931217BAC36EE05C15D6C9332DAEE553F44B623DA84A3E35E45703CEA683F59CB5D7DC58019327FAA4690D7E0848C4054F367D2C3BF6371C99CA6751F50C10017AA2754321B985E8B60B10B9F082539BC1A53136644081D5FD9AE168FC766A25A8946C2> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 102 /f putdup 109 /m putdup 118 /v putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L 2{/.notdef}rp /O 6{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 261.443 mo(matchtheobservedmeanterminalbranchesforawide)[8.30181 4.9813 3.87446 4.1484 9.39079 3.87447 5.53525 8.2729 4.98131 5.53525 3.92918 4.42735 3.90228 4.97932 4.42735 9.39078 8.30182 4.42734 4.98131 9.38081 3.87445 4.42735 3.9023 8.30179 2.76764 5.53525 4.98129 6.62317 5.53525 3.90228 4.98129 5.53525 4.14841 5.53525 4.42734 7.77475 3.04462 4.98129 7.75778 8.82687 7.19498 2.76761 5.53528 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7883C479D21448351655B078B2EE7FC4AB870B30ABB2ECE71900D713116AA68AA3A8AA75B1A204BBB1D4D6949603848F16137F6446D5C9AD6A8B68CD49177C15689A88768A63F7C85519618040546EC25D12D8433EB30366989796CA8862F98C4EE3C1BD42763DC576D> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two 205{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 261.443 mo(2)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 272.402 mo(rangeof)[3.90228 4.9813 5.53525 4.9813 8.51202 4.98129 0 ]xsh%ADOBeginSubsetFont: YAAAAA+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /YAAAAA+CMMI10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI10.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 114 /r putdef/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 453 466 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/r <1C60D8A8C9B7784785BA933B683516E90CE9BA44EE0AD4F9389DB0FE469800FC3E28873D9258115E0458EFC365CCEF56682184C482125DC01A539285E10445F4534E20E8D0EB40B3D4233CE15FD988201C2047B01E957E08B822EE3732A9F139E7F02289BCF38C117B85ADC425D90A51C1BB0D78A3069181F2B1A441B41684209DF543606AE295EB1AD8E9C1C8DDC847E6CE42266AC25FB6F47EE50E72B02B7F66908EBA> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBUSC+CMMI10 /YAAAAA+CMMI10 findfont ct_VMDictPut/YRBUSC+CMMI10*1 [114{/.notdef}rp /r 141{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf14.793 272.402 mo(r)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B6E3FA234780EB1A04772A480C0BA74E47A01736C3330B79F94973DD24567A876D5331B1C1E5BDF74D24451B47112EB46B9EF65275AA4A1B843B86074DC79A6CD0050A641BBD3D76F6A280A01B662CF540DC44B0244BA42328D0C0AD1033AC62F401A3DED6A2DEA6245CB4859932AF05637597C673C1E4554E6D1A85B9A271FFDD6802EE1900EEE3BF3FB1C692903A5561AF31F20EADA5B95CF7CED21BCF0DCD198120A75B66796A207B4ED846B6C8BCEB6AFE688E2BBAFBC7E620BB69A3B9327CE86F09F7F62A63> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 78 /N putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L /.notdef /N /O 6{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf23.65 272.402 mo(values.Notethatchanging)[4.70036 4.98131 2.76762 5.53525 4.42735 3.92918 6.86226 7.47194 4.98131 3.87447 8.51201 3.87447 5.53525 4.98129 7.95914 4.15836 5.53525 4.98131 5.53525 4.98131 2.76761 5.5253 0 ]xsh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/lambda <1C60D8A8C9B7F44A4516FD5182673257BB2AA93B3AFC1C0AB39AFEB7D4DC9C128E26263CC14C360DCBB92B58BA5CAD00278A7EB45D3C926592F2863FBBEE111C5ACD19DCA23E0A40DA96F8F4ABEC0CDDEE49A9B2B25B3CF20133C8C2DDC3E657FAC1B793DD2399D11A20378D968A313EA56468657298A8760C> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 21 /lambda putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 92{/.notdef}rp /r 141{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf146.6 272.402 mo(\025)sh%ADOBeginSubsetFont: ZAAAAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSA+CMMI8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/a <1C60D8A8C9B7E7C1D918A3B15153CA6B5BE26AE31C56C5E8EA147D01C98368E0C774FEAB8136CD368DF727E03257E5108BF84C2D8D8BD9710B792E65504AE02BFFB732B2935D897B359F51D188DDD7C8496A2490461FC4585D3CE7BD48C41FC35A3D5C9D095E8DFCC2B54439D2B6C3F1E218533BDCF0B13CFA530C61605C86AA1F97863E14F7B27D0446707834C59B38D21B8A32336B60DFB978E5A44F1D23522E972F9658B60ED49D68A3FE186EF364D06B75928D07F32B> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSA+CMMI8 /Encoding getdup 97 /a putpop%ADOEndSubsetFont
/YRBUSA+CMMI8*1 [21{/.notdef}rp /lambda 39{/.notdef}rp /slash 35{/.notdef}rp /a 12{/.notdef}rp /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSA+CMMI8 nfYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf152.411 273.897 mo(a)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B790A84D73DFE4D381CFD68735E4475645A4E53BCF7DB579C1AFDD13D1A6F15CA06B47ED1C3E1B244798306364BC5CABD6DA63519493A5C659BC60B5447F0104F114BE694DF580105735E360631FEECD6EC7A012CC851718281D07B0CC157A8E7B5931B7103AE94662442B62C7C336402079CFF632ADA590C0779C308A1FCAF94180306BE01E5D89C2BD042F11A347AFB582199E7E84F8C797ABEE0EDBB75C6E1AC5F4E76437DB6ED4E096E1BDAADA422AEEAC70BB94A61E61EC7C901D077227549E6F61C4273BAEF20A141FBE8FA9A551273E39D70B> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L /.notdef /N /O 6{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf161.494 272.402 mo(simplyscales)[3.9292 2.76761 8.30182 5.53525 2.76764 9.34293 3.9292 4.42734 4.98129 2.76764 4.42734 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7883CBACD30F9385AD6BBEF69616630964E70D12F5893D6DB4A79055CC5704D8CFF9199256C9D3DB270032D920A92ABC93B684A09DC9AF25C824AC74D31847B9735093856E0CD2AE14CD0880BBCF322A51EE44AC1F55102EC8ADCF72E1082A0866C157B4164946488F815FE47A1819EF7> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two /three 204{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 272.402 mo(3)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B85744148CA332B8493D4AA74EC0ED15A645BB097A03BCB0F035B963033C1DF7BD2D48E65E6103A6E43630254BF33A6D7E1B7340BEC9334288A8D805FE5AD1AC9173E2E18AD17AD4AEC5661EEF946D3EA40FA8C5> |-/x <1C60D8A8C9B78C669F28CFA812DED67DCEB62F17AD12F7D7900E6AD3161B3BB6A9E88D307B5F8CC0D753B8AC565B099CC0ACAA4A7CA31F2811E297F44D0DEB72F7C315759FD2E63382EDE3061A24E5309BEE98D8290B6BC9B628BEBD7F7D73F1B5EA640583D87E4AD24CB7F7908FD9A3DC9303785637F3B203908DF84330922688D7A03D094D4EF700DA6BD8427088868109E238A57C22F5759A9FC99E5C3C3F2D6B15D44C534041C741DF56BEDC796180345856EA6BBC1BD98F587E929532F631C96BE91F404EF68AE1203A5AD95C9FFBED9A1E5A7A1275795AE78846990825436FB611A109B66853254DCAC13E4C6298C531E7AEB98A1184600057B10A9DAB09484AF36A38858BAF4BD8E53752011A5652B9FACEB6B61F17736A8E4776835DFBDE552410043F2D535B01DBC3DAA1EA0A782CE3B35114AE12> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 44 /comma putdup 120 /x putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [44{/.notdef}rp /comma /.notdef /period 3{/.notdef}rp /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L /.notdef /N /O 6{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 283.361 mo(alllengths,sooursimplesimulationshaveexplored)[4.9813 2.76762 6.79252 2.76762 4.42735 5.53525 4.98131 3.87447 5.53525 3.92918 6.78256 3.92918 9.0062 4.98129 5.53525 7.92719 3.92918 2.76762 8.30182 5.53525 2.76762 8.44228 3.9292 2.76761 8.03284 5.53525 2.76761 4.98129 3.87448 2.76761 4.98132 5.53525 7.94412 5.53525 4.70233 4.98929 8.44229 4.42734 5.25827 5.53525 2.76764 4.98129 3.90228 4.42734 0 ]xsh%ADOBeginSubsetFont: SAAAAA+CMTI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /SAAAAA+CMTI10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMTI10.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /a putdup 108 /l putdef/FontBBox {-35 -250 1124 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 665 667 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [68] def/StemSnapH [22 31] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/a <1C60D8A8C9B7BC12CC2205AD3A22AB83F2BD3595B8CEED9F984C44E12483CB56A1CF945A1C8490192AF8E401942F0174B32370D533C283A49AB9B80655BCE26E16F9146EA94E57B3A2A355AA2AFF023EC6FC12243EC5C0BE4A887F5E0CBD9503F5DB92C5D9F7CDF6B92D29B66228A1F4C5088EC756E9C9AD00068087C76355271F6CF86D0D1AC211D7FFB9160ED5FD10C3D747E9FE07DE3F53960FA37FE0764CCF81CB0185CDBC673B50F49DEDC390E3E3E93EC082DE36415CA9F2A69D65CD5F766AE71CA25060C4104854B8C97FFA393989853A62D7> |-/l <1C60D8A8C9B86D0BBD5433E214DDD0A53EA3E9190DB570F3D042A4281E41216E39384102CD82EE7BE54AF1B92021B51198238CD476521C786F12701CBDC457AAC473125EAD63A8A2A035A6F1E2B590EA7D0B0058B5DD54C6A4EA21CE215CAE4C8BF1B1550FFD68981399F8F263BD6AF971B8BBF56FDEBE3820D2D4323294822D332FCE6B47FE645D> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBUSD+CMTI10 /SAAAAA+CMTI10 findfont ct_VMDictPut/YRBUSD+CMTI10*1 [97{/.notdef}rp /a 10{/.notdef}rp /l 147{/.notdef}rp]YRBUSD+CMTI10 nfYRBUSD+CMTI10*1 [9.9626 0 0 -9.9626 0 0 ]msf207.91 283.361 mo(all)[5.09183 3.05453 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7883C47E52F83F2DD71F2DE70DF48AB7D09A7B2C247732403D577AC83B8C752E8FEA81FA3E89623E6342034E2A29BE4CE35B9E663B9145B89F8F7547931B84BB349A6F99E> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two /three /four 203{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 283.361 mo(4)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B737EC27E43BF1977FE17AEB7DE778CD9D1D3D9164F271727AA0A52834106DB6D5C2AAFD94AB31812D41894E82D13A11FDF4155F02A6615144E05EE47C8795E8E89CE29B723AE08221B1DF3C5B4817E44D18CE1598A5DC2F98DABB2ADE3D131ACFA2D3D56E> |-/hyphen <1C60D8A8C9B81F2C3AF48BE1F128682CB71E9BBC932714B7AB24E23905FE> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 40 /parenleft putdup 45 /hyphen putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft 3{/.notdef}rp /comma /hyphen /period 3{/.notdef}rp /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L /.notdef /N /O 6{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 294.32 mo(freeparametersofthedual-birthmodel\(albeit,onlyfor)[3.0446 3.90228 4.42735 7.69508 5.53525 4.98131 3.90228 4.98129 8.30182 4.42735 3.87445 4.42735 3.90228 7.19691 4.98131 6.30237 3.87447 5.53525 7.69507 5.53526 5.53525 4.98131 2.76761 3.32053 5.53525 2.76761 3.90228 3.87448 8.80298 8.30182 5.25027 5.53528 4.42734 6.03534 3.87448 4.98129 2.76761 5.81421 4.42737 2.76761 3.87445 6.03537 4.98129 5.53525 2.76764 8.51602 3.04462 4.98129 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7883CBACD30F911D8EADBA8A4CA69B0974D719BE478FAD94FAB1CED5FF4BDE6D0C321D01E1F6787459C611C8E163D1A471CCC45A024560EF8D9E7884068AD76612CFF18DD5FD045510003EA333507CB470A02A091449E488A5744150C6698038487> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two /three /four /five 202{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 294.32 mo(5)shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 306.559 mo(r)sh%ADOBeginSubsetFont: GBAAAA+CMSY10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /GBAAAA+CMSY10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY10.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 50 /element putdef/FontBBox {-29 -960 1116 775} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 0 683 705] def/OtherBlues [-135 -124] def/BlueScale 0.04379 def/StdHW [40] def/StdVW [40] def/StemSnapH [40 56] def/StemSnapV [40 56] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/element <1C60D8A8C9B64FAD2EF2B8851D1968E5D029958E40ACD5147C40741E22A1237398886102D9E824068CF8CCB984BE3805C3EE450A9950F9ADBD244A087E2AE7BA5402D250A2547E9B9000BF371B31F9A1575410E09C98112EBDE784B50FA20B3F67AF0A9C97E9C2EA9A7FD1BDD7C5C4> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBUSE+CMSY10 /GBAAAA+CMSY10 findfont ct_VMDictPut/YRBUSE+CMSY10*1 [50{/.notdef}rp /element 205{/.notdef}rp]YRBUSE+CMSY10 nfYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf-19.354 306.559 mo(2)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C12484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF025DDA723DD68103C537890571B4B95BCC242A78DD7EA0DA80E91751ED6DEA668D97ECF27E58978E82B8932F2635747B0D240AA> |-/bracketleft <1C60D8A8C9B857441457F48D14F3F47B30BCEFA5B1BB16AB48A411FDEDDBBCA4E8659FE72DCA596311382BB6> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 48 /zero putdup 49 /one putdup 91 /bracketleft putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft 3{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L /.notdef /N /O 6{/.notdef}rp /V 4{/.notdef}rp /bracketleft 5{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-11.605 306.559 mo([10)[2.76762 4.9813 0 ]xsh%ADOBeginSubsetFont: MAAAAA+CMSY8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /MAAAAA+CMSY8 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY8.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /minus putdef/FontBBox {-30 -955 1185 779} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 0 683 704] def/OtherBlues [-138 -126] def/BlueScale 0.039625 def/StdHW [46] def/StdVW [46] def/StemSnapH [46 64] def/StemSnapV [46 64] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/minus <1C60D8A8C9B6AF0419502F0B46EFB77EC38C01C2E25D7B0EA39836426B430D970F7BA4890A3369B5894E1D421F84> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBUSF+CMSY8 /MAAAAA+CMSY8 findfont ct_VMDictPut/YRBUSF+CMSY8*1 [32{/.notdef}rp /minus 223{/.notdef}rp]YRBUSF+CMSY8 nfYRBUSF+CMSY8*1 [7.9701 0 0 -7.9701 0 0 ]msf1.12503 302.943 mo( )shYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf7.71103 302.943 mo(4)sh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B85744148CA332C8F6F1C9DE6B352F8C512D68BA1E31426FC0ECC7A922246EACB7A924151A79EDFB3E3451BD87933C27475FAC0D74CB8267D592363D57178D8C03E491CE91E57E08820A621E0AED28> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 59 /comma putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma 54{/.notdef}rp /r 141{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf12.444 306.559 mo(;)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF226302CB703517021A0DB54938D38A906781CE143685A42358F6D26C1E58529BD5B1EB56AB64CAF39716A9479AF082DEB3A49B0B9FF06175FD4C622795E8AFACAE24D77E337BE03FB99C4AAA689F9E967FCE15709E3204C4D> |-/R <1C60D8A8C9B615D12DC96511BCDF86E8A7C75693A48984A0E7356B506A1E15B47A94A73C653189B6B5BD65FB5FD80494A93ED537A0F09ED1A8D7E99F236C312E766AB94701E7DF4C5D2A60F4FD92EAE94A3954DDA379326F222414F1DE7C4AACE6D4DED1720B0E27193BD7C5EA0E3BA2CC71AE1473C45D199A12EC2BADFA899FEA715987353E3C7215E3A7FAC395D71EA8789DE2ED7766F94B55DE6CADF8918D147A0B2E013795A64EAA525827FF34103C3300ACB3AA71F9D25FB8DACE8C183EB9D5D1CB14AE41492D4FA0E06AFE19D1D845A5D9B7C1D57AA6016B555070D6E922D376B26646FEF8B92A7CC134A4CEA68E0101BD25C8C1C5F54B53F4976893EC3DED988EEFD4> |-/bracketright <1C60D8A8C9B857441457F48D14F3F47B30BD99EBE2CD4840CE39569BE9FF8DDD4604DD868D11B34C9C90BD70> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 41 /parenright putdup 82 /R putdup 93 /bracketright putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 3{/.notdef}rp /six 15{/.notdef}rp /F 5{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R 3{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf15.765 306.559 mo(1]range\).Regardlessofwhetherourconjecture)[4.98129 5.5173 3.90228 4.98131 5.53525 4.98129 4.42735 3.87447 5.5173 7.33347 4.42734 4.98131 4.98131 3.90228 5.53525 2.76761 4.42737 3.92918 6.6689 4.98129 5.79428 7.19498 5.53525 4.42737 3.87445 5.53525 4.42734 6.65198 4.98129 5.53525 6.642 4.42734 4.98132 5.53522 3.04462 4.42737 4.42734 3.87445 5.53525 3.90228 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7883CBACD30F679EB43AB3BC2E0FAB555C45F2D69832D8F1322EB199F3902FD6A5A24BAD9F3C713D1EE3D899D4F9ED0DB75A1F416C78BBF8431E7377B9672F77D49F048A9688700E60CDD141910086B803A56A3D95DCAB2C8AC8A724B759E9FA9EA09621ADED4C17D6E6733345768209A842A0D6D2EE2206A24059D83E99522E57142BBC17A0BC49C23> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two /three /four /five /six 201{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 306.559 mo(6)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 317.517 mo(istrue\(whichcannotbeprovenbysimulations\),theclose)[2.76762 6.2704 3.87447 3.90228 5.53526 6.76856 3.87447 7.19498 5.53525 2.76762 4.14839 7.87646 4.42735 4.98131 5.53525 5.53525 4.98129 6.21567 5.80424 6.76855 5.53526 3.90227 4.70235 4.98929 4.42734 7.86652 5.26624 7.58954 3.93915 2.75766 8.03284 5.53525 2.76761 4.98129 3.87448 2.76761 4.98132 5.53525 3.92917 3.87448 5.10883 3.87448 5.53525 6.75858 4.42737 2.76761 4.98129 3.93915 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7883C4DBBEE7651522C203A9CD577A7F44C212AADA26DE79483DB4BA84370C5052AC85CC536E8205353FB4CDCA27D3BCC5CC873EAD63D96B5E2D313D6> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two /three /four /five /six /seven 200{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 317.517 mo(7)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/E <1C60D8A8C9B65DE708408E894B780C980FB3CD0F5A2C0BEF23E5114F36C909584A712E7AFDDA2F26FF878CC11EDE914164339F97B59F3659C5E3C5144DA79350C562BF05A1FC95A59765A840A579FDEA86DCEB7F99647561868501F99D35BFF4F16CE8CFA6310AD24B7256C45B06ACB6DF245FF3654675E2E019899536DE4452B0D6D01DB1C11617465A> |-/q <1C60D8A8C9B78C66EF5247F5707C9C7401D463F3DD83C2E21DFAE96BA5869F86EF6F51AF0B5F762AE3BB0D8E1C7478B2802678D1830DC7ED9855E0146DF253C5040BF957DE781BFD2649856A22B81BAB60DE0851507882D2678BCCF4FB73FA11E61E10F9FDE35F239CEBF1BA14BA289F2351A51B0529E375EDA96C3901BF06DF76F1DF130B9C42F8C080B5241230FBA0F56D04C3DEED8F2B384970176DCFF7B73356B0D69453B4B4B22EA1DCE13756B7E36E6D00D130EC17FD408B948E6F6DADB60E1BC224E21D91FA057FD171AA> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 69 /E putdup 113 /q putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 3{/.notdef}rp /six 14{/.notdef}rp /E /F 5{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R 3{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 328.476 mo(matchofEquation)[8.30181 4.9813 3.87446 4.1484 9.60996 4.98129 7.11931 6.78056 5.24832 5.53525 4.98129 3.87448 2.76761 4.98131 0 ]xsh.930816 .793027 0 0 cmyk
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7A73D3B2C65B72E385362D3FF7D42FC1474C3A39537FCE1B11D49C7F4AB33C92C477E32DCC2F1BD151153AF4EE29C83442C1DFE7C2987EA59B8FDB804F00FC474C14A4DFC5A3D044493631292AC23CA9773EED32B6950E181E1AF2402423A225C4B964BA7C80C0A352DE0DDD502> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 3{/.notdef}rp /six /seven 13{/.notdef}rp /E /F 5{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R 3{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf61.5633 328.476 mo(7)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf70.6193 328.476 mo(andsimulatedresultsmeansthat)[4.98129 5.53526 9.59999 3.92918 2.76762 8.03282 5.53525 2.76764 4.98129 3.87447 4.42735 9.59998 3.90228 4.42737 3.92917 5.53525 2.76764 3.87445 8.00391 8.30182 4.42734 4.98129 5.53525 8.00391 3.87448 5.53522 4.98132 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7883CBACD30F93845E8E4FFD3BA95184399EE9CBBA7FB81F89D5E8AD1DEAE0D53A26968E620DC3450183C92B4C2823915F4D2E75C69972BC62E22481598DC99585CF341106232D18D969461EF9C01C6EAF0AB2B36ECF86B240242EA97C5523F9360209BDF5409B4B025DD36B6929BA7244B2FE22D613F327A9463CFD8A38CEC> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two /three /four /five /six /seven /eight 199{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 328.476 mo(8)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 339.435 mo(wecanuseittoprovideanapproximateestimatorof)[6.91602 7.75485 4.42735 4.98131 8.85278 5.53525 3.9292 7.74489 2.76762 7.20198 3.87447 8.29884 5.53525 3.90227 4.70236 5.25827 2.76762 5.53526 7.74489 4.98131 8.86275 4.98131 5.53525 5.53525 3.90228 4.70233 5.2583 2.76761 8.30182 4.98129 3.87448 7.74487 4.42737 3.92917 3.87448 2.76761 8.30182 4.98129 3.87448 4.98129 7.2298 4.98129 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf209.637 339.435 mo(r)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf214.409 339.435 mo(.)sh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7883CBACD30F9B872676EB842292BDEF11E3B363F736459EBA871FEAABC60F31708CDE2830680E85D3C6A47F799DDF25FBAA7A19E4AF979352C0CE441A0CCBDE9468FC3ACB293E8BB4C55CE94E04E6C1E8B5D71C80B3DDCFF11876F5DB328DFB0F467DAACC4254002EDEFCAC444F81BAB9E75B0EBE587039EA4C20A5B82B67A5386AFA94A60BBE019AC581F44351BBFAAA70C> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 57 /nine putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [49{/.notdef}rp /one /two /three /four /five /six /seven /eight /nine 198{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-37.841 339.435 mo(9)sh%ADOBeginSubsetFont: SAAAAA+CMTI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSD+CMTI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B83844B71BD2AE080BFB8F854F0822D32663F4C108169A937A2928919806E8186FA4899DAF> |-/P <1C60D8A8C9B65B439BA4FB6FFB21CDE17E388830ECF475AA2A426464401A6D41A894B6E250AB79CB47479B561FF8E1BAE7355A889C41FE634854A6CB332C533A076F3F12A1BA6F946DBAC4F0FB9BC8BA59DE4E90A3FDD01590C18FEB09F5FC6AB8C12C893CB7971C5AD2956CA0AFA079DF4B67457A3F999422C8319705CD7ECCA56A5DED49C61074488259F4319A6DE301A10113382F9B9134E939D4DBCBCB57686A2194DDD756B9378462BFD5AAD24B55071FE0297EB4483B328C6316641B73> |-/e <1C60D8A8C9B74F361570F61A35EA78464894B1DA8CAD69B19C3F676A41A6475967ED30A297FEB3CD3D7317CB56BD67ED8BE136EDA10CB5745498DECD970DECEF1ACA52F9039E01C9F5B386033674FAFA84FBC05E576740F2A615DA4003C8F6D0D15EE471656895AD1D665316B1B828EEA1C31E22F55730B1C2314980EB> |-/i <1C60D8A8C9B83844BC5739A2F5E229CCA253721E3B38AFF4581DAE3E28D45D71C78251E058870AC224D69A49B468899A63EE5BB41D75A39B43A7E098D279619911F793AF50A2F69ECF56CD45A7EE26161DCF8ED0306BBC1D1473A4DB595D9E07CA5C49BB373103568B9EE365C5707C2E506CC03A3D37D53B72761E8D6B243E39EEB87AD22EA0FA9863CA31377413B6C1AE222C55955055BACBFF3F7648C105E73DDC153B6FEF326497ECF27B99FCC0713C8AAB6C9CCCFC2DFEED6D9A> |-/m <1C60D8A8C9B6A42636CE49DEB2D32225FCA9494A9ACFDB8B8034FB53659F38D1C3252637DC347F7A180989517839433C475A975BF985AC831BBFF4ECCBAA4558F2DFBDE3F4E6DBD880D12BBA5647F46286224585E9262BC1F4C7A9C887DF4BC8FE39141C0B0F966829F341864D3DA0620EE855BF49AFC86180D524A4A9A86ABA39CA1C71F02EEE187AEB239E6DCE742C2091E1748F9DB9464A768CC8D4CE677CF5B9680095934BF64779EB6FF4E3E7032B42C29A3A90FB96FF1C128EA9BAA5D1FCFA4B821C6E9FDC1247EBAD775BA4CD9A687AF882231D8413607628EEA07E40BA4AD807C5A39C4191B4ACFCFD5C5EEDCFB5366786482F2E1363EEBCFAAB7F70599D01B0110111FEA0627E391524DA63DD3655F37BC2A6B5CE15F87D42BD> |-/n <1C60D8A8C9B7E965DE634C8C36C9FF3F587895373875B3A7CAF8D08B9A4AE5C403B478C7C19B93D1709BBB3954853D4EC36EE68AC9CD7AC80CC2992770FD6BDDAED41BA84AFA894EF644B1E3900E46760A7359AFE74E7E389F03EDE96370FD466BFA3C5694ED822B7F412BDC4EFA0AFFE79601DD89670C229540F12A601336580BEE2B4C9D4274878590B4EFC788282A2AEF1A74C404FAE83E8E77FDB1C9E32110DAAF41B1DE8C9EF50B94FCB8A891698A7A650CEFB90D90B83B27E869093EB40C3E7E20159F596321A653F4676289EC> |-/o <1C60D8A8C9B7BC12CC2205AD24A1CC85ABDF6C4F0484D46E9F8D26FA5319F6A3FECA2702F2F444DF0FCB9A5563080683AF9C34F9B0732DE0FBC33259081B6E896976FB2F025861FB2E12BF0F193B67C4211AAB050959D27D71CEE3AE8382246B820B9065097F18> |-/r <1C60D8A8C9B71648373274E9A3D0C288B8D6B0EF7DFA2CA51E61C9BFAB57EA43A143B8252CF24D9B71B74A24405B3A46FC5CD55B0FF41705A504B9275E430357F5210EE225BFBA128D41CA182082399B40332E94DA354D02FC882579BFF619FE26BF0DF7F9DE77F45EE12CFD7F74EF06FDBAA7F8CFB5BAAC04827763B4556AAB6359E2E508EB1CB21448BA8E206685309A50E9AAE1> |-/s <1C60D8A8C9B703FF51C80F8614142C25C5B0B13140C79DA0E794B810074E117974F1ADE0C6FC4A14C0098476317BAA9C9644BAEB6ADC69DDC42593D643339EF961CD44D36A5C749456ABC9E9B0529255DC2D84CD27F10EBC294B156942958B4B384D1BEB53F2F1D391FCBABD481E25F236A4343E38B83B187A22F5CAF64A874D007F74738A69C694F83B1B0DD32C7238AA073DBE7616C40CF6DBE1912E6C09852B66AA25557D4B07C035D1455B65001C254F21840862771EEF93CE7ECC3A8DD0> |-/t <1C60D8A8C9B81E5FD300717567274A1A29F39DB53FBE241AC750224746B42D737842953D7D252F6F1D06CD4462A4C1FAE00E115E33A76BAE54709704BB81E3CB97DC57DC89C663657A656B013B00CAED2B6F710CA066AF8EB5CDB847058704BD41DD458FAED4AF177A1B2392603D1D03A0423D8EBF0A2BD809A27F72CFBEF2864D0D6BD1DD4AE7AF9404> |-/emdash <1C60D8A8C9B5005F730E37F6C783ABFAB9E72DBDC64A364A42D7AD7D9FCCC859D7EC909FFF12D1CDA4F6444BC12D17> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSD+CMTI10 /Encoding getdup 46 /period putdup 80 /P putdup 101 /e putdup 105 /i putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdup 124 /emdash putpop%ADOEndSubsetFont
/YRBUSD+CMTI10*1 [46{/.notdef}rp /period 33{/.notdef}rp /P 16{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t 7{/.notdef}rp /emdash 131{/.notdef}rp]YRBUSD+CMTI10 nfYRBUSD+CMTI10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 367.348 mo(Parameterestimation.|)[6.75762 5.09181 3.69321 5.09182 8.14736 4.58287 3.30956 4.58287 11.3744 4.58287 4.07376 3.31953 3.04556 8.14737 5.09183 3.30956 3.05556 5.09181 5.60092 3.05554 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/T <1C60D8A8C9B6079F3ACD50B6173265EE696B04F433123BE8FE6957F3B6028924B7831F62749F61057E47C9AFC439E5FE9774BDBA95D8780F15E99A2D6DBC842E367191628A2E402043835AC8FDE6AB93164DF41C7446FAB279D3EB9C66121877CB11D6A7077E1EA3F211DD4775AFAF95572B45BD0445F00DE2D6FF03CC09F95A7375F8A1A506648567695D81EAA6869AE211E13B3028937B3B39284DCE> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 84 /T putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 3{/.notdef}rp /six /seven 13{/.notdef}rp /E /F 5{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf95.925 367.348 mo(Theorem)[7.19498 5.53525 4.42735 4.98129 3.90228 4.42735 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf141.948 367.348 mo(2)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf154.182 367.348 mo(enablesusto)[4.42734 5.53525 4.98132 5.53525 2.76761 4.42737 11.172 5.53525 11.1819 3.87448 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSB+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7883CBACD30F67524603123C94ACF1266C6D43609E84B52BFCC315F5FC5AB16BEE83EAA8D8F11D9F3FFAE608CAF190616F90729F2FD97672991410C5F02EFF6708D830348D9ABBD6955CC6575B79C2D9A906112F330CA55075BB6658BBC00E92BC0198A8B76F727EBD19E05A88841223D8A4E1AB5D8335D8ABC8E38940FEFEB0A8E> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSB+CMSS8 /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/YRBUSB+CMSS8*1 [48{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine 198{/.notdef}rp]YRBUSB+CMSS8 nfYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 367.348 mo(10)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 378.307 mo(estimatethe)[4.42735 3.92918 3.87447 2.76762 8.30181 4.9813 3.87447 10.5145 3.87447 5.53525 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf37.363 378.307 mo(r)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/G <1C60D8A8C9B6C5CA50BA1A66B0ED58C9A27CC1684A535A4AAE923AA869469B9FB1E98E8E911A6B68D071D9A9C53B9EA692748987A65C86386EDBF1DC70F64BF40FA829872071155D2EEF287FA3F412065012D7ECC6A66BEC3F9115F8F2B744B6FDCED55D0AA61445F9E82DBD8E663727CBB905C20DD0B57EE3C58C71FBD261064D2534E005C7403CDFF8F45F8CA19540B5E742E2C392DF93DEF0F5DEAFD77D3EE1270EBF8C86EDAFD0C899763930BDAF6E95FB83A7C6FF21F91FB9F4114AC07B82F3A2368EBE8C4CF6B8F681F436D5496509EB99DE62F2C39298D13A5FC8117BF4675C81CBB48E290A6FB33819> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 71 /G putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 3{/.notdef}rp /six /seven 13{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf48.221 378.307 mo(parameterforagiventree.Givena)[5.53525 4.98131 3.90228 4.98129 8.30182 4.42734 3.87447 4.42735 9.98943 3.0446 4.98131 9.98943 11.0685 4.98129 2.76764 4.97931 4.42734 11.6224 3.87448 3.90228 4.42734 4.42734 8.87469 7.81766 2.76761 4.97934 4.42734 11.6224 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 378.307 mo(11)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 389.266 mo(treewith)[3.87447 3.90228 4.42735 9.50828 7.19498 2.76762 3.87445 0 ]xsh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B76BC2DCFCFADA1B88FA716258F5F9D1103004934E5136D5B2F536E49552ED71C4264BEBD571AA34E07B2E10C5167B1C00FE390786EDC9D41BE313C189C9D7DC3FB75AF15174021A1F865304F3405D0916E21023E63DDE15C90E4C0E0252C9262F4EEEFDA44397E14FE0E739E1B68DE75FFF816AE9CE6F7E460A0C> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 99 /c putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma 39{/.notdef}rp /c 14{/.notdef}rp /r 141{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf20.934 389.266 mo(c)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf30.326 389.266 mo(cherries,andfor)[4.14839 5.53526 4.42734 3.90228 3.90228 2.76762 4.42735 3.92918 7.84856 4.98129 5.53526 10.6162 3.0446 4.98129 0 ]xsh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/x <1C60D8A8C9B7E02ADD9A961EA85B11A4D6AE8E5FF47D0FB2B207722E94549CFCF90B2994EB4018DCD72707FC7E657C1357774D6ABC659E4BFFA1BAD5815143126640EA2DAE45CE146667BB09E3222C5B2BE1809001CE57FFDA3F8C3B30B286B230357F5F955C9F57E2989850ACB5C1C587977554FAB8160F71D5F85970C922D115B7642513052A5260EFE973B9D542C18F64EADFD1C5FDD09160C3DC94D47F2CD7AE4851BB3D04487C33689E9C61C71A12B0085775C7E4FAF6B3AF6BF212F2A47B39735F454DF875687BF642E91EEAEBA7EEB2> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 120 /x putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma 39{/.notdef}rp /c 14{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf109.36 389.266 mo(x)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/equal <1C60D8A8C9B6FC2D989577693E56B5D5D9CAF0920CAA1C7CAC692E5993F0507AA10E6DD4C22E48360AB64AABC8F79D72A37E3395EFF87B7331B16AA5497F9A03CF7F30718A4F8E51FE4C555962B834> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 61 /equal putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 3{/.notdef}rp /six /seven 5{/.notdef}rp /equal 7{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf116.161 389.266 mo(=)sh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B7A73DB56225352A24C6E389DE2B55CA07FB5710C6DCAE04F94BC5CAA5785E17ED28271B55834262FD3846E502CB37AB886C6947131546D475C5E688F02E31C309> |-/n <1C60D8A8C9B7C3C99592073C380D5EB33972B0E7A1F7696CFD3BFCDBA36E74B12788DB1F09B52B587438F5C7126CC3F9331B76B411552DAD88FF5B2731FB8A30D4039054DE7881FD1040B3AAA0067A7F268759C5B8FE71C6C640E6CFCCBE79D4AF27DC6E5B0A2255251E501D4B4B538B55ED267C22906901AB7EEDA3069DF42F6AF99C860F98E5A2449D9A147D2C1F90CFD8CE9D17F947C6867C8C175E341343B07E6C856BED2AB83F9AF1F2FB39E3C5A2A0DC4339E7026D740FBCF796697562554331A7ACC4FBF70E9430AC085F22816D98AA26> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 61 /slash putdup 110 /n putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma /.notdef /slash 37{/.notdef}rp /c 10{/.notdef}rp /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf125.016 389.266 mo(c=n)[4.31181 4.98129 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf140.289 389.266 mo(,solvingfor)[7.84854 3.9292 4.98129 2.76764 5.25827 2.76761 5.53528 10.0622 3.04459 4.98129 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf200.449 389.266 mo(r)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf210.301 389.266 mo(in)[2.76764 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 389.266 mo(12)[2.64655 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 400.225 mo(Equation)[6.78058 5.25827 5.53525 4.98131 3.87445 2.76764 4.98129 0 ]xsh.930816 .793027 0 0 cmyk
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73DC579B9C1587087D4749982A674065FCDD01CF53F54AF89DAF22339F0A467CEB54960C4097888AD7CBC676C4076733D124E7B4C79B6D0E020E27E56B7A34848B450E2A23F2DF3103BCB5E75D289FAF3FD67A12C99B2EB0A8390A7DAB0DD8B7BFBE34B66044D4D46D3CB580B3DAECD8E50CD2549B4550A6A6B131A61C4> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven 5{/.notdef}rp /equal 7{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf17.0823 400.225 mo(4)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/colon <1C60D8A8C9B8574464AEAFAC7C68900D93273DA49162F3A5B8C16D30B96C6FD4E30E80E1F78558AD2540B994A3F8C4499D90D9C7B92969D703EA7177FFCAE7C73BA4F83773> |-/S <1C60D8A8C9B790A8C3E1550ACC8DA9C9FBD3A5CF2194CD2B8642D81A716BD00E790683F96881FACDE1F9315D62E9690B60701D527468B87CDFB0F4764C5597556AE6A1AC77EAC949F9287197658BC350D110E467DE690E505B49A0B78B79E2357C1B06B49C46DBCFC093C8FD052BE36FB8FD34081A4086AA2F339D541A84930A281511E0A17B9869F6AA55371F1C0D54B13DC306CE1AA830A9CC533AF6BD85406DAA830F9B2385417AD4B282844721D0D07F3AC31F2E4FAB062DE1D98E9BB1ADDC8425AA1837400BB1FE64042CEA44886B96F0827BA19AA957D2008F38EA9B013399E5BDAC4F2A> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 58 /colon putdup 83 /S putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven 2{/.notdef}rp /colon 2{/.notdef}rp /equal 7{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf24.6738 400.225 mo(resultsinthefollowingrelationship\(Fig.S2\):)[3.90228 4.42735 3.92918 5.53525 2.76762 3.87447 6.52943 2.76762 8.14545 3.87447 5.53525 7.02759 3.0446 4.98131 2.76761 2.76764 4.70235 7.19498 2.76762 5.53525 7.59149 3.90228 4.42737 2.76761 4.98132 3.87445 2.76764 4.98129 5.53525 3.9292 5.53522 2.76764 8.1355 3.87445 6.5036 2.76761 4.98129 5.36786 5.53528 4.98129 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 400.225 mo(13)[2.64655 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 411.184 mo(14)[2.64655 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/circumflex <1C60D8A8C9B7A73DB60A8ACCDB3317529757244A8C206C879D463E1B6DBEAF6E2585BBF80C15CD541571D922A24030> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 94 /circumflex putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven 2{/.notdef}rp /colon 2{/.notdef}rp /equal 7{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf22.099 431.622 mo(^)shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf21.65 431.622 mo(r)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf26.422 431.622 mo(\()shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf30.296 431.622 mo(x)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf35.99 431.622 mo(\)=)[4.98032 0 ]xsh%ADOBeginSubsetFont: HBAAAA+CMEX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /HBAAAA+CMEX10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMEX10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 18 /parenleftbigg putdef/FontBBox {-24 -2960 1454 772} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 0] def/OtherBlues [-1159 -1139] def/BlueScale 0.04796 def/StdHW [47] def/StdVW [47] def/StemSnapH [40 47] def/StemSnapV [40 47] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/parenleftbigg <1C60D8A8C9B615D1A737BFFD5379384CFB5C06AA98B2ACD7DA8F6C9D5D92CA441308373836F9F6550C25325BA382C7824ECE2F4F84FADBDE0F269FACBF9072092001369658FA21743F1FE09CD6E41E0D3C3FB9F3C5462CA39D72E3950B16A8D08971A092D79EF9DB561B70B8EA1723A0A948D9DF1D40059D9323EE365189C527853CD55D7BC3D204FF> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YRBUSG+CMEX10 /HBAAAA+CMEX10 findfont ct_VMDictPut/YRBUSG+CMEX10*1 [18{/.notdef}rp /parenleftbigg 237{/.notdef}rp]YRBUSG+CMEX10 nfYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf49.827 417.574 mo(\022)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf58.356 424.698 mo(1)sh%ADOBeginSubsetFont: GBAAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSE+CMSY10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/minus <1C60D8A8C9B6FC2D98F64FA8A84856380510A8B89CD4DE936C2002F9CA66334C70459EFC1D8016D52F4ACC8D584A> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSE+CMSY10 /Encoding getdup 32 /minus putpop%ADOEndSubsetFont
/YRBUSE+CMSY10*1 [32{/.notdef}rp /minus 17{/.notdef}rp /element 205{/.notdef}rp]YRBUSE+CMSY10 nfYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf64.168 424.698 mo( )shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf72.746 424.698 mo(x)shYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf79.271 424.698 mo( )sh%ADOBeginSubsetFont: HBAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSG+CMEX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/radicalbig <1C60D8A8C9B5EE310563FF44DFD9692E058007181E9DAC2DD957CF247E2A6EFD196AA6A80B819C3F11DE30A6628E67375C2BD960F71A7210C6A7E492E7C1398AEF096271ECAB8535A70A0E066BBA977BAC0B> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSG+CMEX10 /Encoding getdup 112 /radicalbig putpop%ADOEndSubsetFont
/YRBUSG+CMEX10*1 [18{/.notdef}rp /parenleftbigg 93{/.notdef}rp /radicalbig 143{/.notdef}rp]YRBUSG+CMEX10 nfYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf87.85 416.18 mo(p)sh.398 lw
97.812 415.981 mo
158.46 415.981 li
@
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf97.812 424.698 mo(\()shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf101.686 424.698 mo(x)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plus <1C60D8A8C9B6FC2D57823F96FCEAA42600BD46AFBB76FB6FF2C168953BCB7FF7D0E7F5CE3217809FB248485B096C8249504CD271987061A868385A7E2BE1F08F0D0B8329FA5B5F11EC03D020ECC8A0457ADD9A63765A60296998F5> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 43 /plus putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven 2{/.notdef}rp /colon 2{/.notdef}rp /equal 7{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf108.21 424.698 mo(+1\)\(1)[8.57582 4.98129 3.87447 3.87447 0 ]xshYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf135.331 424.698 mo( )sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BAAE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA5392FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EFEEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782EDC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F16212D1503559B7B1637726D82590655B813B5B489A6AB087D0B93F61541C20829B36C95E4A39F5BDDBA400> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven 2{/.notdef}rp /colon 2{/.notdef}rp /equal 7{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf143.91 424.698 mo(3)shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf148.891 424.698 mo(x)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf154.585 424.698 mo(\))sh58.356 429.131 mo
158.46 429.131 li
@
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf103.07 438.456 mo(2)shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf108.051 438.456 mo(x)sh%ADOBeginSubsetFont: HBAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSG+CMEX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenrightbigg <1C60D8A8C9B615D1A737BFFD5379384CFB5C096AA47914A1AA4EA35481DD212099FBB088DEF2A89BAD17000D510C31CD164CF33712D5746CA0779A7A4B3D484DE9A4E049DC358C18CB0D5C292BEF7B5F3C675E59CE012679A18CB6EC77FC0FAB58F36EE4ADDEE01E5E563BA3C074C2DDC4AB4D99A8CF36B75BDDC93AC62784BF098091782B66618AE8> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSG+CMEX10 /Encoding getdup 19 /parenrightbigg putpop%ADOEndSubsetFont
/YRBUSG+CMEX10*1 [18{/.notdef}rp /parenleftbigg /parenrightbigg 92{/.notdef}rp /radicalbig 143{/.notdef}rp]YRBUSG+CMEX10 nfYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf159.655 417.574 mo(\023)shYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf166.989 420.331 mo(2)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7A73D3B2B97F1414E4E14F801A059892814FA42E4E2C80EFDA659D9BB77F349463F4A00D8ED33975855544E68ADA715C46B48E5214EC1478071E2CA54580909701967B928DD6D384659775DC9744471AF4209ABE86CCF54E84B03EB8981900A33E230A5E176029A4F3431D5460DA2A76659C526F48B2652E37466C39C5889089BE6A19F3137FC6D1B485B848C27C668BF6C2B18756DC955F5DB5ABF7A74FD3DEC5789AB27D98224E42837> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /.notdef /colon 2{/.notdef}rp /equal 7{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf205.873 431.622 mo(\(8\))[3.87445 4.98132 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 457.145 mo(for)[3.0446 4.9813 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf-9.98398 457.145 mo(x)sh%ADOBeginSubsetFont: GBAAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSE+CMSY10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/lessequal <1C60D8A8C9B6FC2D944F5ADA1723A63EEFB5EFB5A4E3F88F7A8CE8FA486CB3CC01EEA869AD308CC03B9D1111211DCD407425C635963FD7F9150F1FBD1ACF38A1AE4207D9AF152444BD9DD8B01BDE5F620F6CD19263F98A2F18ADCDAC42F6594BB6852F39DF6F7D1564BAE711AAF8D50C7841F847A8032B1E8699602A6648> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSE+CMSY10 /Encoding getdup 20 /lessequal putpop%ADOEndSubsetFont
/YRBUSE+CMSY10*1 [20{/.notdef}rp /lessequal 11{/.notdef}rp /minus 17{/.notdef}rp /element 205{/.notdef}rp]YRBUSE+CMSY10 nfYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf-3.18298 457.145 mo(\024)shYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf6.86803 453.223 mo(1)sh6.86798 454.655 mo
11.102 454.655 li
@
%ADOBeginSubsetFont: LAAAAA+CMR8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURX+CMR8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7883CBAA92B92A60ED97CC7706D34A36348BC2B93805C7C1833580FAA27E95855649C4EE0492E1681D62AEDB7EC0D4D44FE91FF7AD4665FD8D6994E56FB00B47353D8538086D2C46021ADFB3F80264F6C2EF23799D21E81ACDE63FE62C97F7BE27D7DCE3B9BAF5B096FE9F9E10574C4FE3C149B03DD0A59DE10D784DCCBFDFC6D3C5399775DC28DB91A04691B5B8F3D1C009DFAB49BB818D90EA7C1> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURX+CMR8 /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/YRBURX+CMR8*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /.notdef /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURX+CMR8 nfYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf6.86798 460.581 mo(3)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf15.619 457.145 mo(andelse^)[4.98129 5.53526 8.8528 4.42734 2.76762 3.9292 8.20317 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf53.864 457.145 mo(r)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf58.636 457.145 mo(\()shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf62.51 457.145 mo(x)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf68.204 457.145 mo(\)=1.)[4.98032 8.85477 4.98131 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 457.145 mo(15)[2.64655 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B6E3FA234780E51B74F22595A687FBF09EF454D03FB6CE0741835DFEA276F2BD9DA1E567C1E2AA272C9AF9AA6DE082183B6B069F122C69C93CC84C1E2E5C1EDB186833D9A28F18458A45AD6A7572F00011ECC2E09341FD6937B43E501C94208386B52881CD9F0C7EE85FC76CF7DFA415F22DB3B2B926D06F495CDDAB596E2F022F9C4F3C3961AB08783D379F9901790C33B26D5144056789A95EB7D120F2CBD25F8C89DDE84F37EAAE2D7C9D8E52E449BEC2C204B273340CAA6C0D416A62DDFF217CC15AC6F8> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 65 /A putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /.notdef /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A 3{/.notdef}rp /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-15.27 468.104 mo(Analternativeestimatorcanbedesignedbycombining)[7.47195 7.80672 4.98131 2.76762 3.87445 4.42735 3.90228 5.53525 4.98129 3.87448 2.76761 4.97934 6.69882 4.4373 3.92918 3.87447 2.76762 8.30182 4.98129 3.87447 4.98131 6.17374 4.42737 4.98129 7.80672 5.81421 6.69881 5.53525 4.42737 3.9292 2.76761 4.98129 5.53525 4.42734 7.80676 5.25629 7.52975 4.42734 4.98132 8.03281 5.53525 2.76764 5.53522 2.76764 5.53525 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 468.104 mo(16)[2.64655 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 479.063 mo(Theorem)[7.19498 5.53525 4.42735 4.98129 3.90228 4.42735 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf19.1672 479.063 mo(3)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079FE0EE62D79560027BBBCB170A7709037203D620100C78000AFC53792FD4192A63CFDE4C7CCFBBF640912DE1EA497F0D0E9CACF7B554590931F67EC30C725B283FF8701F318F6A51E9DAFF6E43D2B77ABC7C9D046D0346C0BC1B195971779D6643699369A8474D056C5265E53617DA697597540B11F4760D558D2A79BC5EEE54EC8A8FB0679FBAC9400141E54057CB9E273F1EF671A5379A4BB4B27EBB1E02C7> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 67 /C putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /.notdef /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf29.7873 479.063 mo(andConjecture)[4.98129 5.53526 11.1641 7.19498 4.98131 5.53525 3.0446 4.42734 4.42737 3.87445 5.53525 3.90228 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf104.447 479.063 mo(1)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf115.057 479.063 mo(forexpectedtotaland)[3.0446 4.98129 9.54111 4.42737 5.25827 5.80423 4.42737 4.42734 3.87445 4.42737 11.1741 3.87445 4.98132 3.87445 4.98129 8.39651 4.98129 5.53525 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 479.063 mo(17)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 490.022 mo(terminalbranchlength.Givenatreewithanaverage)[3.87447 4.42735 3.90228 8.30181 2.76762 5.53525 4.98131 7.55963 5.53525 3.89232 4.98131 5.53525 4.15836 10.3173 2.76761 4.42737 5.53525 4.98129 3.87447 5.53526 7.5696 7.81764 2.76761 4.97934 4.42734 10.3273 9.76335 3.87447 3.90225 4.42737 9.21936 7.19501 2.76761 3.87445 10.3173 4.98132 10.3272 4.70236 4.97931 4.42737 3.90228 4.98126 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 490.022 mo(18)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 500.981 mo(branchlengthof)[5.53525 3.90228 4.9813 5.53526 4.14839 7.93623 2.76762 4.42735 5.53526 4.98129 3.87447 7.92627 4.98131 0 ]xsh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/d <1C60D8A8C9B7B3D093A5DA22F344125466E8D0134FBA69AA1653B6AEF1AF8F8CB80A17DE6F373F54D15BEC86DD2B0C4F1928DCEC9AD2CBC531A3FA9442BADD64BD5DE854EF788EA4122FAD019E556E23DA6C2BFB96BABCB99348CF6360E1C8E9AD6EA5D3F79D11F01C19320594007512E5C397385890448082CA3D6A2DBBBC2957A5FA0CE1D738A715E9A8F1491B51F14D5FC6CEFFE47A302D922E710D5D854B98204EC69C80D2EECA3B54178DD3ED23184E7DD06BB68A9BC87154E9B2C816290FF5A0> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 100 /d putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma /.notdef /slash 37{/.notdef}rp /c /d 9{/.notdef}rp /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf46.744 500.981 mo(d)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf54.327 500.981 mo(andanaverageterminalbranchlength)[4.98129 5.53526 7.93623 4.98129 7.92628 4.70235 4.98929 4.42734 3.90228 4.98131 4.98129 6.81837 3.87447 4.42735 3.90228 8.30182 2.76761 5.53525 4.98132 5.16861 5.53525 3.90228 4.98129 5.53525 4.14838 7.93628 2.76761 4.42734 5.53528 4.98126 3.87448 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 500.981 mo(19)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 511.94 mo(of)[4.9813 0 ]xsh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/l <1C60D8A8C9B840B0A5D589BDA4C311648D785E3242291920D778475AEECC9F1A47C3B85F0B92FDDC60D6AE2807C1C14CB8BD6DF09FFA084595421BE1DB1550A932603EB271999DB47E6E040FD73D8DD2D1B0BEEFB752DF28288706B38D5832AE2B421B49506BC0AAFB562D2B4AFD32F3D41DD54529A7D3> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 108 /l putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma /.notdef /slash 37{/.notdef}rp /c /d 7{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf-14.883 511.94 mo(l)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-11.715 511.94 mo(,solvingEquations)[5.08891 3.92918 4.98131 2.76762 5.25827 2.76762 5.53525 7.3026 6.78056 5.25829 5.53525 4.98131 3.87445 2.76764 4.98129 5.53525 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf71.8902 511.94 mo(6)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf79.1928 511.94 mo(and)[4.98129 5.53526 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf97.5659 511.94 mo(7)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf104.868 511.94 mo(for)[3.0446 4.98129 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf119.121 511.94 mo(r)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf126.216 511.94 mo(and)[4.98131 5.53525 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf144.59 511.94 mo(\025)shYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf150.402 513.434 mo(a)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf155.398 511.94 mo(,wecandesign)[5.0889 6.92599 6.74863 4.42737 4.98129 7.85654 5.53525 4.42734 3.9292 2.76764 4.98129 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 511.94 mo(20)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 522.899 mo(thefollowingestimatorforlarge)[3.87447 5.53525 7.7449 3.04459 4.98131 2.76762 2.76762 4.70235 7.19498 2.76762 5.53525 8.30881 4.42735 3.92918 3.87447 2.76762 8.30182 4.98129 3.87447 4.98131 7.21982 3.0446 4.98131 7.21982 2.76764 4.98129 3.90228 4.98129 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf117.981 522.899 mo(n)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf123.961 522.899 mo(:)shYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 522.899 mo(21)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf36.996 554.071 mo(^)shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf36.547 554.071 mo(r)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf41.319 554.071 mo(\()sh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B76E37966B5F84C2CE65B00308611EF442ACCEB193BA494A078B1B3B4E0176A87CA980760BCA4189B2A6ACF9CFE5BE3304FD43B30C38AC68AEBA4926CE1D2AE23913CDFD90275A13B65E4D4C8FA5E9EB4464B84B4334CD5FA7173C5045E6BEDFA2DF527CA5A92AAB5AFF8EB0B79DCE0B8AB5D0A7694C76FB5995335F8BC703E49ABA2372ECDA8FC63F30FECF911B2EDCD805C070CE8312> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma /.notdef /slash 36{/.notdef}rp /b /c /d 7{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf45.193 554.071 mo(b;l)[4.27594 3.31557 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf55.958 554.071 mo(\)=)[4.98032 0 ]xsh%ADOBeginSubsetFont: HBAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSG+CMEX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleftBigg <1C60D8A8C9B6CAC29377EB77BE471685AFE3C34651CFDF6B3A039293EC3C6C9D4A3232267AE9912CE9522C9A0ED9DE2D6F425E0DEFD65F5E73A86E777D4080C5D9250B26C322B40B9E7F2A8C82520B43C8944DB4BD72B8E448A8782946A3893FC485FCEC2005061C3B932E7F6363B6DA4A128DC6B1E87D54359B82CC68F9804FD67F96570CA5193DF1760D7C677F095B060497A3403C81F6BBAD27AAE7F47BA385> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSG+CMEX10 /Encoding getdup 32 /parenleftBigg putpop%ADOEndSubsetFont
/YRBUSG+CMEX10*1 [18{/.notdef}rp /parenleftbigg /parenrightbigg 12{/.notdef}rp /parenleftBigg 79{/.notdef}rp /radicalbig 143{/.notdef}rp]YRBUSG+CMEX10 nfYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf69.795 537.034 mo( )shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf77.682 554.071 mo(1)shYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf83.494 554.071 mo( )sh%ADOBeginSubsetFont: HBAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSG+CMEX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/radicalBigg <1C60D8A8C9B5EE310563FF4B3CE3D006F4643DD1317C44B07809284F223F79B38C33BA5FDEFAA55332B94A7E41EBEA2A39BBFD2F1C1741739A8D76066FF4B6CD6E0AD74E3081C5E4FA6C16E85A70125E3EEBD0DD493B6C26AF725E667165893D> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSG+CMEX10 /Encoding getdup 115 /radicalBigg putpop%ADOEndSubsetFont
/YRBUSG+CMEX10*1 [18{/.notdef}rp /parenleftbigg /parenrightbigg 12{/.notdef}rp /parenleftBigg 79{/.notdef}rp /radicalbig 2{/.notdef}rp /radicalBigg 140{/.notdef}rp]YRBUSG+CMEX10 nfYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf92.073 536.1 mo(s)sh102.035 535.901 mo
144.204 535.901 li
@
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf102.035 554.071 mo(2)shYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf107.57 540.023 mo(\022)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf114.904 554.071 mo(1)shYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf120.715 554.071 mo( )shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf130.49 547.331 mo(d)sh130.49 551.58 mo
135.675 551.58 li
@
YRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf131.498 560.905 mo(l)shYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf136.871 540.023 mo(\023)sh%ADOBeginSubsetFont: HBAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSG+CMEX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenrightBigg <1C60D8A8C9B6CAC29377EB77BE471685AFE3CC5991FCFACD871180D079978E90A28F11364115D3B5EB435C58694A1D11368F14F4B85A9D9531E53CEFD9BFA8B8037ED61467D9966994002E039DD0BBF20BF4B3ACF4325AB5BB65AB9BCDD6F9059DC0DE104896C352001EE1E2A2AFA133E9D899C871CD5D7D3DC11346F6D13C2E1D9A60DEA924565F7C3221AE55FC5E89B7C6F2B3110FF3972445B2219CFE563260> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSG+CMEX10 /Encoding getdup 33 /parenrightBigg putpop%ADOEndSubsetFont
/YRBUSG+CMEX10*1 [18{/.notdef}rp /parenleftbigg /parenrightbigg 12{/.notdef}rp /parenleftBigg /parenrightBigg 78{/.notdef}rp /radicalbig 2{/.notdef}rp /radicalBigg 140{/.notdef}rp]YRBUSG+CMEX10 nfYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf144.204 537.034 mo(!)shYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf152.091 538.458 mo(2)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7A73D3B2B97B3700AD7AED0795D43DB5ABA64A35CE8EC855A5CBF20AE28D441242F899F7C2493AF719033D6B385FC121C95EE56A8AC87E982F921115084DE39E9BA3D7A44F69554488D091CCA5CE48FA54B9DEDF323B6058F2C417BA9D8B1544EFE093FFB579140C54032384DB55AB4741347233EB3F0889C3AE9CB13C1ACCD104A4ADC6B007505E3B778FEDE19DEF83A3068F5B724ADA3C344D842CC2CBF224CC820F9BF9DFC7E3B557C2AF89D9733BA75FFB6FA3D5E09792EE955B766D3FBD4F37E75E41F5A464FD3C1DC7611C4A6> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 57 /nine putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G 4{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf205.873 554.071 mo(\(9\))[3.87445 4.98132 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-15.27 581.928 mo(Furtherapproximatingthetotalaveragebranchlength)[5.6767 5.53526 3.90228 3.87445 5.53526 4.42734 6.30327 4.98131 5.53525 5.53525 3.90228 4.70235 5.25829 2.76761 8.30182 4.98129 3.87448 2.76761 5.53525 7.38229 3.87447 5.53526 6.82832 3.87447 4.98129 3.87447 4.98131 5.16861 4.71231 4.97934 4.42731 3.90228 4.98132 4.98129 6.82834 5.53525 3.90228 4.98129 5.53525 4.14841 7.93622 2.76764 4.42734 5.53525 4.98132 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 581.928 mo(22)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 592.887 mo(tobethemeanofinternalbranchlengths\()[3.87447 11.447 5.81421 10.8931 3.87445 5.53525 10.8931 8.30182 4.42735 4.98129 12.001 4.98129 9.51035 2.76762 5.2563 3.87445 4.42735 3.90228 5.53525 4.98131 9.23335 5.53525 3.90228 4.98129 5.53526 4.14838 12.001 2.76764 4.42737 5.53522 4.98132 3.87445 5.53528 10.3949 0 ]xsh%ADOBeginSubsetFont: YAAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSC+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/i <1C60D8A8C9B812A873C68D5B4F2B5E768224EF46878151BB86C5276D36B76A2F589A55C4A5EE3BA699CB4A88BF37C5D78C86C14140FEDFCAF26ED7786558FB4004F7D4D6D6C473392EF89CF6F306E31522AC6282E6F880718CA584CA5F3CF0073D906ABBCC6E22D61AC44BA56F049036466C761D68D70488E4284A0B99130D02240C3784DC91BC2576EE2D8BCBACBD2D3149F4EC97A54B1651F29418DDD69418816B9BD7EE2B71ADCDA3A3> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSC+CMMI10 /Encoding getdup 105 /i putpop%ADOEndSubsetFont
/YRBUSC+CMMI10*1 [21{/.notdef}rp /lambda 37{/.notdef}rp /comma /.notdef /slash 36{/.notdef}rp /b /c /d 4{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSC+CMMI10 nfYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf188.779 592.887 mo(i)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf192.212 592.887 mo(\)and)[10.3402 4.98132 5.53525 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 592.887 mo(23)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 603.846 mo(terminalbranchlengths\(agoodapproximationforlarge)[3.87447 4.42735 3.90228 8.30181 2.76762 5.53525 4.98131 5.70659 5.53525 3.90228 4.98129 5.53526 4.14839 8.48419 2.75766 4.43732 5.52527 4.98131 3.87447 5.53525 6.87811 3.87447 7.92027 4.98129 5.26025 5.26025 8.47421 4.98129 5.53528 5.53522 3.90228 4.70236 5.25827 2.76764 8.30182 4.98126 3.87448 2.76761 4.98132 8.47421 3.04459 4.98132 6.84125 2.76764 4.98126 3.90228 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 603.846 mo(24)[2.64655 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf-25.232 614.805 mo(n)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf-19.252 614.805 mo(\),wecanfurthersimplifyEquation)[3.87447 6.08517 6.92599 7.7449 4.42735 4.98129 8.8528 3.0446 5.53525 3.90228 3.87447 5.53525 4.42735 7.21982 3.9292 2.76762 8.3018 5.53525 2.76764 2.76762 3.0446 8.58578 6.78056 5.25829 5.53525 4.98129 3.87445 2.76764 4.98129 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf137.91 614.805 mo(9)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf146.209 614.805 mo(to:)[3.87445 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf-40.488 614.805 mo(25)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf48.395 645.197 mo(^)shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf47.946 645.197 mo(r)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf52.718 645.197 mo(\()shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf56.592 645.197 mo(i;l)[3.4321 3.32553 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf66.514 645.197 mo(\)=)[4.98032 0 ]xshYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf80.351 628.161 mo( )shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf88.238 645.197 mo(1)shYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf94.05 645.197 mo( )sh%ADOBeginSubsetFont: HBAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSG+CMEX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/radicalbigg <1C60D8A8C9B5EE310563FF49671A32B6B9B17C62AD1844E96F16A466D2A18CB10BD4D72651950E86DD469AEFB1C9DD95E058480B8356CB390FE2FF0429F3D05855BC2026EB193DBBDE65A150CA8DFC4AA69E704E8B10FD9DA622B9C8337B05F0> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSG+CMEX10 /Encoding getdup 114 /radicalbigg putpop%ADOEndSubsetFont
/YRBUSG+CMEX10*1 [18{/.notdef}rp /parenleftbigg /parenrightbigg 12{/.notdef}rp /parenleftBigg /parenrightBigg 78{/.notdef}rp /radicalbig /.notdef /radicalbigg /radicalBigg 140{/.notdef}rp]YRBUSG+CMEX10 nfYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf102.629 629.468 mo(r)sh112.591 629.268 mo
132.805 629.268 li
@
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf112.591 645.197 mo(1)shYRBUSE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf118.403 645.197 mo( )shYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf128.177 638.457 mo(i)sh128.177 642.707 mo
131.609 642.707 li
@
YRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf128.309 652.031 mo(l)shYRBUSG+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf132.805 628.161 mo(!)shYRBURX+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf140.692 630.917 mo(2)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf200.892 645.197 mo(\(10\))[3.87445 4.98132 4.98129 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/H <1C60D8A8C9B6E3FA234780E58B87D2EA5F590A170732E8342AECC935166121E62A1070A4510D098032CE86B0487DD79307BBCAC2344B3292DE9A2D8082B8628F7C6E230EE648567F4904925AA4070E97FCB3EA4C73FA2E3142B18F75EA0EF5F062D038BAE03BBCF96552C8DD6B5D4B8747E5B552469E1B25986782E0B55D908AFB4A898DB9902CAE08C84B79FD04167BDD5A9E66D88F539A05377BA988B49C7EBFDFA962B967B5AE9DAE2C682A6E00F2705C6A21219B2987EF858D011EEDAA259CB8B502CDC00C7A32E14DD38C7C48E01FF854BF1DF45E706BF71F42F777A381F06D6C9B4C9EFC6AED73572FAEEB4318476678433B1ED0A51B6532A16AF3C291E604AD4889551281D976188DBCCE5E87B2250FDAB6DEAB32EBD03994B24989D9> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 72 /H putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 3{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V 4{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf241.019 250.484 mo(Havingestimated)[7.47195 4.70233 5.25827 2.76764 5.53525 10.5404 4.42734 3.9292 3.87448 2.76761 8.30182 4.98129 3.87445 4.42737 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf324.979 250.484 mo(r)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf329.75 250.484 mo(,wecaneasilyuseEquation)[8.32675 6.92599 9.98648 4.42734 4.98129 11.0944 4.42734 4.98132 3.9292 2.76758 2.76764 10.8174 5.53522 3.9292 9.98651 6.78052 5.2583 5.53528 4.98126 3.87445 2.76764 4.98132 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf469.907 250.484 mo(6)sh1 /0 /CSD get_res sepcs
1 sep
YRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 250.484 mo(26)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 261.443 mo(togetanestimateof)[3.87445 12.2839 4.98129 4.42734 11.1771 4.98129 12.8379 4.42734 3.92917 3.87448 2.76761 8.30182 4.98132 3.87445 11.7299 4.98132 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf344.837 261.443 mo(\025)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf357.951 261.443 mo(fromtheobservedmean)[3.04459 3.90228 4.98132 15.6044 3.87445 5.53528 11.7299 4.98126 5.53528 3.9292 4.42737 3.90222 4.97937 4.42731 12.8378 8.30182 4.42737 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 261.443 mo(27)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 272.402 mo(branchlengthforlarge)[5.53525 3.90228 4.98129 5.53525 4.14841 10.8553 2.76761 4.42737 5.53525 4.98129 3.87445 10.8453 3.04459 4.98129 9.21237 2.76761 4.98132 3.90228 4.98129 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf342.062 272.402 mo(n)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf348.042 272.402 mo(.Notethat,absentaproof)[8.09763 7.47195 4.98129 3.87445 9.73743 3.87448 5.53522 4.98132 3.87445 8.08765 4.98132 5.53522 3.9292 4.42737 5.25629 9.18451 10.3013 5.53522 3.90234 5.26025 4.98126 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 272.402 mo(28)[2.64655 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 283.361 mo(forConjecture)[3.04459 4.98132 8.69427 7.19498 4.98129 5.53528 3.04459 4.42734 4.42737 3.87445 5.53525 3.90228 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf299.919 283.361 mo(1)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf304.901 283.361 mo(,Equation)[7.55963 6.78058 5.25827 5.53525 4.98132 3.87445 2.76764 4.98129 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf356.966 283.361 mo(9)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf366.75 283.361 mo(shouldbetreatedasan)[3.9292 5.53525 4.98129 5.53525 2.76764 10.3273 5.8042 9.22937 3.87445 3.90228 4.42731 4.98132 3.87445 4.42737 10.3273 4.98126 8.72125 4.98126 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 283.361 mo(29)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 294.32 mo(approximateestimator.Alsonotethatthisapproximate)[4.98129 5.53525 5.53525 3.90228 4.70236 5.25827 2.76764 8.30179 4.98132 3.87445 7.61539 4.43732 3.92917 3.87448 2.76761 8.30182 4.98129 3.87448 4.98129 3.90228 5.95566 7.47195 2.76761 3.9292 8.16934 5.53522 4.98132 3.87445 7.62537 3.87445 5.53522 4.98132 7.0625 3.87445 5.53528 2.76764 7.11719 4.98132 5.53522 5.53528 3.90228 4.70233 5.25824 2.76764 8.30182 4.98132 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 294.32 mo(30)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 305.279 mo(estimatorassumesthegiventreeitselfwasgenerated)[4.42734 3.9292 3.87445 2.76764 8.30182 4.98129 3.87445 4.98132 9.02304 4.98129 3.9292 3.9292 5.53525 8.30182 4.42734 9.05994 3.87445 5.53525 9.54813 4.98129 2.76764 4.97931 4.42737 10.666 3.87448 3.8923 4.43732 9.54813 2.76764 3.87445 3.9292 4.42731 2.76764 8.16541 6.91602 4.98126 9.05994 4.98132 4.42737 5.53522 4.42737 3.90228 4.98126 3.87445 4.42737 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 305.279 mo(31)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 316.238 mo(bythedual-birthmodel\(e.g.itisnottheresultof)[5.25629 10.9171 3.87445 5.53525 10.0861 5.53525 5.53525 4.98129 2.76761 3.32053 5.53525 2.76764 3.90228 3.87445 11.194 8.30182 5.25031 5.53525 4.42734 8.42639 3.87445 4.42734 2.76764 4.98132 8.44629 2.76764 9.5332 2.76764 9.58789 5.52533 4.98126 9.53326 3.87445 5.53528 10.0861 3.90234 4.42731 3.9292 5.53528 2.76764 9.5332 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 316.238 mo(32)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 327.197 mo(subsamplingthetipsofatreegeneratedbythedual-)[3.9292 5.53525 5.53525 3.92917 4.98132 8.30182 5.53525 2.76761 2.76764 5.53525 9.63382 3.87448 5.53525 9.07986 3.87448 2.76761 5.53525 8.58173 4.98132 7.69711 9.63385 3.87445 3.90228 4.42734 9.0799 4.98132 4.42731 5.53528 4.42731 3.90234 4.98126 3.87445 4.42737 10.1878 5.25629 9.91077 3.87451 5.53522 9.0799 5.53528 5.53522 4.98132 2.76764 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 327.197 mo(33)[2.64655 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/W <1C60D8A8C9B505563364AC8BE8AB65E15C6C08AD458A3C49B32AF7A6889CE67A7C3A7AE930FDF331D78AF6B2774B2E2F9165802F51899041EFBD3924C43ED76A472FF8E62DD42BB26872119346C8E5FAE87DF4A5B6404CEC1023A1889FE114BA5E56D8DAB21B203F5E6D874C0E17030C65A10469C5F86A53A7D1CFDBCD0E6B94604F94EF6BECF776BD9FD84BFC7AF2D1AA08788921B6CE8FD734B2E9372ACA3C7D976E4DF8C6EED1CE088EB43DC42B2D6388D9B8E9E4C6FA2D7E84106976063DE8EEDEDD5065F70DF6158531A23BF77B8F77A74E19614095CB2049840CA4D0D45F1041ABD9861325F1156E78D91D6A706606395E26954346A8584D3C7D06B32B91751B6AC28A5309BAC9B774A4A1514E73B9AA13764701722D129040EC> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 87 /W putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 3{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 338.156 mo(birthmodel\).Wediscussstatisticalpropertiesofboth)[5.53525 2.76764 3.90228 3.87445 10.0284 8.30182 5.25027 5.53525 4.42737 2.76761 3.87448 7.27072 9.40271 8.92047 5.53525 2.76764 3.9292 4.42734 5.53525 3.9292 8.4223 3.9292 3.87445 4.98132 3.87445 2.76764 3.92917 3.87448 2.76761 4.42734 4.98132 7.26074 5.53528 3.90222 4.98132 5.80426 4.42731 3.90234 3.87445 2.76764 4.42731 8.4223 4.98132 7.53772 5.80426 4.98132 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 338.156 mo(34)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 349.114 mo(estimatorsinthediscussionsection.)[4.42734 3.9292 3.87445 2.76764 8.30182 4.98129 3.87445 4.98132 3.90228 7.24673 2.76761 8.86276 3.87445 5.53528 7.74487 5.53525 2.76764 3.92917 4.42737 5.53525 3.92917 3.9292 2.76764 4.98129 8.85281 3.92917 4.42734 4.43732 3.8645 2.76764 4.98129 5.53525 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 349.114 mo(35)[2.64655 0 ]xsh%ADOBeginSubsetFont: SAAAAA+CMTI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSD+CMTI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B807CA4C948CB38D5C02AC0B4DF2F5542ABAADA92EBE6FA88D0B7967EF3EDEAABE0FF38A4D281A3F0B701DD8DC15ED509C914B7D638D5F618B805D> |-/S <1C60D8A8C9B7E9652BC62BE5B56B73D17F9C36277D0723C9DCF055D04AF78F61AB04CB07E5E1E7AB6F60F69738B1A2F3F8CC1CA49B23399C4EE4A470104E7A524F176065ACDE3B033C8E71FEDB6D7FA28079C64441DF5261E80C3531CB1E93304BDC07D02B52345A07FDBF81D16A6AFE36BB7894CB64B41831524FB38C2B98B254FCAA1AF6DF8B1E7F4AAF1470951C7802FC9F92F53A9003F74D426A11BF36D2F99BFAD71498CFF5A2066C1252486CA651BFDFA02FC8AE71B2DD46FA0AB737EBDADB597CAD6D3212DB0578846ABDFC468CF1050C63C0DF092313196C056FFA9ED10F000C5FA1244F2EC36058C97FE1E3DE> |-/b <1C60D8A8C9B74F361570F6157DF4C6BA1832633A20BDAD8E745C3F65A9161A996E8C37CF5D8FCF54987D72D6D0F4034D4E3B8097E998A9E3504D576F88CD9BACE2729D0A421614F6E6C017458B9BADE750B8EA47BF7D6420014A0BCA30F421D272FA7A0946FE9E1C74CBF9DD154EC8454F8F6FB538DFFBC1EDA0004B601ECB6E1DA855879739BECBA256C1881D0EDB0F9D3AD0A4CE8EC9BB0FA0E6816D6C5B537CEB42404BD146C418> |-/d <1C60D8A8C9B7BC12CC2205AD24A1CC8B5FD1BB19116A029DE15674482C4F1883486F1D93753C1DF1835F8FA82CCA0252ABE0C1066E12A22C0DFF0F1A4877C4F10003D2BB46BBA6C4AD935D7B4400B6AC9F724D37E3D2FDD3DEF2519D59629371CC3ECE789536B4C5001519DD783A398816529F7EBA2C07051D3C6A7BA6FE559FBE091759EC09C63120E18DA6404CE0EFB882D3ECCD0FAFEAB921A2F9457456DC5266D2D39C0E6F9EAC1B9048FC6E2D1167262F390AB375478590718D5FECD52770B28E5B10E4858D84F4B7DE96D5FFF1ADF771159BF072B2> |-/g <1C60D8A8C9B74F366EF54586A3F5C8322BB889E642426E80A3F7F81AD135BBF602A609DAB87F3A2C1AD2EA5B21541AA9F4C5242C2AE759605C8BC83EA580F220A042546A9724DB907E0450ADBBBF8E620CF5A50697DD7DF6050C791B51193D4F1AE4917D9AC57C3E62F51EA63039DDC5C82C72FC828251E8C2FAFD9AD9FD74D8593E0179C51536B3D9EBC2FD89E581063718D81C63F662F7148CE8537A58F8D69711892464DEE8BB85AB08FB63EA25F6A9686F2C8416470C71CDDB5D257B2223E6ACBA9D8D11925997F8023CAE4F9A69DFEFA06E7CF93E932EC59F> |-/h <1C60D8A8C9B7BC12CC2205AD24A1CC8B5FD1BB19F1877C9EA8039FA7945D91C3D37041CC274AB5F982C4EFFE46C2F7CAABB042730C2C7A5EA610065D5D82B3FE7DB538BF057E790E5AF077392983F88FEF910E78CB3FEF763BEA31E902E94C8B40CEDAFEEBA713FCACDA58AF62B9B2FC1BD0402E06F9609D5C6231CCD0D6BC9877090A73D17EB5E001457E6269837E624AD5E68171D08C619C5718E06E15178B3444FF04D2CE5C88E1BC54F06766BD62272C504B9237169E93078F6A22D2A48E1F5A19511B71FFE86D43C85E08C3056633E95081708404> |-/p <1C60D8A8C9B7BC12B7C2F7FE68B02AD0ED65B01991B0EB3EF21650944A568BBFE9E4330679E813849F62869BFDBDDFBC6CC5ACEFCE11FDD757C74D0ABF6120CEC1123ACC3D922BF1AF39E9466244D91C443B580631E90EDE6556051D6E3085E13CC42222D3CB9B6293C7C576004AF2B496B6234F98F07C2C9A15B9F91982D98978E42A4A84D16CB1ECE4A59DC935D51141183EE34B05FDA26A26740E93F16739599F9A3EC440DB9E9FB69F742AEE91215D7D378FE2E85D6748D7011DBACC6337F7F2EF41A9562780A86FE60A0205A81C1F8BC707269E8A1FDAEB220A784B099023F080F8E44788D97E8D> |-/u <1C60D8A8C9B78324EEE5BC15B0917F8EA4F48A16EB275AA0D944C3EA7FAA239E3F9F6F8B365FC8459FF763F945FAB03DEE645EA62B4724F48823B1B594168675F78D92E29AD2DC465C787A48A31E7A3BEEE555B8088AF575581F1C4243E4D3B8391376BD69356BFBD645CF9D44761F6D634E567460E8AE69DEFAEB48AE13081B91CF6512C8FB1667FEE930CBB1014B93D5E75885591C9E0312FF2EE964B84B1F2E9751AC137175301365001ADE4B214066BB0DA555F979FE85ABA5D8A63018D6801B2C8F961247> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSD+CMTI10 /Encoding getdup 45 /hyphen putdup 83 /S putdup 98 /b putdup 100 /d putdup 103 /g putdup 104 /h putdup 112 /p putdup 117 /u putpop%ADOEndSubsetFont
/YRBUSD+CMTI10*1 [45{/.notdef}rp /hyphen /period 33{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /b /.notdef /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 6{/.notdef}rp /emdash 131{/.notdef}rp]YRBUSD+CMTI10 nfYRBUSD+CMTI10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 383.678 mo(Samplingthedual-birthmodel.|)[5.60092 5.09183 8.14734 5.09183 2.54645 3.05554 5.60092 10.0224 3.30957 5.09183 10.0224 5.09183 5.34689 5.09183 2.54642 3.56467 4.58286 3.05554 4.20129 3.30957 10.5314 8.14734 4.57376 5.09183 4.58286 2.54645 3.05554 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf390.109 383.678 mo(Whenconditioning)[10.2396 5.53528 4.42731 10.8951 4.42737 4.98132 5.53522 5.53528 2.76758 3.87451 2.76758 4.98132 5.53522 2.76764 5.53528 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 383.678 mo(36)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 394.637 mo(on)[4.98129 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf246.661 394.637 mo(n)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf252.641 394.637 mo(,thenumberoftips,asimplealgorithmcanbe)[7.85852 3.87445 5.53525 9.51825 5.25629 5.53525 8.02286 5.81421 4.42734 8.99319 4.98129 8.12552 3.87448 2.76761 5.53525 3.9292 7.85852 10.0722 3.9292 2.76761 8.30182 5.53522 2.76764 9.51825 4.98132 2.76758 4.98132 4.98132 3.90228 2.76764 3.87445 5.53522 13.3927 4.42737 4.98132 10.6161 5.81421 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 394.637 mo(37)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 405.596 mo(usedtosamplethespaceoforderedweightedtreeshapes)[5.53525 3.9292 4.42734 8.23511 3.87448 7.68115 3.9292 4.98129 8.30182 5.53525 2.76761 7.12723 3.87445 5.53528 7.1272 3.9292 5.53525 4.98129 4.42734 7.12723 4.98129 5.74448 4.98129 3.90228 5.53525 4.42737 3.90225 4.42734 8.23517 6.91602 4.42731 2.76764 4.98132 5.25629 3.87445 4.42737 8.23511 3.87445 3.90228 4.42737 7.1272 3.9292 5.53522 4.98132 5.81421 4.42731 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 405.596 mo(38)[2.64655 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/fi <1C60D8A8C9B790A83D946A52CDEF806B68BCA69D0F565BD47A313ACE64EA4C51C4F7E2720AD6426622FF887A9B1CEFB163BC1E0E045B9CF4238406E12352EBBD9242E2C49AFC9D86CDEE482C0035CA1CA44CCBB1436642750A1E71B1CD288AC28B3D26A164143FCB2C92157FC4CD1F366676BE46E871DBBB1239C9614DC38DD102B67124FC3D2C144C05DA896465C2DA06004C93D99A6D33F72F04F023B41A55BAD349B063D76BBE78E5B60101B7FD0DF48C196A450BF7E868A35BEFE7F5AEE46F6B98A5AEE642C67C9F421CFE1639B9D13BF5EC82D77CC20A4B04492D8733D54EC758417FF41850C5076FB5C2875D5227FEF9897E31DFBBC49554A2544AFB8F5D9BAF3452E7> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 12 /fi putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [12{/.notdef}rp /fi 27{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 3{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /.notdef /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 416.555 mo(de\014nedbythedual-birthmodel.)[5.53525 4.42734 5.53528 5.53525 4.42734 8.85281 5.25629 8.58578 3.87445 5.53525 7.7449 5.53525 5.53525 4.98129 2.76764 3.3205 5.53528 2.76761 3.90228 3.87448 8.85278 8.30182 5.26025 5.53525 4.42734 2.76764 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 416.555 mo(39)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf241.019 427.514 mo(Westartwithasingle-nodetreeanditerativelyadd)[9.41269 8.66144 3.9292 3.87445 4.98129 3.90228 8.10858 7.19498 2.76761 3.87448 9.76935 9.21542 3.92917 2.76764 5.53525 4.98129 2.76764 4.42734 3.32053 5.53525 5.25031 5.53522 8.66147 3.87448 3.90228 4.42734 8.67142 4.98126 5.52533 9.76935 2.76764 3.87445 4.42737 3.90222 4.98132 3.87445 2.76764 4.98926 4.42737 2.76764 9.49237 4.98132 5.53522 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 427.514 mo(40)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 438.473 mo(newnodesuntilthetreehas)[5.53525 4.42734 11.708 5.53525 5.26025 5.53525 4.42737 8.45221 5.53525 5.25629 3.87448 2.76761 7.2807 3.87445 5.53525 8.95038 3.87445 3.90228 4.42737 8.9404 5.53525 4.98132 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf365.122 438.473 mo(n)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf375.619 438.473 mo(leaves.Weuseaheap)[2.76764 4.42734 4.70233 4.97931 4.43732 3.9292 7.29065 9.40271 8.95038 5.53528 3.92914 8.94043 9.50433 5.53522 4.42737 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 438.473 mo(41)[2.64655 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/k <1C60D8A8C9B78C669F28CFA812DED6139D7D856991235AB6C4AFC31BCD273487675BD2F1E5E12A90601E8813F546F4A251C2413363ED229861B6D9BB803DB05AFBD87A0BDB30ECAF79A6D7790B485108229A8E37CE114792148894516FD35B349631ABB537005E1976FEB58ECAFBA15317EB352D3CF9CB33300F195FC223A3F6046CEB2634BEBCF6E3727F7EE5A302BE446437A812155B254724D2537EB005F67E4A1C637E1D0B04296D89278AFEA4370D60C606D50CD21C194036AA2B3138CB3CBC2A27B2F6A619F68A923473FE4640A1DEB3A1DC3C48F4614D31FF09A626A640D3780A65E6F12B49D1B402046EDA42CFE7231C1BAE09391B8A756CE69E> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 107 /k putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [12{/.notdef}rp /fi 27{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 3{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 449.431 mo(tokeepalistofcurrentleavessortedbytheirdistance)[3.87445 8.93646 4.97934 4.42734 4.42734 9.49042 8.93646 2.76761 2.76761 3.9292 7.82962 4.98129 6.99976 4.42737 5.53522 3.90228 3.90228 4.42737 5.25629 7.82962 2.76764 4.42734 4.70233 4.97934 4.42734 7.88434 3.93918 4.98129 3.89233 3.87445 4.43732 9.48041 5.2663 9.21344 3.87445 5.52527 4.43732 2.76764 7.84747 5.53522 2.76764 3.9292 3.87445 4.98126 5.53528 4.42737 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 449.431 mo(42)[2.64655 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B803802DEC08D98BCB1124DC97CC2168B04A76665CA4085863C1134DED52EF876B65C467960DD7B14974A90DA32178A8C0201F22E90F10D9F04A14033C618CAC17B75F13513FEEAE1D4A0FD6DB8D776D9FCA15F0400DBEA440D61D7EA23967363EF1098D6D4EAD2578D18D87B764EA14FC1B0329A8B2F96ED650C824B7D9FCB004F255C7B9DB4DDDD820C863> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 73 /I putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [12{/.notdef}rp /fi 27{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 460.39 mo(totheroot.Ineachiteration,weaddtwochildnodes)[3.87445 9.37482 3.87445 5.53525 8.81091 3.90228 5.26025 4.98129 3.87445 7.17111 3.59747 9.91879 4.42737 4.98129 4.15836 9.91879 2.76764 3.87445 4.42734 3.90228 4.98129 3.87448 2.76761 4.98132 5.53525 7.1611 6.91605 8.82083 4.98132 5.53528 9.92871 3.59552 6.91602 9.37482 4.14838 5.53528 2.76764 2.76758 9.92877 5.53528 5.26025 5.53522 4.42737 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 460.39 mo(43)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 471.349 mo(tothehighestleafinthetree\(i.e.,theleafclosestto)[3.87445 9.57407 3.87445 5.53528 9.01013 5.53525 2.76764 4.98129 5.53525 4.42734 3.9292 8.46722 2.76764 4.42734 4.98129 7.62741 2.76761 10.128 3.87448 5.53525 9.01013 3.87448 3.90228 4.42734 9.02011 3.87448 2.76761 2.76761 4.42737 2.76764 7.36035 3.87445 5.53528 9.01013 2.76764 4.42737 4.98126 7.63739 4.42737 2.76764 4.98126 3.9292 4.42737 3.92914 8.46729 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 471.349 mo(44)[2.64655 0 ]xsh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/semicolon <1C60D8A8C9B85744148CA332C8F6F1C94E59D648AFC4A02AACD3F0793E25CDABCBB77F4BB44FE3F4D5E4706EE1A5212FFB26A746685B846624FAC81EA613CECAD9E8FFF8094DC8103D4F6B92DA1A84899EBAA4B5172735D8D430ECFDA89F059B18FD4A523BC256E35F5DBB198206FEEF2F6A2DE48D9CEBB338B9AD074B> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 59 /semicolon putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [12{/.notdef}rp /fi 27{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon /semicolon /.notdef /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 482.308 mo(theroot\);wesamplefromtwoexponentialdistributions)[3.87445 5.53525 7.75488 3.90228 5.26025 4.98129 3.87445 3.87448 6.09512 6.91602 7.75485 3.9292 4.98129 8.30182 5.53525 2.76764 7.76483 3.03461 3.90228 4.98132 11.6393 3.59549 6.91605 8.30878 4.42737 5.25827 5.81421 4.98129 5.53528 4.42731 5.25635 3.87445 2.76764 4.98126 6.09515 5.53522 2.76764 3.9292 3.87445 3.90228 2.76764 5.53522 5.53528 3.87445 2.76764 4.98132 5.53522 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 482.308 mo(45)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 493.267 mo(withrates)[7.19498 2.76761 3.87448 8.51407 3.90228 4.98129 3.87445 4.42737 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf277.499 493.267 mo(\025)shYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf283.311 494.761 mo(a)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf291.284 493.267 mo(and)[4.98129 5.53525 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf310.313 493.267 mo(\025)sh%ADOBeginSubsetFont: ZAAAAA+CMMI8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBUSA+CMMI8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B775D2CA794183E8A400C7BDDE8590B1CEC0C6F2D15B6CFA2AFE65174D02A949C7059CA560FD994877E653AE65D3B93699AF6503DA15CE0901289413AC4AEA05C87296A8BA5DB19A993847A44CDA8E05634E15E910BB594D039074FDAC407794FC6DE5314076785B8B4799B4B7A82C77AB95CC89F5490689FA12BB8562D10E68BB15C26A403BD9F4A7B224FBB77806E7C60DA693782A36FAECE0019737FDAE3EEB41C78BAFF90B1E> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBUSA+CMMI8 /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/YRBUSA+CMMI8*1 [21{/.notdef}rp /lambda 39{/.notdef}rp /slash 35{/.notdef}rp /a /b 11{/.notdef}rp /n 3{/.notdef}rp /r 5{/.notdef}rp /x 135{/.notdef}rp]YRBUSA+CMMI8 nfYRBUSA+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf316.124 495.37 mo(b)sh%ADOBeginSubsetFont: EAAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginYRBURW+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/quoteright <1C60D8A8C9B85744175BF073046ADDEE6907895482D01ECF35DE54BEA4FEC28048235934F2907084DF4FC87697B01D8F3E2719D21D88EF7B5C59D144E7C3DE232ABF1C786F3922BB096712FF3F317AEE6D0C9853CEE8DC70F074D9A7F3EB33> |-systemdict /gcheck known {setglobal} if end {end} ifendYRBURW+CMR10 /Encoding getdup 39 /quoteright putpop%ADOEndSubsetFont
/YRBURW+CMR10*1 [12{/.notdef}rp /fi 26{/.notdef}rp /quoteright /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight /nine /colon /semicolon /.notdef /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright /circumflex 2{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 134{/.notdef}rp]YRBURW+CMR10 nfYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf323.223 493.267 mo(fortheleftandrightchild'sbranch)[3.04459 4.98132 6.8811 3.87445 5.53525 7.40616 2.76764 4.42734 3.04462 6.85327 4.98129 5.5253 8.5141 3.90222 2.76764 4.98132 5.25629 6.85327 4.15839 5.53522 2.76764 2.75763 5.53528 2.76764 6.90802 5.53522 3.90228 4.98132 5.53522 4.15839 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 493.267 mo(46)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 504.226 mo(lengths,respectively.Thetwonewnodesareaddedto)[2.76764 4.42734 5.53525 4.98129 3.87448 5.53525 3.92917 7.07147 3.90228 4.42737 3.92917 5.80426 4.42734 4.42734 3.87448 2.76761 4.98929 4.42737 2.76761 4.42142 7.07147 7.19498 5.53525 8.7312 3.59552 6.91602 9.28513 5.53528 4.42734 11.4889 5.53528 5.26025 5.53522 4.42731 8.23303 4.98132 3.90228 8.72125 4.98126 5.53528 5.53522 4.42737 9.83911 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 504.226 mo(47)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 515.185 mo(theheapofleaves,andtheparentisremovedfromthe)[3.87445 5.53525 8.2829 5.53525 4.42734 4.98132 9.39075 4.98132 6.9101 2.76761 4.42734 4.70236 4.97934 4.42734 3.92917 6.62317 4.98129 5.53525 9.39078 3.87448 5.53522 8.29285 5.53525 4.98129 3.90228 4.42737 5.25629 7.72998 2.76764 7.78473 3.90228 4.42737 8.30176 4.71234 4.97931 4.42737 9.39075 3.04462 3.90228 4.98132 12.1573 3.87445 5.53528 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 515.185 mo(48)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 526.144 mo(heap.Oncetheloophasterminated,wetruncatethetree)[5.53525 4.42734 4.98132 5.53525 5.30807 7.74893 5.53525 4.42734 6.96783 3.87445 5.53525 6.9678 2.76764 5.26025 4.98129 8.07571 5.53528 4.98129 6.46964 3.87445 4.42737 3.90228 8.30182 2.76764 5.53522 4.98132 3.87445 4.42737 5.53522 5.29816 6.92596 6.96777 3.87451 3.90228 5.53522 5.52533 4.43732 4.98126 3.87445 6.95789 3.87445 5.53522 6.96783 3.87445 3.90228 4.42737 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 526.144 mo(49)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 537.103 mo(byshrinkingallterminaledgesexcepttheoneattached)[5.25629 8.84482 3.9292 5.53525 3.8923 2.76764 5.53525 5.25827 2.76764 5.53525 8.56784 4.98129 2.76761 6.34421 3.87448 4.42734 3.90228 8.30182 2.76761 5.53525 4.98129 6.34421 4.42737 5.53525 4.98129 4.42734 7.51575 4.42734 5.25827 4.42737 4.42731 5.53528 7.45105 3.87445 5.53522 8.01392 4.98132 5.53522 8.00397 4.98126 3.87445 3.87451 4.98126 4.14838 5.53528 4.42737 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 537.103 mo(50)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 548.062 mo(totheleafthatisclosesttotherootsuchthatallleaves)[3.87445 8.2092 3.87445 5.53525 7.65524 2.76761 4.42737 4.98129 6.27249 3.87445 5.53525 4.98132 7.10233 2.76761 7.1571 4.42734 2.76761 4.98132 3.92917 4.42734 3.9292 7.1123 3.87445 8.2092 3.87448 5.53522 7.65527 3.90228 5.25027 4.98129 7.10236 3.93915 5.52527 4.15839 8.76312 3.87445 5.53528 4.98126 7.10236 4.98132 2.76764 5.99548 2.76758 4.42737 4.70239 4.97931 4.42731 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 548.062 mo(51)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 559.02 mo(areequidistanttotheroot.)[4.98129 3.90228 7.7449 4.42734 5.25827 5.53528 2.76761 5.53525 2.76764 3.92917 3.87448 4.98129 5.25629 7.202 3.87445 8.29886 3.87445 5.53525 7.7449 3.90228 5.26025 4.98129 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 559.02 mo(52)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf241.019 569.979 mo(Har)sh257.375 569.979 mo(tmann)[3.87445 8.30182 4.98132 5.53522 0 ]xshYRBUSD+CMTI10*1 [9.9626 0 0 -9.9626 0 0 ]msf289.353 569.979 mo(etal.)[4.58286 7.27469 5.09183 2.53647 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf315.652 569.979 mo(havedescribedvariousstrategiesfor)[5.53525 4.70236 4.97931 8.18326 5.53525 4.42734 3.9292 4.42734 3.90228 2.76764 5.81421 4.42734 9.28116 4.71039 4.98126 3.90228 2.76764 4.98132 5.53522 7.67511 3.9292 3.87451 3.90222 4.98132 3.87445 4.42737 4.98126 2.76764 4.42737 7.68512 3.04456 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 569.979 mo(53)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 580.938 mo(samplingtreeswith)[3.9292 4.98129 8.30182 5.53525 2.76761 2.76764 5.53525 7.21292 3.87445 3.90228 4.42737 4.42734 6.1608 7.19501 2.76761 3.87448 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf316.484 580.938 mo(n)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf324.695 580.938 mo(leaves\()[2.76764 4.42734 4.70233 4.97934 4.42734 6.16083 0 ]xsh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf356.034 580.938 mo(Har)sh372.39 580.938 mo(tmannetal.)[3.87445 8.30182 4.98132 5.53522 7.76691 4.42731 6.10608 4.98132 2.76764 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf423.9 580.938 mo(,)sh.930816 .793027 0 0 cmyk
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf428.899 580.938 mo(2010)sh1 /0 /CSD get_res sepcs
1 sep
YRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf448.824 580.938 mo(\).Our)[3.87445 5.00922 7.7489 5.53528 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 580.938 mo(54)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 591.897 mo(samplingprocedurefallsunderwhattheyhavetermed)[3.9292 4.98129 8.30182 5.53525 2.76761 2.76764 5.53525 9.1058 5.53525 3.90228 5.26025 4.42737 4.42734 5.53525 5.53525 3.90228 8.5419 3.04462 4.98129 2.76764 2.76761 8.05371 5.53525 5.53525 5.53525 4.42737 8.02679 7.19495 5.53528 4.98126 7.99902 3.87445 5.53522 4.42737 9.38281 5.53522 4.70233 4.97937 8.55182 3.87445 4.42737 3.90228 8.30182 4.42737 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 591.897 mo(55)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 602.856 mo(SimpleSamplingAlgorithm\(SSA\).Astheypointout,)[5.53525 2.76764 8.30179 5.53525 2.76764 8.7312 5.53525 4.98129 8.30182 5.53525 2.76761 2.76764 5.53525 9.27518 7.47195 2.76761 4.98132 4.98129 3.90228 2.76761 3.87448 5.53525 12.6057 3.87445 5.53528 5.53525 7.47195 3.87445 7.07147 7.47192 8.22308 3.87445 5.53528 4.42737 9.56207 5.81421 4.98126 2.76764 5.25629 8.17834 4.98126 5.53528 3.87445 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 602.856 mo(56)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 613.815 mo(theSSAprocedureproducestherightdistributionon)[3.87445 5.53525 9.25922 5.53525 5.53525 12.3038 5.53525 3.90228 5.25027 4.42737 4.42734 5.53525 5.53525 3.90228 9.25922 5.53525 3.90228 5.26025 5.53525 5.53525 4.42734 4.42737 8.76102 3.87448 5.53525 9.25922 3.90228 2.76764 4.98132 5.25629 8.7063 5.53528 2.76764 3.92914 3.87445 3.90234 2.76758 5.53528 5.53522 3.87445 2.76764 4.98132 10.3671 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 613.815 mo(57)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 624.774 mo(treetopologiesforpurebirthmodels,likeours,because,)[3.87445 3.90228 4.42737 7.60541 3.87448 4.98129 5.81421 4.98129 2.75766 4.98129 4.98129 2.76764 4.43732 7.09729 3.04459 4.98132 7.08032 5.53528 5.53525 3.90228 7.60541 5.53525 2.76764 3.90228 3.87445 8.70337 8.30182 5.26025 5.53522 4.42737 2.76764 3.9292 5.94568 2.76758 2.7677 4.97931 7.60541 4.98132 5.53522 3.90228 3.9292 5.94568 5.80426 4.42731 4.42737 4.98132 5.53528 3.92914 4.42737 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 624.774 mo(58)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 635.733 mo(oncetheprocessreaches)[4.98129 5.53525 4.42737 7.21686 3.87448 5.53525 7.22684 5.53525 3.90228 5.25027 4.42737 4.42734 3.9292 6.72867 3.90228 4.42737 4.98129 4.14838 5.53525 4.42737 0 ]xshYRBUSC+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf338.199 635.733 mo(n)shYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf346.972 635.733 mo(tipsforthe\014rsttime,itnever)[3.87445 2.76764 5.53525 6.71872 3.04459 4.98132 6.6918 3.87445 5.53528 7.22681 5.53528 3.90228 3.9292 6.66394 3.87451 2.76758 8.30182 4.42737 5.55713 2.76764 6.67395 5.52527 4.43732 4.97937 4.42731 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 635.733 mo(59)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 646.692 mo(goesbacktohavingfewertipsAremainingquestion)[4.98129 5.26025 4.42737 9.15955 5.53525 4.98129 4.14841 10.4986 3.87448 10.2116 5.53525 4.70236 5.25827 2.76764 5.53525 10.2216 3.04459 4.42737 6.91602 4.42737 9.13263 3.87445 2.76764 5.53525 9.16953 12.7023 3.90222 4.42737 8.30182 4.98132 2.76764 5.53522 2.76764 5.53522 10.2117 5.2583 5.53522 4.42737 3.9292 3.87445 2.76764 4.98132 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 646.692 mo(60)[2.64655 0 ]xshYRBURW+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf231.057 657.651 mo(iswhatdistributionshouldbeusedtodecidethetime)[2.76764 8.08359 7.19498 5.53525 4.98129 8.03882 5.53525 2.75769 3.93915 3.87445 3.89233 2.76761 5.53525 5.53525 3.87448 2.76761 4.98129 9.69965 3.92917 5.53525 4.98132 5.53522 2.76764 9.68964 5.81421 8.58176 5.53525 3.9292 4.42737 9.68964 3.87445 9.13574 5.53522 4.42737 4.42737 2.76758 5.53528 8.59167 3.87451 5.53522 8.58173 3.87451 2.76758 8.30188 0 ]xshYRBUSB+CMSS8*1 [4.9813 0 0 -4.9813 0 0 ]msf489.525 657.651 mo(61)[2.64655 0 ]xshgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
/YRBUSA+CMMI8*1 uf/YRBUSA+CMMI8 uf/ZAAAAA+CMMI8 uf/YRBURZ+CMCSC10*1 uf/YRBURZ+CMCSC10 uf/KAAAAA+CMCSC10 uf/YRBUSD+CMTI10*1 uf/YRBUSD+CMTI10 uf/SAAAAA+CMTI10 uf/YRBUSC+CMMI10*1 uf/YRBUSC+CMMI10 uf/YAAAAA+CMMI10 uf/YRBUSB+CMSS8*1 uf/YRBUSB+CMSS8 uf/RAAAAA+CMSS8 uf/YRBURY+CMB10*1 uf/YRBURY+CMB10 uf/JAAAAA+CMB10 uf/YRBUSE+CMSY10*1 uf/YRBUSE+CMSY10 uf/GBAAAA+CMSY10 uf/YRBUSF+CMSY8*1 uf/YRBUSF+CMSY8 uf/MAAAAA+CMSY8 uf/YRBUSG+CMEX10*1 uf/YRBUSG+CMEX10 uf/HBAAAA+CMEX10 uf/YRBURW+CMR10*1 uf/YRBURW+CMR10 uf/EAAAAA+CMR10 uf/YRBURU+CMR9*1 uf/YRBURU+CMR9 uf/TDAAAA+CMR9 uf/YRBURV+LCIRCLE10*1 uf/YRBURV+LCIRCLE10 uf/FAAAAA+LCIRCLE10 uf/YRBURX+CMR8*1 uf/YRBURX+CMR8 uf/LAAAAA+CMR8 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
