%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Fig5.pdf
%%Creator: (Adobe Acrobat 17.12.0)
%%For: niema
%%CreationDate: 11/13/17, 12:06 PM
%%BoundingBox: 0 0 525 396
%%HiResBoundingBox: 0 0 524.1292 395.2379
%%CropBox: 0 0 524.1292 395.2379
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 565 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2017-11-10T13:38:17-07:00"
   xmp:CreatorTool="matplotlib 2.0.0, http://matplotlib.org"
   pdf:Producer="matplotlib pdf backend"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -395.238 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 395.238 li
524.129 395.238 li
524.129 0 li
cp
clp
gsave
0 395.238 mo
525 395.238 li
525 -.762115 li
0 -.762115 li
cp
clp
0 395.238 mo
524.129 395.238 li
524.129 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
f
65.4099 347.366 mo
65.4099 353.366 li
1 /0 /CSD get_res sepcs
.85 sep
f
1 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.4099 347.366 mo
65.4099 353.366 li
@
65.4102 367.62 mo
65.9102 367.62 66.2802 367.35 66.5302 366.8 cv
66.7702 366.26 66.9002 365.43 66.9002 364.32 cv
66.9002 363.22 66.7702 362.39 66.5302 361.84 cv
66.2802 361.3 65.9102 361.02 65.4102 361.02 cv
64.9102 361.02 64.5302 361.3 64.2902 361.84 cv
64.0402 362.39 63.9202 363.22 63.9202 364.32 cv
63.9202 365.43 64.0402 366.26 64.2902 366.8 cv
64.5302 367.35 64.9102 367.62 65.4102 367.62 cv
65.4102 368.09 mo
64.6102 368.09 63.9902 367.76 63.5502 367.1 cv
63.1102 366.44 62.8902 365.52 62.8902 364.32 cv
62.8902 363.13 63.1102 362.2 63.5502 361.54 cv
63.9902 360.88 64.6102 360.54 65.4102 360.54 cv
66.2002 360.54 66.8202 360.88 67.2602 361.54 cv
67.7002 362.2 67.9302 363.13 67.9302 364.32 cv
67.9302 365.52 67.7002 366.44 67.2602 367.1 cv
66.8202 367.76 66.2002 368.09 65.4102 368.09 cv
f
109.608 347.366 mo
109.608 353.366 li
f
109.608 347.366 mo
109.608 353.366 li
@
104.669 367.96 mo
104.669 367.44 li
105.939 367.44 li
105.939 361.38 li
104.469 362.33 li
104.469 361.69 li
106.249 360.54 li
106.919 360.54 li
106.919 367.44 li
108.189 367.44 li
108.189 367.96 li
104.669 367.96 li
f
112.789 367.62 mo
113.289 367.62 113.659 367.35 113.909 366.8 cv
114.149 366.26 114.279 365.43 114.279 364.32 cv
114.279 363.22 114.149 362.39 113.909 361.84 cv
113.659 361.3 113.289 361.02 112.789 361.02 cv
112.289 361.02 111.909 361.3 111.669 361.84 cv
111.419 362.39 111.299 363.22 111.299 364.32 cv
111.299 365.43 111.419 366.26 111.669 366.8 cv
111.909 367.35 112.289 367.62 112.789 367.62 cv
112.789 368.09 mo
111.989 368.09 111.369 367.76 110.929 367.1 cv
110.489 366.44 110.269 365.52 110.269 364.32 cv
110.269 363.13 110.489 362.2 110.929 361.54 cv
111.369 360.88 111.989 360.54 112.789 360.54 cv
113.579 360.54 114.199 360.88 114.639 361.54 cv
115.079 362.2 115.309 363.13 115.309 364.32 cv
115.309 365.52 115.079 366.44 114.639 367.1 cv
114.199 367.76 113.579 368.09 112.789 368.09 cv
f
153.806 347.366 mo
153.806 353.366 li
f
153.806 347.366 mo
153.806 353.366 li
@
148.727 362.41 mo
148.177 362.41 li
148.177 361.11 li
148.517 360.93 148.867 360.79 149.227 360.69 cv
149.577 360.59 149.927 360.54 150.267 360.54 cv
151.027 360.54 151.627 360.73 152.067 361.09 cv
152.507 361.46 152.727 361.96 152.727 362.59 cv
152.727 363.31 152.227 364.16 151.227 365.15 cv
151.057 365.32 li
149.217 367.16 li
152.257 367.16 li
152.257 366.26 li
152.827 366.26 li
152.827 367.96 li
148.127 367.96 li
148.127 367.43 li
150.337 365.22 li
150.817 364.74 151.167 364.29 151.377 363.88 cv
151.587 363.47 151.697 363.04 151.697 362.59 cv
151.697 362.1 151.567 361.72 151.307 361.44 cv
151.047 361.16 150.697 361.02 150.257 361.02 cv
149.787 361.02 149.427 361.14 149.177 361.37 cv
148.917 361.6 148.767 361.95 148.727 362.41 cv
f
156.987 367.62 mo
157.487 367.62 157.857 367.35 158.107 366.8 cv
158.347 366.26 158.477 365.43 158.477 364.32 cv
158.477 363.22 158.347 362.39 158.107 361.84 cv
157.857 361.3 157.487 361.02 156.987 361.02 cv
156.487 361.02 156.107 361.3 155.867 361.84 cv
155.617 362.39 155.497 363.22 155.497 364.32 cv
155.497 365.43 155.617 366.26 155.867 366.8 cv
156.107 367.35 156.487 367.62 156.987 367.62 cv
156.987 368.09 mo
156.187 368.09 155.567 367.76 155.127 367.1 cv
154.687 366.44 154.467 365.52 154.467 364.32 cv
154.467 363.13 154.687 362.2 155.127 361.54 cv
155.567 360.88 156.187 360.54 156.987 360.54 cv
157.777 360.54 158.397 360.88 158.837 361.54 cv
159.277 362.2 159.507 363.13 159.507 364.32 cv
159.507 365.52 159.277 366.44 158.837 367.1 cv
158.397 367.76 157.777 368.09 156.987 368.09 cv
f
198.004 347.366 mo
198.004 353.366 li
f
198.004 347.366 mo
198.004 353.366 li
@
192.615 360.98 mo
192.995 360.84 193.355 360.73 193.705 360.65 cv
194.055 360.58 194.385 360.54 194.695 360.54 cv
195.405 360.54 195.965 360.7 196.365 361 cv
196.765 361.31 196.965 361.74 196.965 362.28 cv
196.965 362.72 196.825 363.09 196.545 363.38 cv
196.265 363.68 195.875 363.88 195.375 363.98 cv
195.975 364.07 196.435 364.29 196.765 364.64 cv
197.095 364.99 197.265 365.44 197.265 365.99 cv
197.265 366.67 197.035 367.19 196.575 367.55 cv
196.115 367.91 195.465 368.09 194.605 368.09 cv
194.225 368.09 193.845 368.05 193.485 367.97 cv
193.125 367.9 192.765 367.78 192.405 367.61 cv
192.405 366.19 li
192.955 366.19 li
192.985 366.67 193.145 367.02 193.425 367.26 cv
193.705 367.5 194.105 367.62 194.625 367.62 cv
195.125 367.62 195.515 367.48 195.805 367.19 cv
196.085 366.9 196.235 366.5 196.235 366 cv
196.235 365.43 196.085 365 195.785 364.7 cv
195.485 364.41 195.055 364.26 194.485 364.26 cv
194.025 364.26 li
194.025 363.76 li
194.265 363.76 li
194.835 363.76 195.265 363.65 195.545 363.41 cv
195.825 363.17 195.975 362.82 195.975 362.34 cv
195.975 361.92 195.855 361.59 195.625 361.36 cv
195.385 361.14 195.055 361.02 194.615 361.02 cv
194.175 361.02 193.825 361.13 193.585 361.34 cv
193.345 361.55 193.205 361.86 193.165 362.26 cv
192.615 362.26 li
192.615 360.98 li
f
201.185 367.62 mo
201.685 367.62 202.055 367.35 202.305 366.8 cv
202.545 366.26 202.675 365.43 202.675 364.32 cv
202.675 363.22 202.545 362.39 202.305 361.84 cv
202.055 361.3 201.685 361.02 201.185 361.02 cv
200.685 361.02 200.305 361.3 200.065 361.84 cv
199.815 362.39 199.695 363.22 199.695 364.32 cv
199.695 365.43 199.815 366.26 200.065 366.8 cv
200.305 367.35 200.685 367.62 201.185 367.62 cv
201.185 368.09 mo
200.385 368.09 199.765 367.76 199.325 367.1 cv
198.885 366.44 198.665 365.52 198.665 364.32 cv
198.665 363.13 198.885 362.2 199.325 361.54 cv
199.765 360.88 200.385 360.54 201.185 360.54 cv
201.975 360.54 202.595 360.88 203.035 361.54 cv
203.475 362.2 203.705 363.13 203.705 364.32 cv
203.705 365.52 203.475 366.44 203.035 367.1 cv
202.595 367.76 201.975 368.09 201.185 368.09 cv
f
242.202 347.366 mo
242.202 353.366 li
f
242.202 347.366 mo
242.202 353.366 li
@
239.333 365.49 mo
239.333 361.61 li
236.843 365.49 li
239.333 365.49 li
241.483 367.96 mo
238.163 367.96 li
238.163 367.44 li
239.333 367.44 li
239.333 366.01 li
236.153 366.01 li
236.153 365.48 li
239.343 360.54 li
240.313 360.54 li
240.313 365.49 li
241.703 365.49 li
241.703 366.01 li
240.313 366.01 li
240.313 367.44 li
241.483 367.44 li
241.483 367.96 li
f
245.383 367.62 mo
245.883 367.62 246.253 367.35 246.503 366.8 cv
246.743 366.26 246.873 365.43 246.873 364.32 cv
246.873 363.22 246.743 362.39 246.503 361.84 cv
246.253 361.3 245.883 361.02 245.383 361.02 cv
244.883 361.02 244.503 361.3 244.263 361.84 cv
244.013 362.39 243.893 363.22 243.893 364.32 cv
243.893 365.43 244.013 366.26 244.263 366.8 cv
244.503 367.35 244.883 367.62 245.383 367.62 cv
245.383 368.09 mo
244.583 368.09 243.963 367.76 243.523 367.1 cv
243.083 366.44 242.863 365.52 242.863 364.32 cv
242.863 363.13 243.083 362.2 243.523 361.54 cv
243.963 360.88 244.583 360.54 245.383 360.54 cv
246.173 360.54 246.793 360.88 247.233 361.54 cv
247.673 362.2 247.903 363.13 247.903 364.32 cv
247.903 365.52 247.673 366.44 247.233 367.1 cv
246.793 367.76 246.173 368.09 245.383 368.09 cv
f
286.4 347.366 mo
286.4 353.366 li
f
286.4 347.366 mo
286.4 353.366 li
@
285.071 360.67 mo
285.071 361.47 li
281.731 361.47 li
281.731 363.56 li
281.891 363.44 282.091 363.36 282.321 363.3 cv
282.541 363.24 282.801 363.21 283.081 363.21 cv
283.861 363.21 284.481 363.43 284.941 363.87 cv
285.401 364.31 285.631 364.9 285.631 365.65 cv
285.631 366.43 285.401 367.03 284.941 367.45 cv
284.481 367.88 283.831 368.09 283.001 368.09 cv
282.661 368.09 282.321 368.05 281.971 367.97 cv
281.611 367.9 281.251 367.78 280.891 367.61 cv
280.891 366.19 li
281.441 366.19 li
281.471 366.66 281.621 367.02 281.881 367.26 cv
282.141 367.5 282.521 367.62 283.001 367.62 cv
283.511 367.62 283.901 367.45 284.181 367.11 cv
284.461 366.77 284.601 366.29 284.601 365.65 cv
284.601 365.02 284.461 364.54 284.191 364.2 cv
283.911 363.86 283.521 363.69 283.001 363.69 cv
282.701 363.69 282.441 363.75 282.221 363.85 cv
282.001 363.95 281.801 364.11 281.631 364.33 cv
281.211 364.33 li
281.211 360.67 li
285.071 360.67 li
f
289.581 367.62 mo
290.081 367.62 290.451 367.35 290.701 366.8 cv
290.941 366.26 291.071 365.43 291.071 364.32 cv
291.071 363.22 290.941 362.39 290.701 361.84 cv
290.451 361.3 290.081 361.02 289.581 361.02 cv
289.081 361.02 288.701 361.3 288.461 361.84 cv
288.211 362.39 288.091 363.22 288.091 364.32 cv
288.091 365.43 288.211 366.26 288.461 366.8 cv
288.701 367.35 289.081 367.62 289.581 367.62 cv
289.581 368.09 mo
288.781 368.09 288.161 367.76 287.721 367.1 cv
287.281 366.44 287.061 365.52 287.061 364.32 cv
287.061 363.13 287.281 362.2 287.721 361.54 cv
288.161 360.88 288.781 360.54 289.581 360.54 cv
290.371 360.54 290.991 360.88 291.431 361.54 cv
291.871 362.2 292.101 363.13 292.101 364.32 cv
292.101 365.52 291.871 366.44 291.431 367.1 cv
290.991 367.76 290.371 368.09 289.581 368.09 cv
f
330.598 347.366 mo
330.598 353.366 li
f
330.598 347.366 mo
330.598 353.366 li
@
327.509 367.62 mo
327.969 367.62 328.319 367.46 328.569 367.12 cv
328.809 366.78 328.939 366.3 328.939 365.66 cv
328.939 365.03 328.809 364.55 328.569 364.21 cv
328.319 363.87 327.969 363.7 327.509 363.7 cv
327.039 363.7 326.679 363.87 326.439 364.19 cv
326.199 364.52 326.079 364.99 326.079 365.6 cv
326.079 366.25 326.199 366.75 326.449 367.1 cv
326.689 367.45 327.049 367.62 327.509 367.62 cv
325.919 363.95 mo
326.139 363.71 326.389 363.52 326.669 363.4 cv
326.949 363.28 327.259 363.22 327.619 363.22 cv
328.339 363.22 328.919 363.44 329.339 363.88 cv
329.759 364.32 329.969 364.91 329.969 365.66 cv
329.969 366.4 329.739 366.99 329.289 367.43 cv
328.829 367.87 328.229 368.09 327.469 368.09 cv
326.649 368.09 326.009 367.79 325.569 367.18 cv
325.129 366.57 324.909 365.69 324.909 364.55 cv
324.909 363.28 325.169 362.29 325.689 361.59 cv
326.209 360.89 326.949 360.54 327.909 360.54 cv
328.169 360.54 328.439 360.57 328.719 360.61 cv
328.999 360.66 329.289 360.73 329.589 360.83 cv
329.589 362.03 li
329.039 362.03 li
328.999 361.71 328.869 361.46 328.659 361.28 cv
328.449 361.11 328.169 361.02 327.809 361.02 cv
327.169 361.02 326.699 361.26 326.389 361.74 cv
326.079 362.22 325.919 362.96 325.919 363.95 cv
f
333.779 367.62 mo
334.279 367.62 334.649 367.35 334.899 366.8 cv
335.139 366.26 335.269 365.43 335.269 364.32 cv
335.269 363.22 335.139 362.39 334.899 361.84 cv
334.649 361.3 334.279 361.02 333.779 361.02 cv
333.279 361.02 332.899 361.3 332.659 361.84 cv
332.409 362.39 332.289 363.22 332.289 364.32 cv
332.289 365.43 332.409 366.26 332.659 366.8 cv
332.899 367.35 333.279 367.62 333.779 367.62 cv
333.779 368.09 mo
332.979 368.09 332.359 367.76 331.919 367.1 cv
331.479 366.44 331.259 365.52 331.259 364.32 cv
331.259 363.13 331.479 362.2 331.919 361.54 cv
332.359 360.88 332.979 360.54 333.779 360.54 cv
334.569 360.54 335.189 360.88 335.629 361.54 cv
336.069 362.2 336.299 363.13 336.299 364.32 cv
336.299 365.52 336.069 366.44 335.629 367.1 cv
335.189 367.76 334.569 368.09 333.779 368.09 cv
f
374.796 347.366 mo
374.796 353.366 li
f
374.796 347.366 mo
374.796 353.366 li
@
374.077 361.17 mo
371.227 367.96 li
370.497 367.96 li
373.217 361.47 li
369.847 361.47 li
369.847 362.37 li
369.277 362.37 li
369.277 360.67 li
374.077 360.67 li
374.077 361.17 li
f
377.977 367.62 mo
378.477 367.62 378.847 367.35 379.097 366.8 cv
379.337 366.26 379.467 365.43 379.467 364.32 cv
379.467 363.22 379.337 362.39 379.097 361.84 cv
378.847 361.3 378.477 361.02 377.977 361.02 cv
377.477 361.02 377.097 361.3 376.857 361.84 cv
376.607 362.39 376.487 363.22 376.487 364.32 cv
376.487 365.43 376.607 366.26 376.857 366.8 cv
377.097 367.35 377.477 367.62 377.977 367.62 cv
377.977 368.09 mo
377.177 368.09 376.557 367.76 376.117 367.1 cv
375.677 366.44 375.457 365.52 375.457 364.32 cv
375.457 363.13 375.677 362.2 376.117 361.54 cv
376.557 360.88 377.177 360.54 377.977 360.54 cv
378.767 360.54 379.387 360.88 379.827 361.54 cv
380.267 362.2 380.497 363.13 380.497 364.32 cv
380.497 365.52 380.267 366.44 379.827 367.1 cv
379.387 367.76 378.767 368.09 377.977 368.09 cv
f
418.994 347.366 mo
418.994 353.366 li
f
418.994 347.366 mo
418.994 353.366 li
@
417.295 365.97 mo
417.295 365.45 417.165 365.05 416.905 364.76 cv
416.645 364.47 416.275 364.32 415.815 364.32 cv
415.345 364.32 414.985 364.47 414.725 364.76 cv
414.465 365.05 414.335 365.45 414.335 365.97 cv
414.335 366.49 414.465 366.9 414.725 367.19 cv
414.985 367.48 415.345 367.62 415.815 367.62 cv
416.275 367.62 416.645 367.48 416.905 367.19 cv
417.165 366.9 417.295 366.49 417.295 365.97 cv
417.095 362.43 mo
417.095 361.99 416.975 361.64 416.755 361.39 cv
416.525 361.15 416.215 361.02 415.815 361.02 cv
415.415 361.02 415.095 361.15 414.875 361.39 cv
414.645 361.64 414.535 361.99 414.535 362.43 cv
414.535 362.88 414.645 363.23 414.875 363.47 cv
415.095 363.72 415.415 363.84 415.815 363.84 cv
416.215 363.84 416.525 363.72 416.755 363.47 cv
416.975 363.23 417.095 362.88 417.095 362.43 cv
416.565 364.08 mo
417.115 364.16 417.545 364.36 417.855 364.69 cv
418.165 365.03 418.325 365.45 418.325 365.97 cv
418.325 366.65 418.105 367.18 417.675 367.54 cv
417.235 367.91 416.615 368.09 415.815 368.09 cv
415.005 368.09 414.385 367.91 413.955 367.54 cv
413.515 367.18 413.305 366.65 413.305 365.97 cv
413.305 365.45 413.455 365.03 413.765 364.69 cv
414.075 364.36 414.505 364.16 415.065 364.08 cv
414.565 364 414.195 363.81 413.935 363.52 cv
413.675 363.24 413.545 362.87 413.545 362.43 cv
413.545 361.85 413.745 361.39 414.145 361.05 cv
414.545 360.71 415.105 360.54 415.815 360.54 cv
416.515 360.54 417.075 360.71 417.475 361.05 cv
417.875 361.39 418.085 361.85 418.085 362.43 cv
418.085 362.87 417.945 363.24 417.685 363.52 cv
417.425 363.81 417.045 364 416.565 364.08 cv
f
422.175 367.62 mo
422.675 367.62 423.045 367.35 423.295 366.8 cv
423.535 366.26 423.665 365.43 423.665 364.32 cv
423.665 363.22 423.535 362.39 423.295 361.84 cv
423.045 361.3 422.675 361.02 422.175 361.02 cv
421.675 361.02 421.295 361.3 421.055 361.84 cv
420.805 362.39 420.685 363.22 420.685 364.32 cv
420.685 365.43 420.805 366.26 421.055 366.8 cv
421.295 367.35 421.675 367.62 422.175 367.62 cv
422.175 368.09 mo
421.375 368.09 420.755 367.76 420.315 367.1 cv
419.875 366.44 419.655 365.52 419.655 364.32 cv
419.655 363.13 419.875 362.2 420.315 361.54 cv
420.755 360.88 421.375 360.54 422.175 360.54 cv
422.965 360.54 423.585 360.88 424.025 361.54 cv
424.465 362.2 424.695 363.13 424.695 364.32 cv
424.695 365.52 424.465 366.44 424.025 367.1 cv
423.585 367.76 422.965 368.09 422.175 368.09 cv
f
463.192 347.366 mo
463.192 353.366 li
f
463.192 347.366 mo
463.192 353.366 li
@
461.513 364.69 mo
461.293 364.94 461.033 365.12 460.753 365.24 cv
460.473 365.36 460.153 365.42 459.803 365.42 cv
459.073 365.42 458.503 365.21 458.083 364.77 cv
457.663 364.33 457.463 363.74 457.463 362.98 cv
457.463 362.24 457.683 361.65 458.143 361.21 cv
458.593 360.77 459.203 360.54 459.963 360.54 cv
460.783 360.54 461.423 360.85 461.863 361.46 cv
462.303 362.08 462.523 362.95 462.523 364.09 cv
462.523 365.37 462.253 366.35 461.733 367.05 cv
461.213 367.75 460.473 368.09 459.523 368.09 cv
459.263 368.09 458.993 368.06 458.713 368.02 cv
458.433 367.98 458.143 367.91 457.843 367.81 cv
457.843 366.6 li
458.393 366.6 li
458.433 366.93 458.553 367.18 458.773 367.36 cv
458.983 367.54 459.263 367.62 459.623 367.62 cv
460.253 367.62 460.723 367.39 461.033 366.91 cv
461.333 366.43 461.493 365.69 461.513 364.69 cv
459.923 361.02 mo
459.463 361.02 459.103 361.19 458.863 361.53 cv
458.613 361.87 458.493 362.35 458.493 362.98 cv
458.493 363.62 458.613 364.1 458.863 364.44 cv
459.103 364.78 459.463 364.94 459.923 364.94 cv
460.383 364.94 460.733 364.78 460.983 364.45 cv
461.223 364.13 461.353 363.66 461.353 363.04 cv
461.353 362.4 461.223 361.9 460.983 361.55 cv
460.733 361.2 460.383 361.02 459.923 361.02 cv
f
466.373 367.62 mo
466.873 367.62 467.243 367.35 467.493 366.8 cv
467.733 366.26 467.863 365.43 467.863 364.32 cv
467.863 363.22 467.733 362.39 467.493 361.84 cv
467.243 361.3 466.873 361.02 466.373 361.02 cv
465.873 361.02 465.493 361.3 465.253 361.84 cv
465.003 362.39 464.883 363.22 464.883 364.32 cv
464.883 365.43 465.003 366.26 465.253 366.8 cv
465.493 367.35 465.873 367.62 466.373 367.62 cv
466.373 368.09 mo
465.573 368.09 464.953 367.76 464.513 367.1 cv
464.073 366.44 463.853 365.52 463.853 364.32 cv
463.853 363.13 464.073 362.2 464.513 361.54 cv
464.953 360.88 465.573 360.54 466.373 360.54 cv
467.163 360.54 467.783 360.88 468.223 361.54 cv
468.663 362.2 468.893 363.13 468.893 364.32 cv
468.893 365.52 468.663 366.44 468.223 367.1 cv
467.783 367.76 467.163 368.09 466.373 368.09 cv
f
507.39 347.366 mo
507.39 353.366 li
f
507.39 347.366 mo
507.39 353.366 li
@
499.271 367.96 mo
499.271 367.44 li
500.541 367.44 li
500.541 361.38 li
499.071 362.33 li
499.071 361.69 li
500.851 360.54 li
501.521 360.54 li
501.521 367.44 li
502.791 367.44 li
502.791 367.96 li
499.271 367.96 li
f
507.391 367.62 mo
507.891 367.62 508.261 367.35 508.511 366.8 cv
508.751 366.26 508.881 365.43 508.881 364.32 cv
508.881 363.22 508.751 362.39 508.511 361.84 cv
508.261 361.3 507.891 361.02 507.391 361.02 cv
506.891 361.02 506.511 361.3 506.271 361.84 cv
506.021 362.39 505.901 363.22 505.901 364.32 cv
505.901 365.43 506.021 366.26 506.271 366.8 cv
506.511 367.35 506.891 367.62 507.391 367.62 cv
507.391 368.09 mo
506.591 368.09 505.971 367.76 505.531 367.1 cv
505.091 366.44 504.871 365.52 504.871 364.32 cv
504.871 363.13 505.091 362.2 505.531 361.54 cv
505.971 360.88 506.591 360.54 507.391 360.54 cv
508.181 360.54 508.801 360.88 509.241 361.54 cv
509.681 362.2 509.911 363.13 509.911 364.32 cv
509.911 365.52 509.681 366.44 509.241 367.1 cv
508.801 367.76 508.181 368.09 507.391 368.09 cv
f
513.751 367.62 mo
514.251 367.62 514.621 367.35 514.871 366.8 cv
515.111 366.26 515.241 365.43 515.241 364.32 cv
515.241 363.22 515.111 362.39 514.871 361.84 cv
514.621 361.3 514.251 361.02 513.751 361.02 cv
513.251 361.02 512.871 361.3 512.631 361.84 cv
512.381 362.39 512.261 363.22 512.261 364.32 cv
512.261 365.43 512.381 366.26 512.631 366.8 cv
512.871 367.35 513.251 367.62 513.751 367.62 cv
513.751 368.09 mo
512.951 368.09 512.331 367.76 511.891 367.1 cv
511.451 366.44 511.231 365.52 511.231 364.32 cv
511.231 363.13 511.451 362.2 511.891 361.54 cv
512.331 360.88 512.951 360.54 513.751 360.54 cv
514.541 360.54 515.161 360.88 515.601 361.54 cv
516.041 362.2 516.271 363.13 516.271 364.32 cv
516.271 365.52 516.041 366.44 515.601 367.1 cv
515.161 367.76 514.541 368.09 513.751 368.09 cv
f
253.344 379.961 mo
253.344 379.288 253.19 378.784 252.91 378.421 cv
252.616 378.07 252.196 377.888 251.65 377.888 cv
251.272 377.888 250.908 377.987 250.572 378.182 cv
250.236 378.379 249.928 378.645 249.676 379.008 cv
249.41 379.372 249.2 379.82 249.046 380.324 cv
248.892 380.828 248.822 381.332 248.822 381.836 cv
248.822 382.48 248.962 382.97 249.256 383.306 cv
249.536 383.656 249.956 383.824 250.502 383.824 cv
250.894 383.824 251.258 383.741 251.594 383.544 cv
251.93 383.362 252.224 383.096 252.476 382.732 cv
252.728 382.368 252.938 381.921 253.106 381.417 cv
253.26 380.913 253.344 380.422 253.344 379.961 cv
249.452 378.182 mo
249.788 377.749 250.18 377.413 250.642 377.189 cv
251.09 376.965 251.608 376.839 252.168 376.839 cv
252.952 376.839 253.554 377.104 253.988 377.608 cv
254.422 378.126 254.646 378.84 254.646 379.764 cv
254.646 380.521 254.506 381.249 254.24 381.935 cv
253.96 382.62 253.582 383.237 253.078 383.768 cv
252.742 384.133 252.35 384.413 251.93 384.594 cv
251.51 384.763 251.062 384.861 250.6 384.861 cv
250.054 384.861 249.592 384.749 249.228 384.538 cv
248.864 384.314 248.584 383.978 248.402 383.53 cv
247.618 387.577 li
246.372 387.577 li
248.416 377.021 li
249.676 377.021 li
249.452 378.182 li
f
264.203 386.849 mo
263.083 386.344 262.243 385.56 261.683 384.496 cv
261.123 383.432 260.843 382.074 260.843 380.451 cv
260.843 378.827 261.123 377.482 261.683 376.405 cv
262.243 375.327 263.083 374.543 264.203 374.038 cv
264.203 374.711 li
263.503 375.201 262.999 375.887 262.691 376.754 cv
262.383 377.637 262.229 378.868 262.229 380.451 cv
262.229 382.047 262.383 383.279 262.691 384.146 cv
262.999 385.014 263.503 385.686 264.203 386.176 cv
264.203 386.849 li
f
268.657 379.484 mo
270.463 379.484 li
271.135 379.484 271.653 379.302 272.017 378.939 cv
272.367 378.574 272.549 378.043 272.549 377.342 cv
272.549 376.642 272.367 376.111 272.017 375.746 cv
271.653 375.383 271.135 375.201 270.463 375.201 cv
268.657 375.201 li
268.657 379.484 li
265.969 384.678 mo
265.969 383.951 li
267.271 383.951 li
267.271 375.201 li
265.969 375.201 li
265.969 374.473 li
270.799 374.473 li
271.807 374.473 272.619 374.738 273.221 375.257 cv
273.809 375.775 274.117 376.474 274.117 377.342 cv
274.117 378.224 273.809 378.924 273.221 379.443 cv
272.619 379.961 271.807 380.212 270.799 380.212 cv
268.657 380.212 li
268.657 383.951 li
270.239 383.951 li
270.239 384.678 li
265.969 384.678 li
f
282.207 381.178 mo
276.789 381.178 li
276.789 381.234 li
276.789 382.215 276.971 382.957 277.335 383.461 cv
277.699 383.965 278.245 384.202 278.973 384.202 cv
279.519 384.202 279.967 384.063 280.331 383.768 cv
280.681 383.488 280.933 383.055 281.073 382.48 cv
282.081 382.48 li
281.885 383.279 281.507 383.88 280.975 384.272 cv
280.429 384.664 279.715 384.861 278.847 384.861 cv
277.783 384.861 276.929 384.525 276.285 383.824 cv
275.641 383.125 275.319 382.201 275.319 381.038 cv
275.319 379.891 275.627 378.966 276.271 378.267 cv
276.901 377.566 277.727 377.216 278.763 377.216 cv
279.855 377.216 280.709 377.566 281.297 378.238 cv
281.885 378.91 282.179 379.891 282.207 381.178 cv
280.723 380.451 mo
280.695 379.611 280.513 378.966 280.177 378.533 cv
279.841 378.112 279.379 377.888 278.763 377.888 cv
278.175 377.888 277.727 378.112 277.391 378.547 cv
277.055 378.98 276.859 379.611 276.789 380.451 cv
280.723 380.451 li
f
289.596 377.398 mo
289.596 379.219 li
288.868 379.219 li
288.84 378.854 288.742 378.589 288.574 378.406 cv
288.392 378.238 288.126 378.141 287.79 378.141 cv
287.174 378.141 286.698 378.365 286.362 378.784 cv
286.026 379.219 285.872 379.835 285.872 380.633 cv
285.872 383.951 li
287.328 383.951 li
287.328 384.678 li
283.478 384.678 li
283.478 383.951 li
284.612 383.951 li
284.612 378.126 li
283.408 378.126 li
283.408 377.413 li
285.872 377.413 li
285.872 378.701 li
286.11 378.197 286.418 377.832 286.81 377.581 cv
287.202 377.342 287.678 377.216 288.238 377.216 cv
288.434 377.216 288.658 377.245 288.882 377.272 cv
289.106 377.301 289.344 377.342 289.596 377.398 cv
f
296.792 382.495 mo
296.61 383.279 296.274 383.866 295.77 384.258 cv
295.266 384.664 294.608 384.861 293.81 384.861 cv
292.746 384.861 291.906 384.525 291.262 383.824 cv
290.618 383.125 290.296 382.201 290.296 381.038 cv
290.296 379.891 290.618 378.966 291.262 378.267 cv
291.906 377.566 292.746 377.216 293.81 377.216 cv
294.258 377.216 294.72 377.272 295.182 377.384 cv
295.63 377.496 296.092 377.65 296.554 377.861 cv
296.554 379.723 li
295.826 379.723 li
295.728 379.092 295.518 378.63 295.196 378.336 cv
294.874 378.043 294.412 377.888 293.824 377.888 cv
293.138 377.888 292.62 378.155 292.284 378.686 cv
291.934 379.219 291.766 380.003 291.766 381.038 cv
291.766 382.103 291.934 382.887 292.284 383.418 cv
292.62 383.951 293.138 384.202 293.824 384.202 cv
294.356 384.202 294.79 384.063 295.112 383.783 cv
295.434 383.503 295.658 383.069 295.784 382.495 cv
296.792 382.495 li
f
305.025 381.178 mo
299.607 381.178 li
299.607 381.234 li
299.607 382.215 299.789 382.957 300.153 383.461 cv
300.517 383.965 301.063 384.202 301.791 384.202 cv
302.337 384.202 302.785 384.063 303.149 383.768 cv
303.499 383.488 303.751 383.055 303.891 382.48 cv
304.899 382.48 li
304.703 383.279 304.325 383.88 303.793 384.272 cv
303.247 384.664 302.533 384.861 301.665 384.861 cv
300.601 384.861 299.747 384.525 299.103 383.824 cv
298.459 383.125 298.137 382.201 298.137 381.038 cv
298.137 379.891 298.445 378.966 299.089 378.267 cv
299.719 377.566 300.545 377.216 301.581 377.216 cv
302.673 377.216 303.527 377.566 304.115 378.238 cv
304.703 378.91 304.997 379.891 305.025 381.178 cv
303.541 380.451 mo
303.513 379.611 303.331 378.966 302.995 378.533 cv
302.659 378.112 302.197 377.888 301.581 377.888 cv
300.993 377.888 300.545 378.112 300.209 378.547 cv
299.873 378.98 299.677 379.611 299.607 380.451 cv
303.541 380.451 li
f
306.296 384.678 mo
306.296 383.951 li
307.43 383.951 li
307.43 378.141 li
306.226 378.141 li
306.226 377.413 li
308.69 377.413 li
308.69 378.701 li
308.914 378.224 309.222 377.846 309.586 377.594 cv
309.95 377.342 310.384 377.216 310.888 377.216 cv
311.686 377.216 312.274 377.454 312.652 377.902 cv
313.03 378.365 313.226 379.078 313.226 380.059 cv
313.226 383.951 li
314.346 383.951 li
314.346 384.678 li
310.874 384.678 li
310.874 383.951 li
311.966 383.951 li
311.966 380.451 li
311.966 379.569 311.854 378.966 311.63 378.63 cv
311.406 378.294 311.028 378.126 310.482 378.126 cv
309.894 378.126 309.446 378.35 309.138 378.771 cv
308.83 379.204 308.69 379.82 308.69 380.633 cv
308.69 383.951 li
309.782 383.951 li
309.782 384.678 li
306.296 384.678 li
f
316.251 378.141 mo
315.145 378.141 li
315.145 377.413 li
316.251 377.413 li
316.251 375.159 li
317.511 375.159 li
317.511 377.413 li
319.877 377.413 li
319.877 378.141 li
317.511 378.141 li
317.511 382.76 li
317.511 383.376 317.567 383.783 317.693 383.951 cv
317.805 384.118 318.029 384.202 318.351 384.202 cv
318.673 384.202 318.911 384.104 319.065 383.909 cv
319.205 383.712 319.289 383.405 319.303 382.97 cv
320.255 382.97 li
320.213 383.642 320.031 384.118 319.709 384.413 cv
319.387 384.707 318.897 384.861 318.239 384.861 cv
317.511 384.861 316.993 384.693 316.699 384.384 cv
316.391 384.077 316.251 383.53 316.251 382.76 cv
316.251 378.141 li
f
321.359 386.849 mo
321.359 386.176 li
322.059 385.686 322.563 385.014 322.871 384.146 cv
323.179 383.279 323.333 382.047 323.333 380.451 cv
323.333 378.868 323.179 377.637 322.871 376.754 cv
322.563 375.887 322.059 375.201 321.359 374.711 cv
321.359 374.038 li
322.465 374.543 323.305 375.327 323.865 376.405 cv
324.425 377.482 324.719 378.827 324.719 380.451 cv
324.719 382.074 324.425 383.432 323.865 384.496 cv
323.305 385.56 322.465 386.344 321.359 386.849 cv
f
63.2 322.48 mo
57.2 322.48 li
f
63.2 322.48 mo
57.2 322.48 li
@
27.44 325.135 mo
29.05 325.135 li
29.05 319.575 li
27.3 319.925 li
27.3 319.025 li
29.04 318.675 li
30.03 318.675 li
30.03 325.135 li
31.64 325.135 li
31.64 325.965 li
27.44 325.965 li
27.44 325.135 li
f
35.7423 319.325 mo
35.2323 319.325 34.8523 319.575 34.5923 320.075 cv
34.3323 320.575 34.2123 321.325 34.2123 322.325 cv
34.2123 323.325 34.3323 324.075 34.5923 324.575 cv
34.8523 325.075 35.2323 325.325 35.7423 325.325 cv
36.2523 325.325 36.6323 325.075 36.8923 324.575 cv
37.1423 324.075 37.2723 323.325 37.2723 322.325 cv
37.2723 321.325 37.1423 320.575 36.8923 320.075 cv
36.6323 319.575 36.2523 319.325 35.7423 319.325 cv
35.7423 318.545 mo
36.5523 318.545 37.1723 318.875 37.6123 319.515 cv
38.0423 320.165 38.2623 321.105 38.2623 322.325 cv
38.2623 323.555 38.0423 324.495 37.6123 325.135 cv
37.1723 325.775 36.5523 326.095 35.7423 326.095 cv
34.9223 326.095 34.2923 325.775 33.8623 325.135 cv
33.4323 324.495 33.2223 323.555 33.2223 322.325 cv
33.2223 321.105 33.4323 320.165 33.8623 319.515 cv
34.2923 318.875 34.9223 318.545 35.7423 318.545 cv
f
46.2295 321.556 mo
48.6375 321.556 li
48.6375 322.137 li
45.3965 322.137 li
45.3965 321.556 li
45.6555 321.29 46.0125 320.926 46.4675 320.464 cv
46.9155 320.009 47.2025 319.715 47.3215 319.582 cv
47.5455 319.337 47.6995 319.127 47.7835 318.952 cv
47.8675 318.784 47.9165 318.609 47.9165 318.441 cv
47.9165 318.175 47.8185 317.951 47.6295 317.783 cv
47.4405 317.615 47.1955 317.524 46.8875 317.524 cv
46.6705 317.524 46.4395 317.566 46.2015 317.636 cv
45.9635 317.713 45.7045 317.825 45.4315 317.979 cv
45.4315 317.279 li
45.7115 317.167 45.9705 317.083 46.2085 317.027 cv
46.4465 316.971 46.6705 316.943 46.8735 316.943 cv
47.3985 316.943 47.8185 317.076 48.1335 317.342 cv
48.4485 317.608 48.6095 317.958 48.6095 318.399 cv
48.6095 318.609 48.5675 318.812 48.4905 318.994 cv
48.4135 319.183 48.2735 319.407 48.0635 319.659 cv
48.0075 319.729 47.8255 319.918 47.5175 320.233 cv
47.2095 320.548 46.7825 320.989 46.2295 321.556 cv
f
39.7623 319.652 mo
44.1443 319.652 li
44.1443 320.233 li
39.7623 320.233 li
39.7623 319.652 li
f
63.2 184.452 mo
57.2 184.452 li
f
63.2 184.452 mo
57.2 184.452 li
@
27.44 187.519 mo
29.05 187.519 li
29.05 181.959 li
27.3 182.309 li
27.3 181.409 li
29.04 181.059 li
30.03 181.059 li
30.03 187.519 li
31.64 187.519 li
31.64 188.349 li
27.44 188.349 li
27.44 187.519 li
f
35.7423 181.709 mo
35.2323 181.709 34.8523 181.959 34.5923 182.459 cv
34.3323 182.959 34.2123 183.709 34.2123 184.709 cv
34.2123 185.709 34.3323 186.459 34.5923 186.959 cv
34.8523 187.459 35.2323 187.709 35.7423 187.709 cv
36.2523 187.709 36.6323 187.459 36.8923 186.959 cv
37.1423 186.459 37.2723 185.709 37.2723 184.709 cv
37.2723 183.709 37.1423 182.959 36.8923 182.459 cv
36.6323 181.959 36.2523 181.709 35.7423 181.709 cv
35.7423 180.929 mo
36.5523 180.929 37.1723 181.259 37.6123 181.899 cv
38.0423 182.549 38.2623 183.489 38.2623 184.709 cv
38.2623 185.939 38.0423 186.879 37.6123 187.519 cv
37.1723 188.159 36.5523 188.479 35.7423 188.479 cv
34.9223 188.479 34.2923 188.159 33.8623 187.519 cv
33.4323 186.879 33.2223 185.939 33.2223 184.709 cv
33.2223 183.489 33.4323 182.549 33.8623 181.899 cv
34.2923 181.259 34.9223 180.929 35.7423 180.929 cv
f
45.7535 183.94 mo
46.8805 183.94 li
46.8805 180.048 li
45.6555 180.293 li
45.6555 179.663 li
46.8735 179.418 li
47.5665 179.418 li
47.5665 183.94 li
48.6935 183.94 li
48.6935 184.521 li
45.7535 184.521 li
45.7535 183.94 li
f
39.7623 182.036 mo
44.1443 182.036 li
44.1443 182.617 li
39.7623 182.617 li
39.7623 182.036 li
f
63.2 46.4238 mo
57.2 46.4238 li
f
63.2 46.4238 mo
57.2 46.4238 li
@
33.44 49.0781 mo
35.05 49.0781 li
35.05 43.5181 li
33.3 43.8681 li
33.3 42.9681 li
35.04 42.6181 li
36.03 42.6181 li
36.03 49.0781 li
37.64 49.0781 li
37.64 49.9081 li
33.44 49.9081 li
33.44 49.0781 li
f
41.7423 43.2681 mo
41.2323 43.2681 40.8523 43.5181 40.5923 44.0181 cv
40.3323 44.5181 40.2123 45.2681 40.2123 46.2681 cv
40.2123 47.2681 40.3323 48.0181 40.5923 48.5181 cv
40.8523 49.0181 41.2323 49.2681 41.7423 49.2681 cv
42.2523 49.2681 42.6323 49.0181 42.8923 48.5181 cv
43.1423 48.0181 43.2723 47.2681 43.2723 46.2681 cv
43.2723 45.2681 43.1423 44.5181 42.8923 44.0181 cv
42.6323 43.5181 42.2523 43.2681 41.7423 43.2681 cv
41.7423 42.4881 mo
42.5523 42.4881 43.1723 42.8181 43.6123 43.4581 cv
44.0423 44.1081 44.2623 45.0481 44.2623 46.2681 cv
44.2623 47.4981 44.0423 48.4381 43.6123 49.0781 cv
43.1723 49.7181 42.5523 50.0381 41.7423 50.0381 cv
40.9223 50.0381 40.2923 49.7181 39.8623 49.0781 cv
39.4323 48.4381 39.2223 47.4981 39.2223 46.2681 cv
39.2223 45.0481 39.4323 44.1081 39.8623 43.4581 cv
40.2923 42.8181 40.9223 42.4881 41.7423 42.4881 cv
f
47.2463 41.432 mo
46.8893 41.432 46.6233 41.607 46.4413 41.957 cv
46.2593 42.307 46.1753 42.832 46.1753 43.532 cv
46.1753 44.232 46.2593 44.757 46.4413 45.107 cv
46.6233 45.457 46.8893 45.632 47.2463 45.632 cv
47.6033 45.632 47.8693 45.457 48.0513 45.107 cv
48.2263 44.757 48.3173 44.232 48.3173 43.532 cv
48.3173 42.832 48.2263 42.307 48.0513 41.957 cv
47.8693 41.607 47.6033 41.432 47.2463 41.432 cv
47.2463 40.886 mo
47.8133 40.886 48.2473 41.117 48.5553 41.565 cv
48.8563 42.02 49.0103 42.678 49.0103 43.532 cv
49.0103 44.393 48.8563 45.051 48.5553 45.499 cv
48.2473 45.947 47.8133 46.171 47.2463 46.171 cv
46.6723 46.171 46.2313 45.947 45.9303 45.499 cv
45.6293 45.051 45.4823 44.393 45.4823 43.532 cv
45.4823 42.678 45.6293 42.02 45.9303 41.565 cv
46.2313 41.117 46.6723 40.886 47.2463 40.886 cv
f
63.2 343.861 mo
60.2 343.861 li
f
.5 lw
63.2 343.861 mo
60.2 343.861 li
@
63.2 335.857 mo
60.2 335.857 li
f
63.2 335.857 mo
60.2 335.857 li
@
63.2 328.796 mo
60.2 328.796 li
f
63.2 328.796 mo
60.2 328.796 li
@
63.2 280.93 mo
60.2 280.93 li
f
63.2 280.93 mo
60.2 280.93 li
@
63.2 256.624 mo
60.2 256.624 li
f
63.2 256.624 mo
60.2 256.624 li
@
63.2 239.379 mo
60.2 239.379 li
f
63.2 239.379 mo
60.2 239.379 li
@
63.2 226.003 mo
60.2 226.003 li
f
63.2 226.003 mo
60.2 226.003 li
@
63.2 215.073 mo
60.2 215.073 li
f
63.2 215.073 mo
60.2 215.073 li
@
63.2 205.833 mo
60.2 205.833 li
f
63.2 205.833 mo
60.2 205.833 li
@
63.2 197.828 mo
60.2 197.828 li
f
63.2 197.828 mo
60.2 197.828 li
@
63.2 190.768 mo
60.2 190.768 li
f
63.2 190.768 mo
60.2 190.768 li
@
63.2 142.901 mo
60.2 142.901 li
f
63.2 142.901 mo
60.2 142.901 li
@
63.2 118.596 mo
60.2 118.596 li
f
63.2 118.596 mo
60.2 118.596 li
@
63.2 101.351 mo
60.2 101.351 li
f
63.2 101.351 mo
60.2 101.351 li
@
63.2 87.9744 mo
60.2 87.9744 li
f
63.2 87.9744 mo
60.2 87.9744 li
@
63.2 77.0452 mo
60.2 77.0452 li
f
63.2 77.0452 mo
60.2 77.0452 li
@
63.2 67.8046 mo
60.2 67.8046 li
f
63.2 67.8046 mo
60.2 67.8046 li
@
63.2 59.8001 mo
60.2 59.8001 li
f
63.2 59.8001 mo
60.2 59.8001 li
@
63.2 52.7396 mo
60.2 52.7396 li
f
63.2 52.7396 mo
60.2 52.7396 li
@
17.8406 274.636 mo
17.1126 274.636 li
17.1126 273.334 li
8.36263 273.334 li
8.36263 274.636 li
7.63463 274.636 li
7.63463 266.418 li
9.90263 266.418 li
9.90263 267.258 li
8.47463 267.258 li
8.47463 271.948 li
11.8906 271.948 li
11.8906 268.602 li
10.6166 268.602 li
10.6166 267.762 li
14.0046 267.762 li
14.0046 268.602 li
12.7306 268.602 li
12.7306 271.948 li
17.0006 271.948 li
17.0006 267.146 li
15.5726 267.146 li
15.5726 266.306 li
17.8406 266.306 li
17.8406 274.636 li
f
17.4346 264.402 mo
15.7406 264.402 li
15.7406 263.674 li
16.2866 263.66 16.6926 263.492 16.9586 263.17 cv
17.2386 262.848 17.3646 262.372 17.3646 261.742 cv
17.3646 261.182 17.2666 260.748 17.0426 260.454 cv
16.8326 260.16 16.5246 260.006 16.1186 260.006 cv
15.8106 260.006 15.5446 260.118 15.3486 260.328 cv
15.1526 260.552 14.9426 261 14.7186 261.7 cv
14.4106 262.61 li
14.2146 263.24 13.9626 263.688 13.6546 263.968 cv
13.3606 264.248 12.9826 264.388 12.5066 264.388 cv
11.8486 264.388 11.3306 264.15 10.9526 263.66 cv
10.5746 263.17 10.3786 262.498 10.3786 261.63 cv
10.3786 261.252 10.4346 260.846 10.5326 260.426 cv
10.6306 260.006 10.7706 259.558 10.9666 259.11 cv
12.5486 259.11 li
12.5486 259.838 li
12.0866 259.866 11.7226 260.02 11.4566 260.328 cv
11.1906 260.636 11.0506 261.056 11.0506 261.588 cv
11.0506 262.12 11.1486 262.526 11.3306 262.792 cv
11.5266 263.072 11.8066 263.198 12.1706 263.198 cv
12.4786 263.198 12.7306 263.1 12.9126 262.89 cv
13.0946 262.694 13.2766 262.274 13.4726 261.658 cv
13.7806 260.664 li
14.0046 259.978 14.2706 259.488 14.5926 259.18 cv
14.9146 258.872 15.3206 258.718 15.8246 258.718 cv
16.5246 258.718 17.0566 258.984 17.4486 259.516 cv
17.8406 260.048 18.0226 260.762 18.0226 261.686 cv
18.0226 262.162 17.9666 262.61 17.8826 263.058 cv
17.7986 263.506 17.6446 263.954 17.4346 264.402 cv
f
11.3026 256.49 mo
11.3026 257.596 li
10.5746 257.596 li
10.5746 256.49 li
8.32063 256.49 li
8.32063 255.23 li
10.5746 255.23 li
10.5746 252.864 li
11.3026 252.864 li
11.3026 255.23 li
15.9226 255.23 li
16.5386 255.23 16.9446 255.174 17.1126 255.048 cv
17.2806 254.936 17.3646 254.712 17.3646 254.39 cv
17.3646 254.068 17.2666 253.83 17.0706 253.676 cv
16.8746 253.536 16.5666 253.452 16.1326 253.438 cv
16.1326 252.486 li
16.8046 252.528 17.2806 252.71 17.5746 253.032 cv
17.8686 253.354 18.0226 253.844 18.0226 254.502 cv
18.0226 255.23 17.8546 255.748 17.5466 256.042 cv
17.2386 256.35 16.6926 256.49 15.9226 256.49 cv
11.3026 256.49 li
f
8.32063 251.018 mo
8.11063 251.018 7.92863 250.948 7.77463 250.794 cv
7.62063 250.64 7.53663 250.458 7.53663 250.234 cv
7.53663 250.038 7.62063 249.856 7.77463 249.702 cv
7.92863 249.548 8.11063 249.464 8.32063 249.464 cv
8.54463 249.464 8.72663 249.548 8.86663 249.688 cv
9.02063 249.842 9.09063 250.024 9.09063 250.234 cv
9.09063 250.458 9.02063 250.64 8.86663 250.794 cv
8.72663 250.948 8.54463 251.018 8.32063 251.018 cv
17.1126 249.408 mo
17.1126 248.218 li
17.8406 248.218 li
17.8406 251.872 li
17.1126 251.872 li
17.1126 250.668 li
11.3026 250.668 li
11.3026 251.872 li
10.5746 251.872 li
10.5746 249.408 li
17.1126 249.408 li
f
11.9886 240.646 mo
11.4566 240.408 11.0646 240.1 10.7846 239.722 cv
10.5186 239.344 10.3786 238.91 10.3786 238.406 cv
10.3786 237.65 10.6166 237.076 11.0926 236.698 cv
11.5686 236.334 12.2686 236.138 13.2206 236.138 cv
17.1126 236.138 li
17.1126 235.004 li
17.8406 235.004 li
17.8406 238.49 li
17.1126 238.49 li
17.1126 237.398 li
13.3606 237.398 li
12.6326 237.398 12.1006 237.51 11.7786 237.734 cv
11.4706 237.958 11.3026 238.308 11.3026 238.812 cv
11.3026 239.372 11.5266 239.806 11.9466 240.1 cv
12.3666 240.394 12.9826 240.534 13.7946 240.534 cv
17.1126 240.534 li
17.1126 239.442 li
17.8406 239.442 li
17.8406 242.886 li
17.1126 242.886 li
17.1126 241.794 li
13.3186 241.794 li
12.5906 241.794 12.0726 241.906 11.7646 242.13 cv
11.4566 242.354 11.3026 242.704 11.3026 243.208 cv
11.3026 243.768 11.5266 244.202 11.9466 244.496 cv
12.3666 244.79 12.9826 244.93 13.7946 244.93 cv
17.1126 244.93 li
17.1126 243.838 li
17.8406 243.838 li
17.8406 247.324 li
17.1126 247.324 li
17.1126 246.19 li
11.2886 246.19 li
11.2886 247.394 li
10.5746 247.394 li
10.5746 244.93 li
11.8626 244.93 li
11.3866 244.706 11.0086 244.412 10.7566 244.048 cv
10.5046 243.684 10.3786 243.278 10.3786 242.816 cv
10.3786 242.256 10.5186 241.794 10.7986 241.416 cv
11.0786 241.038 11.4846 240.786 11.9886 240.646 cv
f
15.5586 229.051 mo
14.0186 229.051 li
14.0186 230.675 li
14.0186 231.305 14.1586 231.767 14.4246 232.075 cv
14.7046 232.383 15.1106 232.523 15.6566 232.523 cv
16.1606 232.523 16.5666 232.369 16.8606 232.061 cv
17.1686 231.753 17.3086 231.333 17.3086 230.801 cv
17.3086 230.283 17.1546 229.863 16.8326 229.541 cv
16.5106 229.219 16.0906 229.051 15.5586 229.051 cv
13.3046 227.791 mo
17.1126 227.791 li
17.1126 226.671 li
17.8406 226.671 li
17.8406 229.051 li
17.0566 229.051 li
17.3926 229.331 17.6446 229.653 17.7986 230.017 cv
17.9386 230.381 18.0226 230.815 18.0226 231.291 cv
18.0226 232.103 17.8126 232.747 17.3926 233.223 cv
16.9726 233.699 16.3846 233.923 15.6566 233.923 cv
14.9146 233.923 14.3406 233.657 13.9206 233.111 cv
13.5006 232.579 13.2906 231.809 13.2906 230.815 cv
13.2906 229.051 li
12.7866 229.051 li
12.2406 229.051 11.8206 229.219 11.5126 229.555 cv
11.2046 229.891 11.0506 230.367 11.0506 230.969 cv
11.0506 231.473 11.1766 231.865 11.4006 232.159 cv
11.6246 232.467 11.9606 232.649 12.4086 232.719 cv
12.4086 233.363 li
10.9386 233.363 li
10.7566 232.929 10.6166 232.509 10.5186 232.089 cv
10.4346 231.683 10.3786 231.277 10.3786 230.885 cv
10.3786 229.877 10.6306 229.121 11.1346 228.589 cv
11.6386 228.057 12.3526 227.791 13.3046 227.791 cv
f
11.3026 224.764 mo
11.3026 225.87 li
10.5746 225.87 li
10.5746 224.764 li
8.32063 224.764 li
8.32063 223.504 li
10.5746 223.504 li
10.5746 221.138 li
11.3026 221.138 li
11.3026 223.504 li
15.9226 223.504 li
16.5386 223.504 16.9446 223.448 17.1126 223.322 cv
17.2806 223.21 17.3646 222.986 17.3646 222.664 cv
17.3646 222.342 17.2666 222.104 17.0706 221.95 cv
16.8746 221.81 16.5666 221.726 16.1326 221.712 cv
16.1326 220.76 li
16.8046 220.802 17.2806 220.984 17.5746 221.306 cv
17.8686 221.628 18.0226 222.118 18.0226 222.776 cv
18.0226 223.504 17.8546 224.022 17.5466 224.316 cv
17.2386 224.624 16.6926 224.764 15.9226 224.764 cv
11.3026 224.764 li
f
14.3406 213.062 mo
14.3406 218.48 li
14.3966 218.48 li
15.3766 218.48 16.1186 218.298 16.6226 217.934 cv
17.1266 217.57 17.3646 217.024 17.3646 216.296 cv
17.3646 215.75 17.2246 215.302 16.9306 214.938 cv
16.6506 214.588 16.2166 214.336 15.6426 214.196 cv
15.6426 213.188 li
16.4406 213.384 17.0426 213.762 17.4346 214.294 cv
17.8266 214.84 18.0226 215.554 18.0226 216.422 cv
18.0226 217.486 17.6866 218.34 16.9866 218.984 cv
16.2866 219.628 15.3626 219.95 14.2006 219.95 cv
13.0526 219.95 12.1286 219.642 11.4286 218.998 cv
10.7286 218.368 10.3786 217.542 10.3786 216.506 cv
10.3786 215.414 10.7286 214.56 11.4006 213.972 cv
12.0726 213.384 13.0526 213.09 14.3406 213.062 cv
13.6126 214.546 mo
12.7726 214.574 12.1286 214.756 11.6946 215.092 cv
11.2746 215.428 11.0506 215.89 11.0506 216.506 cv
11.0506 217.094 11.2746 217.542 11.7086 217.878 cv
12.1426 218.214 12.7726 218.41 13.6126 218.48 cv
13.6126 214.546 li
f
17.1126 205.015 mo
17.1126 203.811 li
17.8406 203.811 li
17.8406 206.275 li
16.7066 206.275 li
17.1686 206.527 17.5046 206.835 17.7146 207.213 cv
17.9106 207.605 18.0226 208.067 18.0226 208.627 cv
18.0226 209.523 17.6726 210.265 16.9726 210.825 cv
16.2726 211.385 15.3486 211.665 14.2006 211.665 cv
13.0666 211.665 12.1426 211.385 11.4426 210.825 cv
10.7426 210.265 10.3786 209.523 10.3786 208.627 cv
10.3786 208.067 10.4906 207.605 10.7006 207.213 cv
10.9246 206.835 11.2606 206.527 11.7086 206.275 cv
7.92863 206.275 li
7.92863 207.465 li
7.20063 207.465 li
7.20063 205.015 li
17.1126 205.015 li
14.5646 206.275 mo
13.8506 206.275 li
12.9826 206.275 12.3246 206.443 11.8626 206.779 cv
11.4006 207.115 11.1626 207.605 11.1626 208.235 cv
11.1626 208.879 11.4286 209.369 11.9326 209.705 cv
12.4366 210.041 13.1926 210.195 14.2006 210.195 cv
15.2086 210.195 15.9786 210.041 16.4826 209.705 cv
17.0006 209.369 17.2526 208.879 17.2526 208.235 cv
17.2526 207.605 17.0286 207.115 16.5666 206.779 cv
16.1186 206.443 15.4466 206.275 14.5646 206.275 cv
f
11.3446 192.709 mo
11.2886 192.849 11.2326 192.989 11.1906 193.157 cv
11.1626 193.325 11.1346 193.493 11.1346 193.675 cv
11.1346 194.347 11.4006 194.935 11.9046 195.439 cv
12.4086 195.943 13.0946 196.265 13.9346 196.433 cv
17.8406 197.203 li
17.8406 198.463 li
10.1826 196.965 li
10.1826 195.705 li
11.3726 195.943 li
10.9386 195.621 10.6026 195.229 10.3646 194.753 cv
10.1266 194.291 10.0006 193.801 10.0006 193.269 cv
10.0006 193.143 10.0146 193.017 10.0286 192.877 cv
10.0426 192.737 10.0706 192.611 10.0986 192.471 cv
11.3446 192.709 li
f
20.0106 184.281 mo
19.5066 185.401 18.7226 186.241 17.6586 186.801 cv
16.5946 187.361 15.2366 187.641 13.6126 187.641 cv
11.9886 187.641 10.6446 187.361 9.56663 186.801 cv
8.48863 186.241 7.70463 185.401 7.20063 184.281 cv
7.87263 184.281 li
8.36263 184.981 9.04863 185.485 9.91663 185.793 cv
10.7986 186.101 12.0306 186.255 13.6126 186.255 cv
15.2086 186.255 16.4406 186.101 17.3086 185.793 cv
18.1766 185.485 18.8486 184.981 19.3386 184.281 cv
20.0106 184.281 li
f
17.1126 180.415 mo
17.1126 179.225 li
17.8406 179.225 li
17.8406 182.879 li
17.1126 182.879 li
17.1126 181.675 li
7.92863 181.675 li
7.92863 182.879 li
7.20063 182.879 li
7.20063 180.415 li
17.1126 180.415 li
f
17.3646 174.593 mo
17.3646 173.921 17.0986 173.417 16.5666 173.067 cv
16.0346 172.731 15.2506 172.549 14.2006 172.549 cv
13.1646 172.549 12.3806 172.731 11.8486 173.067 cv
11.3166 173.417 11.0506 173.921 11.0506 174.593 cv
11.0506 175.265 11.3166 175.783 11.8486 176.119 cv
12.3806 176.469 13.1646 176.637 14.2006 176.637 cv
15.2506 176.637 16.0346 176.469 16.5666 176.119 cv
17.0986 175.783 17.3646 175.265 17.3646 174.593 cv
18.0226 174.593 mo
18.0226 175.657 17.6866 176.497 16.9866 177.141 cv
16.2866 177.785 15.3626 178.107 14.2006 178.107 cv
13.0526 178.107 12.1286 177.799 11.4286 177.155 cv
10.7286 176.511 10.3786 175.657 10.3786 174.593 cv
10.3786 173.529 10.7286 172.689 11.4286 172.045 cv
12.1286 171.401 13.0526 171.079 14.2006 171.079 cv
15.3626 171.079 16.2866 171.401 16.9866 172.045 cv
17.6866 172.689 18.0226 173.529 18.0226 174.593 cv
f
11.3026 163.029 mo
17.6866 163.029 li
18.7226 163.029 19.5206 163.323 20.0806 163.897 cv
20.6406 164.471 20.9346 165.283 20.9346 166.347 cv
20.9346 166.823 20.8926 167.285 20.8086 167.719 cv
20.7246 168.167 20.5846 168.587 20.4166 168.979 cv
18.8906 168.979 li
18.8906 168.321 li
19.3666 168.237 19.7026 168.055 19.9266 167.747 cv
20.1506 167.439 20.2626 167.005 20.2626 166.431 cv
20.2626 165.703 20.0526 165.157 19.6326 164.807 cv
19.2126 164.471 18.5546 164.289 17.6866 164.289 cv
16.7066 164.289 li
17.1686 164.541 17.5046 164.849 17.7146 165.227 cv
17.9106 165.619 18.0226 166.081 18.0226 166.641 cv
18.0226 167.537 17.6726 168.279 16.9726 168.839 cv
16.2726 169.399 15.3486 169.679 14.2006 169.679 cv
13.0666 169.679 12.1426 169.399 11.4426 168.839 cv
10.7426 168.279 10.3786 167.537 10.3786 166.641 cv
10.3786 166.081 10.4906 165.619 10.7006 165.227 cv
10.9246 164.849 11.2606 164.541 11.7086 164.289 cv
10.5746 164.289 li
10.5746 161.825 li
11.3026 161.825 li
11.3026 163.029 li
13.8506 164.289 mo
12.9826 164.289 12.3246 164.457 11.8626 164.793 cv
11.4006 165.129 11.1626 165.619 11.1626 166.249 cv
11.1626 166.893 11.4286 167.383 11.9326 167.719 cv
12.4366 168.055 13.1926 168.209 14.2006 168.209 cv
15.2086 168.209 15.9786 168.055 16.4826 167.719 cv
17.0006 167.383 17.2526 166.893 17.2526 166.249 cv
17.2526 165.619 17.0286 165.129 16.5666 164.793 cv
16.1186 164.457 15.4466 164.289 14.5646 164.289 cv
13.8506 164.289 li
f
13.5566 160.801 mo
13.5566 157.301 li
14.6206 157.301 li
14.6206 160.801 li
13.5566 160.801 li
f
17.4346 155.902 mo
15.7406 155.902 li
15.7406 155.174 li
16.2866 155.16 16.6926 154.992 16.9586 154.67 cv
17.2386 154.348 17.3646 153.872 17.3646 153.242 cv
17.3646 152.682 17.2666 152.248 17.0426 151.954 cv
16.8326 151.66 16.5246 151.506 16.1186 151.506 cv
15.8106 151.506 15.5446 151.618 15.3486 151.828 cv
15.1526 152.052 14.9426 152.5 14.7186 153.2 cv
14.4106 154.11 li
14.2146 154.74 13.9626 155.188 13.6546 155.468 cv
13.3606 155.748 12.9826 155.888 12.5066 155.888 cv
11.8486 155.888 11.3306 155.65 10.9526 155.16 cv
10.5746 154.67 10.3786 153.998 10.3786 153.13 cv
10.3786 152.752 10.4346 152.346 10.5326 151.926 cv
10.6306 151.506 10.7706 151.058 10.9666 150.61 cv
12.5486 150.61 li
12.5486 151.338 li
12.0866 151.366 11.7226 151.52 11.4566 151.828 cv
11.1906 152.136 11.0506 152.556 11.0506 153.088 cv
11.0506 153.62 11.1486 154.026 11.3306 154.292 cv
11.5266 154.572 11.8066 154.698 12.1706 154.698 cv
12.4786 154.698 12.7306 154.6 12.9126 154.39 cv
13.0946 154.194 13.2766 153.774 13.4726 153.158 cv
13.7806 152.164 li
14.0046 151.478 14.2706 150.988 14.5926 150.68 cv
14.9146 150.372 15.3206 150.218 15.8246 150.218 cv
16.5246 150.218 17.0566 150.484 17.4486 151.016 cv
17.8406 151.548 18.0226 152.262 18.0226 153.186 cv
18.0226 153.662 17.9666 154.11 17.8826 154.558 cv
17.7986 155.006 17.6446 155.454 17.4346 155.902 cv
f
15.6566 142.306 mo
16.4406 142.488 17.0286 142.824 17.4206 143.328 cv
17.8266 143.832 18.0226 144.49 18.0226 145.288 cv
18.0226 146.352 17.6866 147.192 16.9866 147.836 cv
16.2866 148.48 15.3626 148.802 14.2006 148.802 cv
13.0526 148.802 12.1286 148.48 11.4286 147.836 cv
10.7286 147.192 10.3786 146.352 10.3786 145.288 cv
10.3786 144.84 10.4346 144.378 10.5466 143.916 cv
10.6586 143.468 10.8126 143.006 11.0226 142.544 cv
12.8846 142.544 li
12.8846 143.272 li
12.2546 143.37 11.7926 143.58 11.4986 143.902 cv
11.2046 144.224 11.0506 144.686 11.0506 145.274 cv
11.0506 145.96 11.3166 146.478 11.8486 146.814 cv
12.3806 147.164 13.1646 147.332 14.2006 147.332 cv
15.2646 147.332 16.0486 147.164 16.5806 146.814 cv
17.1126 146.478 17.3646 145.96 17.3646 145.274 cv
17.3646 144.742 17.2246 144.308 16.9446 143.986 cv
16.6646 143.664 16.2306 143.44 15.6566 143.314 cv
15.6566 142.306 li
f
15.5586 136.089 mo
14.0186 136.089 li
14.0186 137.713 li
14.0186 138.343 14.1586 138.805 14.4246 139.113 cv
14.7046 139.421 15.1106 139.561 15.6566 139.561 cv
16.1606 139.561 16.5666 139.407 16.8606 139.099 cv
17.1686 138.791 17.3086 138.371 17.3086 137.839 cv
17.3086 137.321 17.1546 136.901 16.8326 136.579 cv
16.5106 136.257 16.0906 136.089 15.5586 136.089 cv
13.3046 134.829 mo
17.1126 134.829 li
17.1126 133.709 li
17.8406 133.709 li
17.8406 136.089 li
17.0566 136.089 li
17.3926 136.369 17.6446 136.691 17.7986 137.055 cv
17.9386 137.419 18.0226 137.853 18.0226 138.329 cv
18.0226 139.141 17.8126 139.785 17.3926 140.261 cv
16.9726 140.737 16.3846 140.961 15.6566 140.961 cv
14.9146 140.961 14.3406 140.695 13.9206 140.149 cv
13.5006 139.617 13.2906 138.847 13.2906 137.853 cv
13.2906 136.089 li
12.7866 136.089 li
12.2406 136.089 11.8206 136.257 11.5126 136.593 cv
11.2046 136.929 11.0506 137.405 11.0506 138.007 cv
11.0506 138.511 11.1766 138.903 11.4006 139.197 cv
11.6246 139.505 11.9606 139.687 12.4086 139.757 cv
12.4086 140.401 li
10.9386 140.401 li
10.7566 139.967 10.6166 139.547 10.5186 139.127 cv
10.4346 138.721 10.3786 138.315 10.3786 137.923 cv
10.3786 136.915 10.6306 136.159 11.1346 135.627 cv
11.6386 135.095 12.3526 134.829 13.3046 134.829 cv
f
17.1126 130.444 mo
17.1126 129.254 li
17.8406 129.254 li
17.8406 132.908 li
17.1126 132.908 li
17.1126 131.704 li
7.92863 131.704 li
7.92863 132.908 li
7.20063 132.908 li
7.20063 130.444 li
17.1126 130.444 li
f
14.3406 121.249 mo
14.3406 126.667 li
14.3966 126.667 li
15.3766 126.667 16.1186 126.485 16.6226 126.121 cv
17.1266 125.757 17.3646 125.211 17.3646 124.483 cv
17.3646 123.937 17.2246 123.489 16.9306 123.125 cv
16.6506 122.775 16.2166 122.523 15.6426 122.383 cv
15.6426 121.375 li
16.4406 121.571 17.0426 121.949 17.4346 122.481 cv
17.8266 123.027 18.0226 123.741 18.0226 124.609 cv
18.0226 125.673 17.6866 126.527 16.9866 127.171 cv
16.2866 127.815 15.3626 128.137 14.2006 128.137 cv
13.0526 128.137 12.1286 127.829 11.4286 127.185 cv
10.7286 126.555 10.3786 125.729 10.3786 124.693 cv
10.3786 123.601 10.7286 122.747 11.4006 122.159 cv
12.0726 121.571 13.0526 121.277 14.3406 121.249 cv
13.6126 122.733 mo
12.7726 122.761 12.1286 122.943 11.6946 123.279 cv
11.2746 123.615 11.0506 124.077 11.0506 124.693 cv
11.0506 125.281 11.2746 125.729 11.7086 126.065 cv
12.1426 126.401 12.7726 126.597 13.6126 126.667 cv
13.6126 122.733 li
f
20.0106 119.558 mo
19.3386 119.558 li
18.8486 118.858 18.1766 118.354 17.3086 118.046 cv
16.4406 117.738 15.2086 117.584 13.6126 117.584 cv
12.0306 117.584 10.7986 117.738 9.91663 118.046 cv
9.04863 118.354 8.36263 118.858 7.87263 119.558 cv
7.20063 119.558 li
7.70463 118.452 8.48863 117.612 9.56663 117.052 cv
10.6446 116.492 11.9886 116.198 13.6126 116.198 cv
15.2366 116.198 16.5946 116.492 17.6586 117.052 cv
18.7226 117.612 19.5066 118.452 20.0106 119.558 cv
f
gsave
63.5168 319.228 mo
67.303 319.228 li
67.303 315.442 li
63.5168 315.442 li
cp
clp
65.4099 318.519 mo
65.724 318.519 66.0253 318.394 66.2474 318.172 cv
66.4695 317.95 66.5943 317.649 66.5943 317.335 cv
66.5943 317.021 66.4695 316.719 66.2474 316.497 cv
66.0253 316.275 65.724 316.15 65.4099 316.15 cv
65.0958 316.15 64.7945 316.275 64.5724 316.497 cv
64.3503 316.719 64.2255 317.021 64.2255 317.335 cv
64.2255 317.649 64.3503 317.95 64.5724 318.172 cv
64.7945 318.394 65.0958 318.519 65.4099 318.519 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
65.4099 318.519 mo
65.724 318.519 66.0253 318.394 66.2474 318.172 cv
66.4695 317.95 66.5943 317.649 66.5943 317.335 cv
66.5943 317.021 66.4695 316.719 66.2474 316.497 cv
66.0253 316.275 65.724 316.15 65.4099 316.15 cv
65.0958 316.15 64.7945 316.275 64.5724 316.497 cv
64.3503 316.719 64.2255 317.021 64.2255 317.335 cv
64.2255 317.649 64.3503 317.95 64.5724 318.172 cv
64.7945 318.394 65.0958 318.519 65.4099 318.519 cv
cp
@
grestore
gsave
67.9366 319.047 mo
71.7228 319.047 li
71.7228 315.261 li
67.9366 315.261 li
cp
clp
69.8297 318.338 mo
70.1438 318.338 70.4451 318.214 70.6672 317.992 cv
70.8893 317.769 71.0141 317.468 71.0141 317.154 cv
71.0141 316.84 70.8893 316.539 70.6672 316.317 cv
70.4451 316.094 70.1438 315.97 69.8297 315.97 cv
69.5156 315.97 69.2143 316.094 68.9922 316.317 cv
68.7701 316.539 68.6453 316.84 68.6453 317.154 cv
68.6453 317.468 68.7701 317.769 68.9922 317.992 cv
69.2143 318.214 69.5156 318.338 69.8297 318.338 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
69.8297 318.338 mo
70.1438 318.338 70.4451 318.214 70.6672 317.992 cv
70.8893 317.769 71.0141 317.468 71.0141 317.154 cv
71.0141 316.84 70.8893 316.539 70.6672 316.317 cv
70.4451 316.094 70.1438 315.97 69.8297 315.97 cv
69.5156 315.97 69.2143 316.094 68.9922 316.317 cv
68.7701 316.539 68.6453 316.84 68.6453 317.154 cv
68.6453 317.468 68.7701 317.769 68.9922 317.992 cv
69.2143 318.214 69.5156 318.338 69.8297 318.338 cv
cp
@
grestore
gsave
72.3564 318.12 mo
76.1426 318.12 li
76.1426 314.334 li
72.3564 314.334 li
cp
clp
74.2495 317.411 mo
74.5636 317.411 74.8649 317.286 75.087 317.064 cv
75.3091 316.842 75.4339 316.541 75.4339 316.227 cv
75.4339 315.913 75.3091 315.611 75.087 315.389 cv
74.8649 315.167 74.5636 315.042 74.2495 315.042 cv
73.9354 315.042 73.6341 315.167 73.412 315.389 cv
73.1899 315.611 73.0651 315.913 73.0651 316.227 cv
73.0651 316.541 73.1899 316.842 73.412 317.064 cv
73.6341 317.286 73.9354 317.411 74.2495 317.411 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
74.2495 317.411 mo
74.5636 317.411 74.8649 317.286 75.087 317.064 cv
75.3091 316.842 75.4339 316.541 75.4339 316.227 cv
75.4339 315.913 75.3091 315.611 75.087 315.389 cv
74.8649 315.167 74.5636 315.042 74.2495 315.042 cv
73.9354 315.042 73.6341 315.167 73.412 315.389 cv
73.1899 315.611 73.0651 315.913 73.0651 316.227 cv
73.0651 316.541 73.1899 316.842 73.412 317.064 cv
73.6341 317.286 73.9354 317.411 74.2495 317.411 cv
cp
@
grestore
gsave
76.7762 317.958 mo
80.5624 317.958 li
80.5624 314.172 li
76.7762 314.172 li
cp
clp
78.6693 317.249 mo
78.9834 317.249 79.2847 317.124 79.5068 316.902 cv
79.7289 316.68 79.8537 316.379 79.8537 316.065 cv
79.8537 315.751 79.7289 315.449 79.5068 315.227 cv
79.2847 315.005 78.9834 314.88 78.6693 314.88 cv
78.3552 314.88 78.0539 315.005 77.8318 315.227 cv
77.6097 315.449 77.4849 315.751 77.4849 316.065 cv
77.4849 316.379 77.6097 316.68 77.8318 316.902 cv
78.0539 317.124 78.3552 317.249 78.6693 317.249 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
78.6693 317.249 mo
78.9834 317.249 79.2847 317.124 79.5068 316.902 cv
79.7289 316.68 79.8537 316.379 79.8537 316.065 cv
79.8537 315.751 79.7289 315.449 79.5068 315.227 cv
79.2847 315.005 78.9834 314.88 78.6693 314.88 cv
78.3552 314.88 78.0539 315.005 77.8318 315.227 cv
77.6097 315.449 77.4849 315.751 77.4849 316.065 cv
77.4849 316.379 77.6097 316.68 77.8318 316.902 cv
78.0539 317.124 78.3552 317.249 78.6693 317.249 cv
cp
@
grestore
gsave
81.196 315.96 mo
84.9822 315.96 li
84.9822 312.174 li
81.196 312.174 li
cp
clp
83.0891 315.251 mo
83.4032 315.251 83.7045 315.126 83.9266 314.904 cv
84.1487 314.682 84.2735 314.381 84.2735 314.067 cv
84.2735 313.753 84.1487 313.451 83.9266 313.229 cv
83.7045 313.007 83.4032 312.882 83.0891 312.882 cv
82.775 312.882 82.4737 313.007 82.2516 313.229 cv
82.0295 313.451 81.9047 313.753 81.9047 314.067 cv
81.9047 314.381 82.0295 314.682 82.2516 314.904 cv
82.4737 315.126 82.775 315.251 83.0891 315.251 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
83.0891 315.251 mo
83.4032 315.251 83.7045 315.126 83.9266 314.904 cv
84.1487 314.682 84.2735 314.381 84.2735 314.067 cv
84.2735 313.753 84.1487 313.451 83.9266 313.229 cv
83.7045 313.007 83.4032 312.882 83.0891 312.882 cv
82.775 312.882 82.4737 313.007 82.2516 313.229 cv
82.0295 313.451 81.9047 313.753 81.9047 314.067 cv
81.9047 314.381 82.0295 314.682 82.2516 314.904 cv
82.4737 315.126 82.775 315.251 83.0891 315.251 cv
cp
@
grestore
gsave
85.6158 315.539 mo
89.402 315.539 li
89.402 311.753 li
85.6158 311.753 li
cp
clp
87.5089 314.831 mo
87.823 314.831 88.1243 314.706 88.3464 314.484 cv
88.5685 314.262 88.6933 313.96 88.6933 313.646 cv
88.6933 313.332 88.5685 313.031 88.3464 312.809 cv
88.1243 312.587 87.823 312.462 87.5089 312.462 cv
87.1948 312.462 86.8935 312.587 86.6714 312.809 cv
86.4493 313.031 86.3245 313.332 86.3245 313.646 cv
86.3245 313.96 86.4493 314.262 86.6714 314.484 cv
86.8935 314.706 87.1948 314.831 87.5089 314.831 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
87.5089 314.831 mo
87.823 314.831 88.1243 314.706 88.3464 314.484 cv
88.5685 314.262 88.6933 313.96 88.6933 313.646 cv
88.6933 313.332 88.5685 313.031 88.3464 312.809 cv
88.1243 312.587 87.823 312.462 87.5089 312.462 cv
87.1948 312.462 86.8935 312.587 86.6714 312.809 cv
86.4493 313.031 86.3245 313.332 86.3245 313.646 cv
86.3245 313.96 86.4493 314.262 86.6714 314.484 cv
86.8935 314.706 87.1948 314.831 87.5089 314.831 cv
cp
@
grestore
gsave
90.0356 314.712 mo
93.8218 314.712 li
93.8218 310.926 li
90.0356 310.926 li
cp
clp
91.9287 314.003 mo
92.2428 314.003 92.5441 313.878 92.7662 313.656 cv
92.9883 313.434 93.1131 313.133 93.1131 312.819 cv
93.1131 312.505 92.9883 312.203 92.7662 311.981 cv
92.5441 311.759 92.2428 311.634 91.9287 311.634 cv
91.6146 311.634 91.3133 311.759 91.0912 311.981 cv
90.8691 312.203 90.7443 312.505 90.7443 312.819 cv
90.7443 313.133 90.8691 313.434 91.0912 313.656 cv
91.3133 313.878 91.6146 314.003 91.9287 314.003 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
91.9287 314.003 mo
92.2428 314.003 92.5441 313.878 92.7662 313.656 cv
92.9883 313.434 93.1131 313.133 93.1131 312.819 cv
93.1131 312.505 92.9883 312.203 92.7662 311.981 cv
92.5441 311.759 92.2428 311.634 91.9287 311.634 cv
91.6146 311.634 91.3133 311.759 91.0912 311.981 cv
90.8691 312.203 90.7443 312.505 90.7443 312.819 cv
90.7443 313.133 90.8691 313.434 91.0912 313.656 cv
91.3133 313.878 91.6146 314.003 91.9287 314.003 cv
cp
@
grestore
gsave
94.4554 311.465 mo
98.2416 311.465 li
98.2416 307.679 li
94.4554 307.679 li
cp
clp
96.3485 310.756 mo
96.6626 310.756 96.9639 310.632 97.186 310.41 cv
97.4081 310.187 97.5329 309.886 97.5329 309.572 cv
97.5329 309.258 97.4081 308.957 97.186 308.735 cv
96.9639 308.512 96.6626 308.388 96.3485 308.388 cv
96.0344 308.388 95.7331 308.512 95.511 308.735 cv
95.2889 308.957 95.1641 309.258 95.1641 309.572 cv
95.1641 309.886 95.2889 310.187 95.511 310.41 cv
95.7331 310.632 96.0344 310.756 96.3485 310.756 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
96.3485 310.756 mo
96.6626 310.756 96.9639 310.632 97.186 310.41 cv
97.4081 310.187 97.5329 309.886 97.5329 309.572 cv
97.5329 309.258 97.4081 308.957 97.186 308.735 cv
96.9639 308.512 96.6626 308.388 96.3485 308.388 cv
96.0344 308.388 95.7331 308.512 95.511 308.735 cv
95.2889 308.957 95.1641 309.258 95.1641 309.572 cv
95.1641 309.886 95.2889 310.187 95.511 310.41 cv
95.7331 310.632 96.0344 310.756 96.3485 310.756 cv
cp
@
grestore
gsave
98.8752 308.745 mo
102.661 308.745 li
102.661 304.958 li
98.8752 304.958 li
cp
clp
100.768 308.036 mo
101.082 308.036 101.384 307.911 101.606 307.689 cv
101.828 307.467 101.953 307.166 101.953 306.852 cv
101.953 306.537 101.828 306.236 101.606 306.014 cv
101.384 305.792 101.082 305.667 100.768 305.667 cv
100.454 305.667 100.153 305.792 99.9308 306.014 cv
99.7087 306.236 99.5839 306.537 99.5839 306.852 cv
99.5839 307.166 99.7087 307.467 99.9308 307.689 cv
100.153 307.911 100.454 308.036 100.768 308.036 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
100.768 308.036 mo
101.082 308.036 101.384 307.911 101.606 307.689 cv
101.828 307.467 101.953 307.166 101.953 306.852 cv
101.953 306.537 101.828 306.236 101.606 306.014 cv
101.384 305.792 101.082 305.667 100.768 305.667 cv
100.454 305.667 100.153 305.792 99.9308 306.014 cv
99.7087 306.236 99.5839 306.537 99.5839 306.852 cv
99.5839 307.166 99.7087 307.467 99.9308 307.689 cv
100.153 307.911 100.454 308.036 100.768 308.036 cv
cp
@
grestore
gsave
103.295 307.667 mo
107.081 307.667 li
107.081 303.881 li
103.295 303.881 li
cp
clp
105.188 306.958 mo
105.502 306.958 105.803 306.833 106.026 306.611 cv
106.248 306.389 106.372 306.088 106.372 305.774 cv
106.372 305.46 106.248 305.158 106.026 304.936 cv
105.803 304.714 105.502 304.589 105.188 304.589 cv
104.874 304.589 104.573 304.714 104.351 304.936 cv
104.129 305.158 104.004 305.46 104.004 305.774 cv
104.004 306.088 104.129 306.389 104.351 306.611 cv
104.573 306.833 104.874 306.958 105.188 306.958 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
105.188 306.958 mo
105.502 306.958 105.803 306.833 106.026 306.611 cv
106.248 306.389 106.372 306.088 106.372 305.774 cv
106.372 305.46 106.248 305.158 106.026 304.936 cv
105.803 304.714 105.502 304.589 105.188 304.589 cv
104.874 304.589 104.573 304.714 104.351 304.936 cv
104.129 305.158 104.004 305.46 104.004 305.774 cv
104.004 306.088 104.129 306.389 104.351 306.611 cv
104.573 306.833 104.874 306.958 105.188 306.958 cv
cp
@
grestore
gsave
107.715 304.556 mo
111.501 304.556 li
111.501 300.77 li
107.715 300.77 li
cp
clp
109.608 303.847 mo
109.922 303.847 110.223 303.723 110.445 303.501 cv
110.667 303.278 110.792 302.977 110.792 302.663 cv
110.792 302.349 110.667 302.048 110.445 301.826 cv
110.223 301.603 109.922 301.479 109.608 301.479 cv
109.294 301.479 108.993 301.603 108.77 301.826 cv
108.548 302.048 108.424 302.349 108.424 302.663 cv
108.424 302.977 108.548 303.278 108.77 303.501 cv
108.993 303.723 109.294 303.847 109.608 303.847 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
109.608 303.847 mo
109.922 303.847 110.223 303.723 110.445 303.501 cv
110.667 303.278 110.792 302.977 110.792 302.663 cv
110.792 302.349 110.667 302.048 110.445 301.826 cv
110.223 301.603 109.922 301.479 109.608 301.479 cv
109.294 301.479 108.993 301.603 108.77 301.826 cv
108.548 302.048 108.424 302.349 108.424 302.663 cv
108.424 302.977 108.548 303.278 108.77 303.501 cv
108.993 303.723 109.294 303.847 109.608 303.847 cv
cp
@
grestore
gsave
112.135 301.58 mo
115.921 301.58 li
115.921 297.794 li
112.135 297.794 li
cp
clp
114.028 300.871 mo
114.342 300.871 114.643 300.747 114.865 300.525 cv
115.087 300.302 115.212 300.001 115.212 299.687 cv
115.212 299.373 115.087 299.072 114.865 298.85 cv
114.643 298.628 114.342 298.503 114.028 298.503 cv
113.714 298.503 113.412 298.628 113.19 298.85 cv
112.968 299.072 112.843 299.373 112.843 299.687 cv
112.843 300.001 112.968 300.302 113.19 300.525 cv
113.412 300.747 113.714 300.871 114.028 300.871 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
114.028 300.871 mo
114.342 300.871 114.643 300.747 114.865 300.525 cv
115.087 300.302 115.212 300.001 115.212 299.687 cv
115.212 299.373 115.087 299.072 114.865 298.85 cv
114.643 298.628 114.342 298.503 114.028 298.503 cv
113.714 298.503 113.412 298.628 113.19 298.85 cv
112.968 299.072 112.843 299.373 112.843 299.687 cv
112.843 300.001 112.968 300.302 113.19 300.525 cv
113.412 300.747 113.714 300.871 114.028 300.871 cv
cp
@
grestore
gsave
116.554 299.092 mo
120.341 299.092 li
120.341 295.306 li
116.554 295.306 li
cp
clp
118.448 298.383 mo
118.762 298.383 119.063 298.258 119.285 298.036 cv
119.507 297.814 119.632 297.513 119.632 297.199 cv
119.632 296.885 119.507 296.583 119.285 296.361 cv
119.063 296.139 118.762 296.014 118.448 296.014 cv
118.133 296.014 117.832 296.139 117.61 296.361 cv
117.388 296.583 117.263 296.885 117.263 297.199 cv
117.263 297.513 117.388 297.814 117.61 298.036 cv
117.832 298.258 118.133 298.383 118.448 298.383 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
118.448 298.383 mo
118.762 298.383 119.063 298.258 119.285 298.036 cv
119.507 297.814 119.632 297.513 119.632 297.199 cv
119.632 296.885 119.507 296.583 119.285 296.361 cv
119.063 296.139 118.762 296.014 118.448 296.014 cv
118.133 296.014 117.832 296.139 117.61 296.361 cv
117.388 296.583 117.263 296.885 117.263 297.199 cv
117.263 297.513 117.388 297.814 117.61 298.036 cv
117.832 298.258 118.133 298.383 118.448 298.383 cv
cp
@
grestore
gsave
120.974 296.486 mo
124.76 296.486 li
124.76 292.7 li
120.974 292.7 li
cp
clp
122.867 295.777 mo
123.181 295.777 123.483 295.653 123.705 295.431 cv
123.927 295.208 124.052 294.907 124.052 294.593 cv
124.052 294.279 123.927 293.978 123.705 293.756 cv
123.483 293.533 123.181 293.409 122.867 293.409 cv
122.553 293.409 122.252 293.533 122.03 293.756 cv
121.808 293.978 121.683 294.279 121.683 294.593 cv
121.683 294.907 121.808 295.208 122.03 295.431 cv
122.252 295.653 122.553 295.777 122.867 295.777 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
122.867 295.777 mo
123.181 295.777 123.483 295.653 123.705 295.431 cv
123.927 295.208 124.052 294.907 124.052 294.593 cv
124.052 294.279 123.927 293.978 123.705 293.756 cv
123.483 293.533 123.181 293.409 122.867 293.409 cv
122.553 293.409 122.252 293.533 122.03 293.756 cv
121.808 293.978 121.683 294.279 121.683 294.593 cv
121.683 294.907 121.808 295.208 122.03 295.431 cv
122.252 295.653 122.553 295.777 122.867 295.777 cv
cp
@
grestore
gsave
125.394 292.955 mo
129.18 292.955 li
129.18 289.168 li
125.394 289.168 li
cp
clp
127.287 292.246 mo
127.601 292.246 127.902 292.121 128.125 291.899 cv
128.347 291.677 128.471 291.376 128.471 291.062 cv
128.471 290.748 128.347 290.446 128.125 290.224 cv
127.902 290.002 127.601 289.877 127.287 289.877 cv
126.973 289.877 126.672 290.002 126.45 290.224 cv
126.228 290.446 126.103 290.748 126.103 291.062 cv
126.103 291.376 126.228 291.677 126.45 291.899 cv
126.672 292.121 126.973 292.246 127.287 292.246 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
127.287 292.246 mo
127.601 292.246 127.902 292.121 128.125 291.899 cv
128.347 291.677 128.471 291.376 128.471 291.062 cv
128.471 290.748 128.347 290.446 128.125 290.224 cv
127.902 290.002 127.601 289.877 127.287 289.877 cv
126.973 289.877 126.672 290.002 126.45 290.224 cv
126.228 290.446 126.103 290.748 126.103 291.062 cv
126.103 291.376 126.228 291.677 126.45 291.899 cv
126.672 292.121 126.973 292.246 127.287 292.246 cv
cp
@
grestore
gsave
129.814 287.372 mo
133.6 287.372 li
133.6 283.586 li
129.814 283.586 li
cp
clp
131.707 286.663 mo
132.021 286.663 132.322 286.538 132.544 286.316 cv
132.766 286.094 132.891 285.793 132.891 285.479 cv
132.891 285.165 132.766 284.863 132.544 284.641 cv
132.322 284.419 132.021 284.294 131.707 284.294 cv
131.393 284.294 131.092 284.419 130.869 284.641 cv
130.647 284.863 130.523 285.165 130.523 285.479 cv
130.523 285.793 130.647 286.094 130.869 286.316 cv
131.092 286.538 131.393 286.663 131.707 286.663 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
131.707 286.663 mo
132.021 286.663 132.322 286.538 132.544 286.316 cv
132.766 286.094 132.891 285.793 132.891 285.479 cv
132.891 285.165 132.766 284.863 132.544 284.641 cv
132.322 284.419 132.021 284.294 131.707 284.294 cv
131.393 284.294 131.092 284.419 130.869 284.641 cv
130.647 284.863 130.523 285.165 130.523 285.479 cv
130.523 285.793 130.647 286.094 130.869 286.316 cv
131.092 286.538 131.393 286.663 131.707 286.663 cv
cp
@
grestore
gsave
134.234 288.938 mo
138.02 288.938 li
138.02 285.151 li
134.234 285.151 li
cp
clp
136.127 288.229 mo
136.441 288.229 136.742 288.104 136.964 287.882 cv
137.186 287.66 137.311 287.358 137.311 287.044 cv
137.311 286.73 137.186 286.429 136.964 286.207 cv
136.742 285.985 136.441 285.86 136.127 285.86 cv
135.813 285.86 135.511 285.985 135.289 286.207 cv
135.067 286.429 134.942 286.73 134.942 287.044 cv
134.942 287.358 135.067 287.66 135.289 287.882 cv
135.511 288.104 135.813 288.229 136.127 288.229 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
136.127 288.229 mo
136.441 288.229 136.742 288.104 136.964 287.882 cv
137.186 287.66 137.311 287.358 137.311 287.044 cv
137.311 286.73 137.186 286.429 136.964 286.207 cv
136.742 285.985 136.441 285.86 136.127 285.86 cv
135.813 285.86 135.511 285.985 135.289 286.207 cv
135.067 286.429 134.942 286.73 134.942 287.044 cv
134.942 287.358 135.067 287.66 135.289 287.882 cv
135.511 288.104 135.813 288.229 136.127 288.229 cv
cp
@
grestore
gsave
138.653 284.132 mo
142.44 284.132 li
142.44 280.346 li
138.653 280.346 li
cp
clp
140.547 283.424 mo
140.861 283.424 141.162 283.299 141.384 283.077 cv
141.606 282.855 141.731 282.553 141.731 282.239 cv
141.731 281.925 141.606 281.624 141.384 281.402 cv
141.162 281.18 140.861 281.055 140.547 281.055 cv
140.232 281.055 139.931 281.18 139.709 281.402 cv
139.487 281.624 139.362 281.925 139.362 282.239 cv
139.362 282.553 139.487 282.855 139.709 283.077 cv
139.931 283.299 140.232 283.424 140.547 283.424 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
140.547 283.424 mo
140.861 283.424 141.162 283.299 141.384 283.077 cv
141.606 282.855 141.731 282.553 141.731 282.239 cv
141.731 281.925 141.606 281.624 141.384 281.402 cv
141.162 281.18 140.861 281.055 140.547 281.055 cv
140.232 281.055 139.931 281.18 139.709 281.402 cv
139.487 281.624 139.362 281.925 139.362 282.239 cv
139.362 282.553 139.487 282.855 139.709 283.077 cv
139.931 283.299 140.232 283.424 140.547 283.424 cv
cp
@
grestore
gsave
143.073 279.942 mo
146.859 279.942 li
146.859 276.156 li
143.073 276.156 li
cp
clp
144.966 279.234 mo
145.28 279.234 145.582 279.109 145.804 278.887 cv
146.026 278.665 146.151 278.363 146.151 278.049 cv
146.151 277.735 146.026 277.434 145.804 277.212 cv
145.582 276.99 145.28 276.865 144.966 276.865 cv
144.652 276.865 144.351 276.99 144.129 277.212 cv
143.907 277.434 143.782 277.735 143.782 278.049 cv
143.782 278.363 143.907 278.665 144.129 278.887 cv
144.351 279.109 144.652 279.234 144.966 279.234 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
144.966 279.234 mo
145.28 279.234 145.582 279.109 145.804 278.887 cv
146.026 278.665 146.151 278.363 146.151 278.049 cv
146.151 277.735 146.026 277.434 145.804 277.212 cv
145.582 276.99 145.28 276.865 144.966 276.865 cv
144.652 276.865 144.351 276.99 144.129 277.212 cv
143.907 277.434 143.782 277.735 143.782 278.049 cv
143.782 278.363 143.907 278.665 144.129 278.887 cv
144.351 279.109 144.652 279.234 144.966 279.234 cv
cp
@
grestore
gsave
147.493 276.198 mo
151.279 276.198 li
151.279 272.411 li
147.493 272.411 li
cp
clp
149.386 275.489 mo
149.7 275.489 150.001 275.364 150.224 275.142 cv
150.446 274.92 150.57 274.619 150.57 274.305 cv
150.57 273.991 150.446 273.689 150.224 273.467 cv
150.001 273.245 149.7 273.12 149.386 273.12 cv
149.072 273.12 148.771 273.245 148.549 273.467 cv
148.327 273.689 148.202 273.991 148.202 274.305 cv
148.202 274.619 148.327 274.92 148.549 275.142 cv
148.771 275.364 149.072 275.489 149.386 275.489 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
149.386 275.489 mo
149.7 275.489 150.001 275.364 150.224 275.142 cv
150.446 274.92 150.57 274.619 150.57 274.305 cv
150.57 273.991 150.446 273.689 150.224 273.467 cv
150.001 273.245 149.7 273.12 149.386 273.12 cv
149.072 273.12 148.771 273.245 148.549 273.467 cv
148.327 273.689 148.202 273.991 148.202 274.305 cv
148.202 274.619 148.327 274.92 148.549 275.142 cv
148.771 275.364 149.072 275.489 149.386 275.489 cv
cp
@
grestore
gsave
151.913 272.675 mo
155.699 272.675 li
155.699 268.889 li
151.913 268.889 li
cp
clp
153.806 271.966 mo
154.12 271.966 154.421 271.841 154.643 271.619 cv
154.865 271.397 154.99 271.096 154.99 270.782 cv
154.99 270.468 154.865 270.166 154.643 269.944 cv
154.421 269.722 154.12 269.597 153.806 269.597 cv
153.492 269.597 153.191 269.722 152.968 269.944 cv
152.746 270.166 152.622 270.468 152.622 270.782 cv
152.622 271.096 152.746 271.397 152.968 271.619 cv
153.191 271.841 153.492 271.966 153.806 271.966 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
153.806 271.966 mo
154.12 271.966 154.421 271.841 154.643 271.619 cv
154.865 271.397 154.99 271.096 154.99 270.782 cv
154.99 270.468 154.865 270.166 154.643 269.944 cv
154.421 269.722 154.12 269.597 153.806 269.597 cv
153.492 269.597 153.191 269.722 152.968 269.944 cv
152.746 270.166 152.622 270.468 152.622 270.782 cv
152.622 271.096 152.746 271.397 152.968 271.619 cv
153.191 271.841 153.492 271.966 153.806 271.966 cv
cp
@
grestore
gsave
156.333 269.83 mo
160.119 269.83 li
160.119 266.044 li
156.333 266.044 li
cp
clp
158.226 269.121 mo
158.54 269.121 158.841 268.997 159.063 268.775 cv
159.285 268.552 159.41 268.251 159.41 267.937 cv
159.41 267.623 159.285 267.322 159.063 267.1 cv
158.841 266.877 158.54 266.753 158.226 266.753 cv
157.912 266.753 157.61 266.877 157.388 267.1 cv
157.166 267.322 157.041 267.623 157.041 267.937 cv
157.041 268.251 157.166 268.552 157.388 268.775 cv
157.61 268.997 157.912 269.121 158.226 269.121 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
158.226 269.121 mo
158.54 269.121 158.841 268.997 159.063 268.775 cv
159.285 268.552 159.41 268.251 159.41 267.937 cv
159.41 267.623 159.285 267.322 159.063 267.1 cv
158.841 266.877 158.54 266.753 158.226 266.753 cv
157.912 266.753 157.61 266.877 157.388 267.1 cv
157.166 267.322 157.041 267.623 157.041 267.937 cv
157.041 268.251 157.166 268.552 157.388 268.775 cv
157.61 268.997 157.912 269.121 158.226 269.121 cv
cp
@
grestore
gsave
160.752 266.026 mo
164.539 266.026 li
164.539 262.24 li
160.752 262.24 li
cp
clp
162.646 265.317 mo
162.96 265.317 163.261 265.193 163.483 264.97 cv
163.705 264.748 163.83 264.447 163.83 264.133 cv
163.83 263.819 163.705 263.518 163.483 263.295 cv
163.261 263.073 162.96 262.949 162.646 262.949 cv
162.331 262.949 162.03 263.073 161.808 263.295 cv
161.586 263.518 161.461 263.819 161.461 264.133 cv
161.461 264.447 161.586 264.748 161.808 264.97 cv
162.03 265.193 162.331 265.317 162.646 265.317 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
162.646 265.317 mo
162.96 265.317 163.261 265.193 163.483 264.97 cv
163.705 264.748 163.83 264.447 163.83 264.133 cv
163.83 263.819 163.705 263.518 163.483 263.295 cv
163.261 263.073 162.96 262.949 162.646 262.949 cv
162.331 262.949 162.03 263.073 161.808 263.295 cv
161.586 263.518 161.461 263.819 161.461 264.133 cv
161.461 264.447 161.586 264.748 161.808 264.97 cv
162.03 265.193 162.331 265.317 162.646 265.317 cv
cp
@
grestore
gsave
165.172 263.753 mo
168.958 263.753 li
168.958 259.967 li
165.172 259.967 li
cp
clp
167.065 263.045 mo
167.379 263.045 167.681 262.92 167.903 262.698 cv
168.125 262.476 168.25 262.174 168.25 261.86 cv
168.25 261.546 168.125 261.245 167.903 261.023 cv
167.681 260.801 167.379 260.676 167.065 260.676 cv
166.751 260.676 166.45 260.801 166.228 261.023 cv
166.006 261.245 165.881 261.546 165.881 261.86 cv
165.881 262.174 166.006 262.476 166.228 262.698 cv
166.45 262.92 166.751 263.045 167.065 263.045 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
167.065 263.045 mo
167.379 263.045 167.681 262.92 167.903 262.698 cv
168.125 262.476 168.25 262.174 168.25 261.86 cv
168.25 261.546 168.125 261.245 167.903 261.023 cv
167.681 260.801 167.379 260.676 167.065 260.676 cv
166.751 260.676 166.45 260.801 166.228 261.023 cv
166.006 261.245 165.881 261.546 165.881 261.86 cv
165.881 262.174 166.006 262.476 166.228 262.698 cv
166.45 262.92 166.751 263.045 167.065 263.045 cv
cp
@
grestore
gsave
169.592 260.016 mo
173.378 260.016 li
173.378 256.23 li
169.592 256.23 li
cp
clp
171.485 259.307 mo
171.799 259.307 172.1 259.183 172.323 258.96 cv
172.545 258.738 172.669 258.437 172.669 258.123 cv
172.669 257.809 172.545 257.508 172.323 257.285 cv
172.1 257.063 171.799 256.939 171.485 256.939 cv
171.171 256.939 170.87 257.063 170.648 257.285 cv
170.426 257.508 170.301 257.809 170.301 258.123 cv
170.301 258.437 170.426 258.738 170.648 258.96 cv
170.87 259.183 171.171 259.307 171.485 259.307 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
171.485 259.307 mo
171.799 259.307 172.1 259.183 172.323 258.96 cv
172.545 258.738 172.669 258.437 172.669 258.123 cv
172.669 257.809 172.545 257.508 172.323 257.285 cv
172.1 257.063 171.799 256.939 171.485 256.939 cv
171.171 256.939 170.87 257.063 170.648 257.285 cv
170.426 257.508 170.301 257.809 170.301 258.123 cv
170.301 258.437 170.426 258.738 170.648 258.96 cv
170.87 259.183 171.171 259.307 171.485 259.307 cv
cp
@
grestore
gsave
174.012 258.699 mo
177.798 258.699 li
177.798 254.913 li
174.012 254.913 li
cp
clp
175.905 257.99 mo
176.219 257.99 176.52 257.865 176.742 257.643 cv
176.964 257.421 177.089 257.12 177.089 256.806 cv
177.089 256.492 176.964 256.19 176.742 255.968 cv
176.52 255.746 176.219 255.621 175.905 255.621 cv
175.591 255.621 175.29 255.746 175.067 255.968 cv
174.845 256.19 174.721 256.492 174.721 256.806 cv
174.721 257.12 174.845 257.421 175.067 257.643 cv
175.29 257.865 175.591 257.99 175.905 257.99 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
175.905 257.99 mo
176.219 257.99 176.52 257.865 176.742 257.643 cv
176.964 257.421 177.089 257.12 177.089 256.806 cv
177.089 256.492 176.964 256.19 176.742 255.968 cv
176.52 255.746 176.219 255.621 175.905 255.621 cv
175.591 255.621 175.29 255.746 175.067 255.968 cv
174.845 256.19 174.721 256.492 174.721 256.806 cv
174.721 257.12 174.845 257.421 175.067 257.643 cv
175.29 257.865 175.591 257.99 175.905 257.99 cv
cp
@
grestore
gsave
178.432 255.381 mo
182.218 255.381 li
182.218 251.595 li
178.432 251.595 li
cp
clp
180.325 254.672 mo
180.639 254.672 180.94 254.548 181.162 254.326 cv
181.384 254.103 181.509 253.802 181.509 253.488 cv
181.509 253.174 181.384 252.873 181.162 252.651 cv
180.94 252.428 180.639 252.304 180.325 252.304 cv
180.011 252.304 179.709 252.428 179.487 252.651 cv
179.265 252.873 179.14 253.174 179.14 253.488 cv
179.14 253.802 179.265 254.103 179.487 254.326 cv
179.709 254.548 180.011 254.672 180.325 254.672 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
180.325 254.672 mo
180.639 254.672 180.94 254.548 181.162 254.326 cv
181.384 254.103 181.509 253.802 181.509 253.488 cv
181.509 253.174 181.384 252.873 181.162 252.651 cv
180.94 252.428 180.639 252.304 180.325 252.304 cv
180.011 252.304 179.709 252.428 179.487 252.651 cv
179.265 252.873 179.14 253.174 179.14 253.488 cv
179.14 253.802 179.265 254.103 179.487 254.326 cv
179.709 254.548 180.011 254.672 180.325 254.672 cv
cp
@
grestore
gsave
182.851 253.464 mo
186.638 253.464 li
186.638 249.678 li
182.851 249.678 li
cp
clp
184.745 252.755 mo
185.059 252.755 185.36 252.631 185.582 252.409 cv
185.804 252.186 185.929 251.885 185.929 251.571 cv
185.929 251.257 185.804 250.956 185.582 250.734 cv
185.36 250.512 185.059 250.387 184.745 250.387 cv
184.43 250.387 184.129 250.512 183.907 250.734 cv
183.685 250.956 183.56 251.257 183.56 251.571 cv
183.56 251.885 183.685 252.186 183.907 252.409 cv
184.129 252.631 184.43 252.755 184.745 252.755 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
184.745 252.755 mo
185.059 252.755 185.36 252.631 185.582 252.409 cv
185.804 252.186 185.929 251.885 185.929 251.571 cv
185.929 251.257 185.804 250.956 185.582 250.734 cv
185.36 250.512 185.059 250.387 184.745 250.387 cv
184.43 250.387 184.129 250.512 183.907 250.734 cv
183.685 250.956 183.56 251.257 183.56 251.571 cv
183.56 251.885 183.685 252.186 183.907 252.409 cv
184.129 252.631 184.43 252.755 184.745 252.755 cv
cp
@
grestore
gsave
187.271 250.308 mo
191.057 250.308 li
191.057 246.522 li
187.271 246.522 li
cp
clp
189.164 249.599 mo
189.478 249.599 189.78 249.475 190.002 249.253 cv
190.224 249.03 190.349 248.729 190.349 248.415 cv
190.349 248.101 190.224 247.8 190.002 247.578 cv
189.78 247.355 189.478 247.231 189.164 247.231 cv
188.85 247.231 188.549 247.355 188.327 247.578 cv
188.105 247.8 187.98 248.101 187.98 248.415 cv
187.98 248.729 188.105 249.03 188.327 249.253 cv
188.549 249.475 188.85 249.599 189.164 249.599 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
189.164 249.599 mo
189.478 249.599 189.78 249.475 190.002 249.253 cv
190.224 249.03 190.349 248.729 190.349 248.415 cv
190.349 248.101 190.224 247.8 190.002 247.578 cv
189.78 247.355 189.478 247.231 189.164 247.231 cv
188.85 247.231 188.549 247.355 188.327 247.578 cv
188.105 247.8 187.98 248.101 187.98 248.415 cv
187.98 248.729 188.105 249.03 188.327 249.253 cv
188.549 249.475 188.85 249.599 189.164 249.599 cv
cp
@
grestore
gsave
191.691 246.03 mo
195.477 246.03 li
195.477 242.244 li
191.691 242.244 li
cp
clp
193.584 245.321 mo
193.898 245.321 194.199 245.197 194.422 244.975 cv
194.644 244.752 194.768 244.451 194.768 244.137 cv
194.768 243.823 194.644 243.522 194.422 243.3 cv
194.199 243.077 193.898 242.953 193.584 242.953 cv
193.27 242.953 192.969 243.077 192.747 243.3 cv
192.525 243.522 192.4 243.823 192.4 244.137 cv
192.4 244.451 192.525 244.752 192.747 244.975 cv
192.969 245.197 193.27 245.321 193.584 245.321 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
193.584 245.321 mo
193.898 245.321 194.199 245.197 194.422 244.975 cv
194.644 244.752 194.768 244.451 194.768 244.137 cv
194.768 243.823 194.644 243.522 194.422 243.3 cv
194.199 243.077 193.898 242.953 193.584 242.953 cv
193.27 242.953 192.969 243.077 192.747 243.3 cv
192.525 243.522 192.4 243.823 192.4 244.137 cv
192.4 244.451 192.525 244.752 192.747 244.975 cv
192.969 245.197 193.27 245.321 193.584 245.321 cv
cp
@
grestore
gsave
196.111 241.825 mo
199.897 241.825 li
199.897 238.039 li
196.111 238.039 li
cp
clp
198.004 241.116 mo
198.318 241.116 198.619 240.991 198.841 240.769 cv
199.063 240.547 199.188 240.246 199.188 239.932 cv
199.188 239.618 199.063 239.316 198.841 239.094 cv
198.619 238.872 198.318 238.747 198.004 238.747 cv
197.69 238.747 197.389 238.872 197.166 239.094 cv
196.944 239.316 196.82 239.618 196.82 239.932 cv
196.82 240.246 196.944 240.547 197.166 240.769 cv
197.389 240.991 197.69 241.116 198.004 241.116 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
198.004 241.116 mo
198.318 241.116 198.619 240.991 198.841 240.769 cv
199.063 240.547 199.188 240.246 199.188 239.932 cv
199.188 239.618 199.063 239.316 198.841 239.094 cv
198.619 238.872 198.318 238.747 198.004 238.747 cv
197.69 238.747 197.389 238.872 197.166 239.094 cv
196.944 239.316 196.82 239.618 196.82 239.932 cv
196.82 240.246 196.944 240.547 197.166 240.769 cv
197.389 240.991 197.69 241.116 198.004 241.116 cv
cp
@
grestore
gsave
200.531 240.644 mo
204.317 240.644 li
204.317 236.858 li
200.531 236.858 li
cp
clp
202.424 239.935 mo
202.738 239.935 203.039 239.811 203.261 239.589 cv
203.483 239.366 203.608 239.065 203.608 238.751 cv
203.608 238.437 203.483 238.136 203.261 237.914 cv
203.039 237.691 202.738 237.567 202.424 237.567 cv
202.11 237.567 201.808 237.691 201.586 237.914 cv
201.364 238.136 201.239 238.437 201.239 238.751 cv
201.239 239.065 201.364 239.366 201.586 239.589 cv
201.808 239.811 202.11 239.935 202.424 239.935 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
202.424 239.935 mo
202.738 239.935 203.039 239.811 203.261 239.589 cv
203.483 239.366 203.608 239.065 203.608 238.751 cv
203.608 238.437 203.483 238.136 203.261 237.914 cv
203.039 237.691 202.738 237.567 202.424 237.567 cv
202.11 237.567 201.808 237.691 201.586 237.914 cv
201.364 238.136 201.239 238.437 201.239 238.751 cv
201.239 239.065 201.364 239.366 201.586 239.589 cv
201.808 239.811 202.11 239.935 202.424 239.935 cv
cp
@
grestore
gsave
204.95 235.897 mo
208.737 235.897 li
208.737 232.11 li
204.95 232.11 li
cp
clp
206.844 235.188 mo
207.158 235.188 207.459 235.063 207.681 234.841 cv
207.903 234.619 208.028 234.318 208.028 234.004 cv
208.028 233.689 207.903 233.388 207.681 233.166 cv
207.459 232.944 207.158 232.819 206.844 232.819 cv
206.529 232.819 206.228 232.944 206.006 233.166 cv
205.784 233.388 205.659 233.689 205.659 234.004 cv
205.659 234.318 205.784 234.619 206.006 234.841 cv
206.228 235.063 206.529 235.188 206.844 235.188 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
206.844 235.188 mo
207.158 235.188 207.459 235.063 207.681 234.841 cv
207.903 234.619 208.028 234.318 208.028 234.004 cv
208.028 233.689 207.903 233.388 207.681 233.166 cv
207.459 232.944 207.158 232.819 206.844 232.819 cv
206.529 232.819 206.228 232.944 206.006 233.166 cv
205.784 233.388 205.659 233.689 205.659 234.004 cv
205.659 234.318 205.784 234.619 206.006 234.841 cv
206.228 235.063 206.529 235.188 206.844 235.188 cv
cp
@
grestore
gsave
209.37 234.028 mo
213.156 234.028 li
213.156 230.242 li
209.37 230.242 li
cp
clp
211.263 233.319 mo
211.577 233.319 211.879 233.194 212.101 232.972 cv
212.323 232.75 212.448 232.449 212.448 232.135 cv
212.448 231.821 212.323 231.519 212.101 231.297 cv
211.879 231.075 211.577 230.95 211.263 230.95 cv
210.949 230.95 210.648 231.075 210.426 231.297 cv
210.204 231.519 210.079 231.821 210.079 232.135 cv
210.079 232.449 210.204 232.75 210.426 232.972 cv
210.648 233.194 210.949 233.319 211.263 233.319 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
211.263 233.319 mo
211.577 233.319 211.879 233.194 212.101 232.972 cv
212.323 232.75 212.448 232.449 212.448 232.135 cv
212.448 231.821 212.323 231.519 212.101 231.297 cv
211.879 231.075 211.577 230.95 211.263 230.95 cv
210.949 230.95 210.648 231.075 210.426 231.297 cv
210.204 231.519 210.079 231.821 210.079 232.135 cv
210.079 232.449 210.204 232.75 210.426 232.972 cv
210.648 233.194 210.949 233.319 211.263 233.319 cv
cp
@
grestore
gsave
213.79 229.221 mo
217.576 229.221 li
217.576 225.435 li
213.79 225.435 li
cp
clp
215.683 228.512 mo
215.997 228.512 216.298 228.387 216.521 228.165 cv
216.743 227.943 216.867 227.642 216.867 227.328 cv
216.867 227.014 216.743 226.712 216.521 226.49 cv
216.298 226.268 215.997 226.143 215.683 226.143 cv
215.369 226.143 215.068 226.268 214.846 226.49 cv
214.624 226.712 214.499 227.014 214.499 227.328 cv
214.499 227.642 214.624 227.943 214.846 228.165 cv
215.068 228.387 215.369 228.512 215.683 228.512 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
215.683 228.512 mo
215.997 228.512 216.298 228.387 216.521 228.165 cv
216.743 227.943 216.867 227.642 216.867 227.328 cv
216.867 227.014 216.743 226.712 216.521 226.49 cv
216.298 226.268 215.997 226.143 215.683 226.143 cv
215.369 226.143 215.068 226.268 214.846 226.49 cv
214.624 226.712 214.499 227.014 214.499 227.328 cv
214.499 227.642 214.624 227.943 214.846 228.165 cv
215.068 228.387 215.369 228.512 215.683 228.512 cv
cp
@
grestore
gsave
218.21 226.669 mo
221.996 226.669 li
221.996 222.882 li
218.21 222.882 li
cp
clp
220.103 225.96 mo
220.417 225.96 220.718 225.835 220.94 225.613 cv
221.162 225.391 221.287 225.089 221.287 224.775 cv
221.287 224.461 221.162 224.16 220.94 223.938 cv
220.718 223.716 220.417 223.591 220.103 223.591 cv
219.789 223.591 219.488 223.716 219.265 223.938 cv
219.043 224.16 218.919 224.461 218.919 224.775 cv
218.919 225.089 219.043 225.391 219.265 225.613 cv
219.488 225.835 219.789 225.96 220.103 225.96 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
220.103 225.96 mo
220.417 225.96 220.718 225.835 220.94 225.613 cv
221.162 225.391 221.287 225.089 221.287 224.775 cv
221.287 224.461 221.162 224.16 220.94 223.938 cv
220.718 223.716 220.417 223.591 220.103 223.591 cv
219.789 223.591 219.488 223.716 219.265 223.938 cv
219.043 224.16 218.919 224.461 218.919 224.775 cv
218.919 225.089 219.043 225.391 219.265 225.613 cv
219.488 225.835 219.789 225.96 220.103 225.96 cv
cp
@
grestore
gsave
222.63 223.87 mo
226.416 223.87 li
226.416 220.084 li
222.63 220.084 li
cp
clp
224.523 223.162 mo
224.837 223.162 225.138 223.037 225.36 222.815 cv
225.582 222.593 225.707 222.291 225.707 221.977 cv
225.707 221.663 225.582 221.362 225.36 221.14 cv
225.138 220.918 224.837 220.793 224.523 220.793 cv
224.209 220.793 223.907 220.918 223.685 221.14 cv
223.463 221.362 223.338 221.663 223.338 221.977 cv
223.338 222.291 223.463 222.593 223.685 222.815 cv
223.907 223.037 224.209 223.162 224.523 223.162 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
224.523 223.162 mo
224.837 223.162 225.138 223.037 225.36 222.815 cv
225.582 222.593 225.707 222.291 225.707 221.977 cv
225.707 221.663 225.582 221.362 225.36 221.14 cv
225.138 220.918 224.837 220.793 224.523 220.793 cv
224.209 220.793 223.907 220.918 223.685 221.14 cv
223.463 221.362 223.338 221.663 223.338 221.977 cv
223.338 222.291 223.463 222.593 223.685 222.815 cv
223.907 223.037 224.209 223.162 224.523 223.162 cv
cp
@
grestore
gsave
227.049 221.335 mo
230.836 221.335 li
230.836 217.548 li
227.049 217.548 li
cp
clp
228.943 220.626 mo
229.257 220.626 229.558 220.501 229.78 220.279 cv
230.002 220.057 230.127 219.756 230.127 219.442 cv
230.127 219.127 230.002 218.826 229.78 218.604 cv
229.558 218.382 229.257 218.257 228.943 218.257 cv
228.628 218.257 228.327 218.382 228.105 218.604 cv
227.883 218.826 227.758 219.127 227.758 219.442 cv
227.758 219.756 227.883 220.057 228.105 220.279 cv
228.327 220.501 228.628 220.626 228.943 220.626 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
228.943 220.626 mo
229.257 220.626 229.558 220.501 229.78 220.279 cv
230.002 220.057 230.127 219.756 230.127 219.442 cv
230.127 219.127 230.002 218.826 229.78 218.604 cv
229.558 218.382 229.257 218.257 228.943 218.257 cv
228.628 218.257 228.327 218.382 228.105 218.604 cv
227.883 218.826 227.758 219.127 227.758 219.442 cv
227.758 219.756 227.883 220.057 228.105 220.279 cv
228.327 220.501 228.628 220.626 228.943 220.626 cv
cp
@
grestore
gsave
231.469 219.097 mo
235.255 219.097 li
235.255 215.311 li
231.469 215.311 li
cp
clp
233.362 218.389 mo
233.676 218.389 233.978 218.264 234.2 218.042 cv
234.422 217.82 234.547 217.518 234.547 217.204 cv
234.547 216.89 234.422 216.589 234.2 216.367 cv
233.978 216.145 233.676 216.02 233.362 216.02 cv
233.048 216.02 232.747 216.145 232.525 216.367 cv
232.303 216.589 232.178 216.89 232.178 217.204 cv
232.178 217.518 232.303 217.82 232.525 218.042 cv
232.747 218.264 233.048 218.389 233.362 218.389 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
233.362 218.389 mo
233.676 218.389 233.978 218.264 234.2 218.042 cv
234.422 217.82 234.547 217.518 234.547 217.204 cv
234.547 216.89 234.422 216.589 234.2 216.367 cv
233.978 216.145 233.676 216.02 233.362 216.02 cv
233.048 216.02 232.747 216.145 232.525 216.367 cv
232.303 216.589 232.178 216.89 232.178 217.204 cv
232.178 217.518 232.303 217.82 232.525 218.042 cv
232.747 218.264 233.048 218.389 233.362 218.389 cv
cp
@
grestore
gsave
235.889 216.303 mo
239.675 216.303 li
239.675 212.516 li
235.889 212.516 li
cp
clp
237.782 215.594 mo
238.096 215.594 238.397 215.469 238.62 215.247 cv
238.842 215.025 238.966 214.724 238.966 214.409 cv
238.966 214.095 238.842 213.794 238.62 213.572 cv
238.397 213.35 238.096 213.225 237.782 213.225 cv
237.468 213.225 237.167 213.35 236.945 213.572 cv
236.723 213.794 236.598 214.095 236.598 214.409 cv
236.598 214.724 236.723 215.025 236.945 215.247 cv
237.167 215.469 237.468 215.594 237.782 215.594 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
237.782 215.594 mo
238.096 215.594 238.397 215.469 238.62 215.247 cv
238.842 215.025 238.966 214.724 238.966 214.409 cv
238.966 214.095 238.842 213.794 238.62 213.572 cv
238.397 213.35 238.096 213.225 237.782 213.225 cv
237.468 213.225 237.167 213.35 236.945 213.572 cv
236.723 213.794 236.598 214.095 236.598 214.409 cv
236.598 214.724 236.723 215.025 236.945 215.247 cv
237.167 215.469 237.468 215.594 237.782 215.594 cv
cp
@
grestore
gsave
240.309 212.924 mo
244.095 212.924 li
244.095 209.137 li
240.309 209.137 li
cp
clp
242.202 212.215 mo
242.516 212.215 242.817 212.09 243.039 211.868 cv
243.261 211.646 243.386 211.345 243.386 211.031 cv
243.386 210.716 243.261 210.415 243.039 210.193 cv
242.817 209.971 242.516 209.846 242.202 209.846 cv
241.888 209.846 241.587 209.971 241.364 210.193 cv
241.142 210.415 241.018 210.716 241.018 211.031 cv
241.018 211.345 241.142 211.646 241.364 211.868 cv
241.587 212.09 241.888 212.215 242.202 212.215 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
242.202 212.215 mo
242.516 212.215 242.817 212.09 243.039 211.868 cv
243.261 211.646 243.386 211.345 243.386 211.031 cv
243.386 210.716 243.261 210.415 243.039 210.193 cv
242.817 209.971 242.516 209.846 242.202 209.846 cv
241.888 209.846 241.587 209.971 241.364 210.193 cv
241.142 210.415 241.018 210.716 241.018 211.031 cv
241.018 211.345 241.142 211.646 241.364 211.868 cv
241.587 212.09 241.888 212.215 242.202 212.215 cv
cp
@
grestore
gsave
244.729 209.14 mo
248.515 209.14 li
248.515 205.353 li
244.729 205.353 li
cp
clp
246.622 208.431 mo
246.936 208.431 247.237 208.306 247.459 208.084 cv
247.681 207.862 247.806 207.561 247.806 207.247 cv
247.806 206.932 247.681 206.631 247.459 206.409 cv
247.237 206.187 246.936 206.062 246.622 206.062 cv
246.308 206.062 246.006 206.187 245.784 206.409 cv
245.562 206.631 245.437 206.932 245.437 207.247 cv
245.437 207.561 245.562 207.862 245.784 208.084 cv
246.006 208.306 246.308 208.431 246.622 208.431 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
246.622 208.431 mo
246.936 208.431 247.237 208.306 247.459 208.084 cv
247.681 207.862 247.806 207.561 247.806 207.247 cv
247.806 206.932 247.681 206.631 247.459 206.409 cv
247.237 206.187 246.936 206.062 246.622 206.062 cv
246.308 206.062 246.006 206.187 245.784 206.409 cv
245.562 206.631 245.437 206.932 245.437 207.247 cv
245.437 207.561 245.562 207.862 245.784 208.084 cv
246.006 208.306 246.308 208.431 246.622 208.431 cv
cp
@
grestore
gsave
249.148 207.593 mo
252.935 207.593 li
252.935 203.807 li
249.148 203.807 li
cp
clp
251.042 206.885 mo
251.356 206.885 251.657 206.76 251.879 206.538 cv
252.101 206.316 252.226 206.014 252.226 205.7 cv
252.226 205.386 252.101 205.085 251.879 204.863 cv
251.657 204.641 251.356 204.516 251.042 204.516 cv
250.727 204.516 250.426 204.641 250.204 204.863 cv
249.982 205.085 249.857 205.386 249.857 205.7 cv
249.857 206.014 249.982 206.316 250.204 206.538 cv
250.426 206.76 250.727 206.885 251.042 206.885 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
251.042 206.885 mo
251.356 206.885 251.657 206.76 251.879 206.538 cv
252.101 206.316 252.226 206.014 252.226 205.7 cv
252.226 205.386 252.101 205.085 251.879 204.863 cv
251.657 204.641 251.356 204.516 251.042 204.516 cv
250.727 204.516 250.426 204.641 250.204 204.863 cv
249.982 205.085 249.857 205.386 249.857 205.7 cv
249.857 206.014 249.982 206.316 250.204 206.538 cv
250.426 206.76 250.727 206.885 251.042 206.885 cv
cp
@
grestore
gsave
253.568 204.52 mo
257.354 204.52 li
257.354 200.734 li
253.568 200.734 li
cp
clp
255.461 203.811 mo
255.775 203.811 256.077 203.687 256.299 203.464 cv
256.521 203.242 256.646 202.941 256.646 202.627 cv
256.646 202.313 256.521 202.012 256.299 201.789 cv
256.077 201.567 255.775 201.443 255.461 201.443 cv
255.147 201.443 254.846 201.567 254.624 201.789 cv
254.402 202.012 254.277 202.313 254.277 202.627 cv
254.277 202.941 254.402 203.242 254.624 203.464 cv
254.846 203.687 255.147 203.811 255.461 203.811 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
255.461 203.811 mo
255.775 203.811 256.077 203.687 256.299 203.464 cv
256.521 203.242 256.646 202.941 256.646 202.627 cv
256.646 202.313 256.521 202.012 256.299 201.789 cv
256.077 201.567 255.775 201.443 255.461 201.443 cv
255.147 201.443 254.846 201.567 254.624 201.789 cv
254.402 202.012 254.277 202.313 254.277 202.627 cv
254.277 202.941 254.402 203.242 254.624 203.464 cv
254.846 203.687 255.147 203.811 255.461 203.811 cv
cp
@
grestore
gsave
257.988 201.762 mo
261.774 201.762 li
261.774 197.976 li
257.988 197.976 li
cp
clp
259.881 201.054 mo
260.195 201.054 260.496 200.929 260.719 200.707 cv
260.941 200.485 261.065 200.183 261.065 199.869 cv
261.065 199.555 260.941 199.254 260.719 199.032 cv
260.496 198.81 260.195 198.685 259.881 198.685 cv
259.567 198.685 259.266 198.81 259.044 199.032 cv
258.822 199.254 258.697 199.555 258.697 199.869 cv
258.697 200.183 258.822 200.485 259.044 200.707 cv
259.266 200.929 259.567 201.054 259.881 201.054 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
259.881 201.054 mo
260.195 201.054 260.496 200.929 260.719 200.707 cv
260.941 200.485 261.065 200.183 261.065 199.869 cv
261.065 199.555 260.941 199.254 260.719 199.032 cv
260.496 198.81 260.195 198.685 259.881 198.685 cv
259.567 198.685 259.266 198.81 259.044 199.032 cv
258.822 199.254 258.697 199.555 258.697 199.869 cv
258.697 200.183 258.822 200.485 259.044 200.707 cv
259.266 200.929 259.567 201.054 259.881 201.054 cv
cp
@
grestore
gsave
262.408 198.507 mo
266.194 198.507 li
266.194 194.721 li
262.408 194.721 li
cp
clp
264.301 197.798 mo
264.615 197.798 264.916 197.673 265.138 197.451 cv
265.361 197.229 265.485 196.928 265.485 196.614 cv
265.485 196.3 265.361 195.998 265.138 195.776 cv
264.916 195.554 264.615 195.429 264.301 195.429 cv
263.987 195.429 263.686 195.554 263.463 195.776 cv
263.241 195.998 263.117 196.3 263.117 196.614 cv
263.117 196.928 263.241 197.229 263.463 197.451 cv
263.686 197.673 263.987 197.798 264.301 197.798 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
264.301 197.798 mo
264.615 197.798 264.916 197.673 265.138 197.451 cv
265.361 197.229 265.485 196.928 265.485 196.614 cv
265.485 196.3 265.361 195.998 265.138 195.776 cv
264.916 195.554 264.615 195.429 264.301 195.429 cv
263.987 195.429 263.686 195.554 263.463 195.776 cv
263.241 195.998 263.117 196.3 263.117 196.614 cv
263.117 196.928 263.241 197.229 263.463 197.451 cv
263.686 197.673 263.987 197.798 264.301 197.798 cv
cp
@
grestore
gsave
266.828 195.671 mo
270.614 195.671 li
270.614 191.884 li
266.828 191.884 li
cp
clp
268.721 194.962 mo
269.035 194.962 269.336 194.837 269.558 194.615 cv
269.78 194.393 269.905 194.092 269.905 193.778 cv
269.905 193.463 269.78 193.162 269.558 192.94 cv
269.336 192.718 269.035 192.593 268.721 192.593 cv
268.407 192.593 268.105 192.718 267.883 192.94 cv
267.661 193.162 267.536 193.463 267.536 193.778 cv
267.536 194.092 267.661 194.393 267.883 194.615 cv
268.105 194.837 268.407 194.962 268.721 194.962 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
268.721 194.962 mo
269.035 194.962 269.336 194.837 269.558 194.615 cv
269.78 194.393 269.905 194.092 269.905 193.778 cv
269.905 193.463 269.78 193.162 269.558 192.94 cv
269.336 192.718 269.035 192.593 268.721 192.593 cv
268.407 192.593 268.105 192.718 267.883 192.94 cv
267.661 193.162 267.536 193.463 267.536 193.778 cv
267.536 194.092 267.661 194.393 267.883 194.615 cv
268.105 194.837 268.407 194.962 268.721 194.962 cv
cp
@
grestore
gsave
271.247 193.567 mo
275.034 193.567 li
275.034 189.78 li
271.247 189.78 li
cp
clp
273.141 192.858 mo
273.455 192.858 273.756 192.733 273.978 192.511 cv
274.2 192.289 274.325 191.987 274.325 191.673 cv
274.325 191.359 274.2 191.058 273.978 190.836 cv
273.756 190.614 273.455 190.489 273.141 190.489 cv
272.826 190.489 272.525 190.614 272.303 190.836 cv
272.081 191.058 271.956 191.359 271.956 191.673 cv
271.956 191.987 272.081 192.289 272.303 192.511 cv
272.525 192.733 272.826 192.858 273.141 192.858 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
273.141 192.858 mo
273.455 192.858 273.756 192.733 273.978 192.511 cv
274.2 192.289 274.325 191.987 274.325 191.673 cv
274.325 191.359 274.2 191.058 273.978 190.836 cv
273.756 190.614 273.455 190.489 273.141 190.489 cv
272.826 190.489 272.525 190.614 272.303 190.836 cv
272.081 191.058 271.956 191.359 271.956 191.673 cv
271.956 191.987 272.081 192.289 272.303 192.511 cv
272.525 192.733 272.826 192.858 273.141 192.858 cv
cp
@
grestore
gsave
275.667 191.184 mo
279.453 191.184 li
279.453 187.398 li
275.667 187.398 li
cp
clp
277.56 190.475 mo
277.874 190.475 278.176 190.351 278.398 190.129 cv
278.62 189.906 278.745 189.605 278.745 189.291 cv
278.745 188.977 278.62 188.676 278.398 188.454 cv
278.176 188.231 277.874 188.107 277.56 188.107 cv
277.246 188.107 276.945 188.231 276.723 188.454 cv
276.501 188.676 276.376 188.977 276.376 189.291 cv
276.376 189.605 276.501 189.906 276.723 190.129 cv
276.945 190.351 277.246 190.475 277.56 190.475 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
277.56 190.475 mo
277.874 190.475 278.176 190.351 278.398 190.129 cv
278.62 189.906 278.745 189.605 278.745 189.291 cv
278.745 188.977 278.62 188.676 278.398 188.454 cv
278.176 188.231 277.874 188.107 277.56 188.107 cv
277.246 188.107 276.945 188.231 276.723 188.454 cv
276.501 188.676 276.376 188.977 276.376 189.291 cv
276.376 189.605 276.501 189.906 276.723 190.129 cv
276.945 190.351 277.246 190.475 277.56 190.475 cv
cp
@
grestore
gsave
280.087 189.378 mo
283.873 189.378 li
283.873 185.592 li
280.087 185.592 li
cp
clp
281.98 188.669 mo
282.294 188.669 282.595 188.545 282.818 188.323 cv
283.04 188.1 283.164 187.799 283.164 187.485 cv
283.164 187.171 283.04 186.87 282.818 186.648 cv
282.595 186.426 282.294 186.301 281.98 186.301 cv
281.666 186.301 281.365 186.426 281.143 186.648 cv
280.921 186.87 280.796 187.171 280.796 187.485 cv
280.796 187.799 280.921 188.1 281.143 188.323 cv
281.365 188.545 281.666 188.669 281.98 188.669 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
281.98 188.669 mo
282.294 188.669 282.595 188.545 282.818 188.323 cv
283.04 188.1 283.164 187.799 283.164 187.485 cv
283.164 187.171 283.04 186.87 282.818 186.648 cv
282.595 186.426 282.294 186.301 281.98 186.301 cv
281.666 186.301 281.365 186.426 281.143 186.648 cv
280.921 186.87 280.796 187.171 280.796 187.485 cv
280.796 187.799 280.921 188.1 281.143 188.323 cv
281.365 188.545 281.666 188.669 281.98 188.669 cv
cp
@
grestore
gsave
284.507 187.045 mo
288.293 187.045 li
288.293 183.259 li
284.507 183.259 li
cp
clp
286.4 186.336 mo
286.714 186.336 287.015 186.211 287.237 185.989 cv
287.46 185.767 287.584 185.466 287.584 185.152 cv
287.584 184.838 287.46 184.536 287.237 184.314 cv
287.015 184.092 286.714 183.967 286.4 183.967 cv
286.086 183.967 285.785 184.092 285.562 184.314 cv
285.34 184.536 285.216 184.838 285.216 185.152 cv
285.216 185.466 285.34 185.767 285.562 185.989 cv
285.785 186.211 286.086 186.336 286.4 186.336 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
286.4 186.336 mo
286.714 186.336 287.015 186.211 287.237 185.989 cv
287.46 185.767 287.584 185.466 287.584 185.152 cv
287.584 184.838 287.46 184.536 287.237 184.314 cv
287.015 184.092 286.714 183.967 286.4 183.967 cv
286.086 183.967 285.785 184.092 285.562 184.314 cv
285.34 184.536 285.216 184.838 285.216 185.152 cv
285.216 185.466 285.34 185.767 285.562 185.989 cv
285.785 186.211 286.086 186.336 286.4 186.336 cv
cp
@
grestore
gsave
288.927 185.499 mo
292.713 185.499 li
292.713 181.713 li
288.927 181.713 li
cp
clp
290.82 184.791 mo
291.134 184.791 291.435 184.666 291.657 184.444 cv
291.879 184.222 292.004 183.92 292.004 183.606 cv
292.004 183.292 291.879 182.991 291.657 182.769 cv
291.435 182.547 291.134 182.422 290.82 182.422 cv
290.506 182.422 290.204 182.547 289.982 182.769 cv
289.76 182.991 289.635 183.292 289.635 183.606 cv
289.635 183.92 289.76 184.222 289.982 184.444 cv
290.204 184.666 290.506 184.791 290.82 184.791 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
290.82 184.791 mo
291.134 184.791 291.435 184.666 291.657 184.444 cv
291.879 184.222 292.004 183.92 292.004 183.606 cv
292.004 183.292 291.879 182.991 291.657 182.769 cv
291.435 182.547 291.134 182.422 290.82 182.422 cv
290.506 182.422 290.204 182.547 289.982 182.769 cv
289.76 182.991 289.635 183.292 289.635 183.606 cv
289.635 183.92 289.76 184.222 289.982 184.444 cv
290.204 184.666 290.506 184.791 290.82 184.791 cv
cp
@
grestore
gsave
293.346 182.18 mo
297.133 182.18 li
297.133 178.393 li
293.346 178.393 li
cp
clp
295.24 181.471 mo
295.554 181.471 295.855 181.346 296.077 181.124 cv
296.299 180.902 296.424 180.601 296.424 180.287 cv
296.424 179.973 296.299 179.671 296.077 179.449 cv
295.855 179.227 295.554 179.102 295.24 179.102 cv
294.925 179.102 294.624 179.227 294.402 179.449 cv
294.18 179.671 294.055 179.973 294.055 180.287 cv
294.055 180.601 294.18 180.902 294.402 181.124 cv
294.624 181.346 294.925 181.471 295.24 181.471 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
295.24 181.471 mo
295.554 181.471 295.855 181.346 296.077 181.124 cv
296.299 180.902 296.424 180.601 296.424 180.287 cv
296.424 179.973 296.299 179.671 296.077 179.449 cv
295.855 179.227 295.554 179.102 295.24 179.102 cv
294.925 179.102 294.624 179.227 294.402 179.449 cv
294.18 179.671 294.055 179.973 294.055 180.287 cv
294.055 180.601 294.18 180.902 294.402 181.124 cv
294.624 181.346 294.925 181.471 295.24 181.471 cv
cp
@
grestore
gsave
297.766 178.267 mo
301.552 178.267 li
301.552 174.48 li
297.766 174.48 li
cp
clp
299.659 177.558 mo
299.973 177.558 300.275 177.433 300.497 177.211 cv
300.719 176.989 300.844 176.688 300.844 176.373 cv
300.844 176.059 300.719 175.758 300.497 175.536 cv
300.275 175.314 299.973 175.189 299.659 175.189 cv
299.345 175.189 299.044 175.314 298.822 175.536 cv
298.6 175.758 298.475 176.059 298.475 176.373 cv
298.475 176.688 298.6 176.989 298.822 177.211 cv
299.044 177.433 299.345 177.558 299.659 177.558 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
299.659 177.558 mo
299.973 177.558 300.275 177.433 300.497 177.211 cv
300.719 176.989 300.844 176.688 300.844 176.373 cv
300.844 176.059 300.719 175.758 300.497 175.536 cv
300.275 175.314 299.973 175.189 299.659 175.189 cv
299.345 175.189 299.044 175.314 298.822 175.536 cv
298.6 175.758 298.475 176.059 298.475 176.373 cv
298.475 176.688 298.6 176.989 298.822 177.211 cv
299.044 177.433 299.345 177.558 299.659 177.558 cv
cp
@
grestore
gsave
302.186 176.082 mo
305.972 176.082 li
305.972 172.296 li
302.186 172.296 li
cp
clp
304.079 175.373 mo
304.393 175.373 304.694 175.248 304.917 175.026 cv
305.139 174.804 305.263 174.503 305.263 174.189 cv
305.263 173.875 305.139 173.573 304.917 173.351 cv
304.694 173.129 304.393 173.004 304.079 173.004 cv
303.765 173.004 303.464 173.129 303.242 173.351 cv
303.02 173.573 302.895 173.875 302.895 174.189 cv
302.895 174.503 303.02 174.804 303.242 175.026 cv
303.464 175.248 303.765 175.373 304.079 175.373 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
304.079 175.373 mo
304.393 175.373 304.694 175.248 304.917 175.026 cv
305.139 174.804 305.263 174.503 305.263 174.189 cv
305.263 173.875 305.139 173.573 304.917 173.351 cv
304.694 173.129 304.393 173.004 304.079 173.004 cv
303.765 173.004 303.464 173.129 303.242 173.351 cv
303.02 173.573 302.895 173.875 302.895 174.189 cv
302.895 174.503 303.02 174.804 303.242 175.026 cv
303.464 175.248 303.765 175.373 304.079 175.373 cv
cp
@
grestore
gsave
306.606 173.821 mo
310.392 173.821 li
310.392 170.035 li
306.606 170.035 li
cp
clp
308.499 173.112 mo
308.813 173.112 309.114 172.988 309.336 172.765 cv
309.559 172.543 309.683 172.242 309.683 171.928 cv
309.683 171.614 309.559 171.313 309.336 171.09 cv
309.114 170.868 308.813 170.744 308.499 170.744 cv
308.185 170.744 307.884 170.868 307.661 171.09 cv
307.439 171.313 307.315 171.614 307.315 171.928 cv
307.315 172.242 307.439 172.543 307.661 172.765 cv
307.884 172.988 308.185 173.112 308.499 173.112 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
308.499 173.112 mo
308.813 173.112 309.114 172.988 309.336 172.765 cv
309.559 172.543 309.683 172.242 309.683 171.928 cv
309.683 171.614 309.559 171.313 309.336 171.09 cv
309.114 170.868 308.813 170.744 308.499 170.744 cv
308.185 170.744 307.884 170.868 307.661 171.09 cv
307.439 171.313 307.315 171.614 307.315 171.928 cv
307.315 172.242 307.439 172.543 307.661 172.765 cv
307.884 172.988 308.185 173.112 308.499 173.112 cv
cp
@
grestore
gsave
311.026 172.523 mo
314.812 172.523 li
314.812 168.737 li
311.026 168.737 li
cp
clp
312.919 171.814 mo
313.233 171.814 313.534 171.689 313.756 171.467 cv
313.978 171.245 314.103 170.944 314.103 170.63 cv
314.103 170.316 313.978 170.014 313.756 169.792 cv
313.534 169.57 313.233 169.445 312.919 169.445 cv
312.605 169.445 312.303 169.57 312.081 169.792 cv
311.859 170.014 311.734 170.316 311.734 170.63 cv
311.734 170.944 311.859 171.245 312.081 171.467 cv
312.303 171.689 312.605 171.814 312.919 171.814 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
312.919 171.814 mo
313.233 171.814 313.534 171.689 313.756 171.467 cv
313.978 171.245 314.103 170.944 314.103 170.63 cv
314.103 170.316 313.978 170.014 313.756 169.792 cv
313.534 169.57 313.233 169.445 312.919 169.445 cv
312.605 169.445 312.303 169.57 312.081 169.792 cv
311.859 170.014 311.734 170.316 311.734 170.63 cv
311.734 170.944 311.859 171.245 312.081 171.467 cv
312.303 171.689 312.605 171.814 312.919 171.814 cv
cp
@
grestore
gsave
315.445 169.067 mo
319.232 169.067 li
319.232 165.28 li
315.445 165.28 li
cp
clp
317.339 168.358 mo
317.653 168.358 317.954 168.233 318.176 168.011 cv
318.398 167.789 318.523 167.488 318.523 167.173 cv
318.523 166.859 318.398 166.558 318.176 166.336 cv
317.954 166.114 317.653 165.989 317.339 165.989 cv
317.024 165.989 316.723 166.114 316.501 166.336 cv
316.279 166.558 316.154 166.859 316.154 167.173 cv
316.154 167.488 316.279 167.789 316.501 168.011 cv
316.723 168.233 317.024 168.358 317.339 168.358 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
317.339 168.358 mo
317.653 168.358 317.954 168.233 318.176 168.011 cv
318.398 167.789 318.523 167.488 318.523 167.173 cv
318.523 166.859 318.398 166.558 318.176 166.336 cv
317.954 166.114 317.653 165.989 317.339 165.989 cv
317.024 165.989 316.723 166.114 316.501 166.336 cv
316.279 166.558 316.154 166.859 316.154 167.173 cv
316.154 167.488 316.279 167.789 316.501 168.011 cv
316.723 168.233 317.024 168.358 317.339 168.358 cv
cp
@
grestore
gsave
319.865 166.378 mo
323.651 166.378 li
323.651 162.591 li
319.865 162.591 li
cp
clp
321.758 165.669 mo
322.072 165.669 322.374 165.544 322.596 165.322 cv
322.818 165.1 322.943 164.799 322.943 164.484 cv
322.943 164.17 322.818 163.869 322.596 163.647 cv
322.374 163.425 322.072 163.3 321.758 163.3 cv
321.444 163.3 321.143 163.425 320.921 163.647 cv
320.699 163.869 320.574 164.17 320.574 164.484 cv
320.574 164.799 320.699 165.1 320.921 165.322 cv
321.143 165.544 321.444 165.669 321.758 165.669 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
321.758 165.669 mo
322.072 165.669 322.374 165.544 322.596 165.322 cv
322.818 165.1 322.943 164.799 322.943 164.484 cv
322.943 164.17 322.818 163.869 322.596 163.647 cv
322.374 163.425 322.072 163.3 321.758 163.3 cv
321.444 163.3 321.143 163.425 320.921 163.647 cv
320.699 163.869 320.574 164.17 320.574 164.484 cv
320.574 164.799 320.699 165.1 320.921 165.322 cv
321.143 165.544 321.444 165.669 321.758 165.669 cv
cp
@
grestore
gsave
324.285 163.242 mo
328.071 163.242 li
328.071 159.456 li
324.285 159.456 li
cp
clp
326.178 162.533 mo
326.492 162.533 326.793 162.408 327.016 162.186 cv
327.238 161.964 327.362 161.663 327.362 161.349 cv
327.362 161.035 327.238 160.733 327.016 160.511 cv
326.793 160.289 326.492 160.164 326.178 160.164 cv
325.864 160.164 325.563 160.289 325.341 160.511 cv
325.118 160.733 324.994 161.035 324.994 161.349 cv
324.994 161.663 325.118 161.964 325.341 162.186 cv
325.563 162.408 325.864 162.533 326.178 162.533 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
326.178 162.533 mo
326.492 162.533 326.793 162.408 327.016 162.186 cv
327.238 161.964 327.362 161.663 327.362 161.349 cv
327.362 161.035 327.238 160.733 327.016 160.511 cv
326.793 160.289 326.492 160.164 326.178 160.164 cv
325.864 160.164 325.563 160.289 325.341 160.511 cv
325.118 160.733 324.994 161.035 324.994 161.349 cv
324.994 161.663 325.118 161.964 325.341 162.186 cv
325.563 162.408 325.864 162.533 326.178 162.533 cv
cp
@
grestore
gsave
328.705 160.649 mo
332.491 160.649 li
332.491 156.863 li
328.705 156.863 li
cp
clp
330.598 159.94 mo
330.912 159.94 331.213 159.816 331.435 159.594 cv
331.658 159.371 331.782 159.07 331.782 158.756 cv
331.782 158.442 331.658 158.141 331.435 157.919 cv
331.213 157.696 330.912 157.572 330.598 157.572 cv
330.284 157.572 329.983 157.696 329.76 157.919 cv
329.538 158.141 329.414 158.442 329.414 158.756 cv
329.414 159.07 329.538 159.371 329.76 159.594 cv
329.983 159.816 330.284 159.94 330.598 159.94 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
330.598 159.94 mo
330.912 159.94 331.213 159.816 331.435 159.594 cv
331.658 159.371 331.782 159.07 331.782 158.756 cv
331.782 158.442 331.658 158.141 331.435 157.919 cv
331.213 157.696 330.912 157.572 330.598 157.572 cv
330.284 157.572 329.983 157.696 329.76 157.919 cv
329.538 158.141 329.414 158.442 329.414 158.756 cv
329.414 159.07 329.538 159.371 329.76 159.594 cv
329.983 159.816 330.284 159.94 330.598 159.94 cv
cp
@
grestore
gsave
333.125 159.511 mo
336.911 159.511 li
336.911 155.725 li
333.125 155.725 li
cp
clp
335.018 158.802 mo
335.332 158.802 335.633 158.677 335.855 158.455 cv
336.077 158.233 336.202 157.932 336.202 157.618 cv
336.202 157.304 336.077 157.003 335.855 156.78 cv
335.633 156.558 335.332 156.434 335.018 156.434 cv
334.704 156.434 334.402 156.558 334.18 156.78 cv
333.958 157.003 333.833 157.304 333.833 157.618 cv
333.833 157.932 333.958 158.233 334.18 158.455 cv
334.402 158.677 334.704 158.802 335.018 158.802 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
335.018 158.802 mo
335.332 158.802 335.633 158.677 335.855 158.455 cv
336.077 158.233 336.202 157.932 336.202 157.618 cv
336.202 157.304 336.077 157.003 335.855 156.78 cv
335.633 156.558 335.332 156.434 335.018 156.434 cv
334.704 156.434 334.402 156.558 334.18 156.78 cv
333.958 157.003 333.833 157.304 333.833 157.618 cv
333.833 157.932 333.958 158.233 334.18 158.455 cv
334.402 158.677 334.704 158.802 335.018 158.802 cv
cp
@
grestore
gsave
337.544 156.817 mo
341.331 156.817 li
341.331 153.031 li
337.544 153.031 li
cp
clp
339.438 156.108 mo
339.752 156.108 340.053 155.984 340.275 155.761 cv
340.497 155.539 340.622 155.238 340.622 154.924 cv
340.622 154.61 340.497 154.309 340.275 154.086 cv
340.053 153.864 339.752 153.74 339.438 153.74 cv
339.123 153.74 338.822 153.864 338.6 154.086 cv
338.378 154.309 338.253 154.61 338.253 154.924 cv
338.253 155.238 338.378 155.539 338.6 155.761 cv
338.822 155.984 339.123 156.108 339.438 156.108 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
339.438 156.108 mo
339.752 156.108 340.053 155.984 340.275 155.761 cv
340.497 155.539 340.622 155.238 340.622 154.924 cv
340.622 154.61 340.497 154.309 340.275 154.086 cv
340.053 153.864 339.752 153.74 339.438 153.74 cv
339.123 153.74 338.822 153.864 338.6 154.086 cv
338.378 154.309 338.253 154.61 338.253 154.924 cv
338.253 155.238 338.378 155.539 338.6 155.761 cv
338.822 155.984 339.123 156.108 339.438 156.108 cv
cp
@
grestore
gsave
341.964 156.341 mo
345.75 156.341 li
345.75 152.555 li
341.964 152.555 li
cp
clp
343.857 155.632 mo
344.171 155.632 344.473 155.507 344.695 155.285 cv
344.917 155.063 345.042 154.762 345.042 154.448 cv
345.042 154.134 344.917 153.832 344.695 153.61 cv
344.473 153.388 344.171 153.263 343.857 153.263 cv
343.543 153.263 343.242 153.388 343.02 153.61 cv
342.798 153.832 342.673 154.134 342.673 154.448 cv
342.673 154.762 342.798 155.063 343.02 155.285 cv
343.242 155.507 343.543 155.632 343.857 155.632 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
343.857 155.632 mo
344.171 155.632 344.473 155.507 344.695 155.285 cv
344.917 155.063 345.042 154.762 345.042 154.448 cv
345.042 154.134 344.917 153.832 344.695 153.61 cv
344.473 153.388 344.171 153.263 343.857 153.263 cv
343.543 153.263 343.242 153.388 343.02 153.61 cv
342.798 153.832 342.673 154.134 342.673 154.448 cv
342.673 154.762 342.798 155.063 343.02 155.285 cv
343.242 155.507 343.543 155.632 343.857 155.632 cv
cp
@
grestore
gsave
346.384 152.753 mo
350.17 152.753 li
350.17 148.967 li
346.384 148.967 li
cp
clp
348.277 152.044 mo
348.591 152.044 348.892 151.92 349.115 151.697 cv
349.337 151.475 349.461 151.174 349.461 150.86 cv
349.461 150.546 349.337 150.245 349.115 150.022 cv
348.892 149.8 348.591 149.676 348.277 149.676 cv
347.963 149.676 347.662 149.8 347.44 150.022 cv
347.217 150.245 347.093 150.546 347.093 150.86 cv
347.093 151.174 347.217 151.475 347.44 151.697 cv
347.662 151.92 347.963 152.044 348.277 152.044 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
348.277 152.044 mo
348.591 152.044 348.892 151.92 349.115 151.697 cv
349.337 151.475 349.461 151.174 349.461 150.86 cv
349.461 150.546 349.337 150.245 349.115 150.022 cv
348.892 149.8 348.591 149.676 348.277 149.676 cv
347.963 149.676 347.662 149.8 347.44 150.022 cv
347.217 150.245 347.093 150.546 347.093 150.86 cv
347.093 151.174 347.217 151.475 347.44 151.697 cv
347.662 151.92 347.963 152.044 348.277 152.044 cv
cp
@
grestore
gsave
350.804 150.463 mo
354.59 150.463 li
354.59 146.676 li
350.804 146.676 li
cp
clp
352.697 149.754 mo
353.011 149.754 353.312 149.629 353.534 149.407 cv
353.757 149.185 353.881 148.884 353.881 148.569 cv
353.881 148.255 353.757 147.954 353.534 147.732 cv
353.312 147.51 353.011 147.385 352.697 147.385 cv
352.383 147.385 352.082 147.51 351.859 147.732 cv
351.637 147.954 351.513 148.255 351.513 148.569 cv
351.513 148.884 351.637 149.185 351.859 149.407 cv
352.082 149.629 352.383 149.754 352.697 149.754 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
352.697 149.754 mo
353.011 149.754 353.312 149.629 353.534 149.407 cv
353.757 149.185 353.881 148.884 353.881 148.569 cv
353.881 148.255 353.757 147.954 353.534 147.732 cv
353.312 147.51 353.011 147.385 352.697 147.385 cv
352.383 147.385 352.082 147.51 351.859 147.732 cv
351.637 147.954 351.513 148.255 351.513 148.569 cv
351.513 148.884 351.637 149.185 351.859 149.407 cv
352.082 149.629 352.383 149.754 352.697 149.754 cv
cp
@
grestore
gsave
355.224 150.078 mo
359.01 150.078 li
359.01 146.291 li
355.224 146.291 li
cp
clp
357.117 149.369 mo
357.431 149.369 357.732 149.244 357.954 149.022 cv
358.176 148.8 358.301 148.499 358.301 148.184 cv
358.301 147.87 358.176 147.569 357.954 147.347 cv
357.732 147.125 357.431 147 357.117 147 cv
356.803 147 356.501 147.125 356.279 147.347 cv
356.057 147.569 355.932 147.87 355.932 148.184 cv
355.932 148.499 356.057 148.8 356.279 149.022 cv
356.501 149.244 356.803 149.369 357.117 149.369 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
357.117 149.369 mo
357.431 149.369 357.732 149.244 357.954 149.022 cv
358.176 148.8 358.301 148.499 358.301 148.184 cv
358.301 147.87 358.176 147.569 357.954 147.347 cv
357.732 147.125 357.431 147 357.117 147 cv
356.803 147 356.501 147.125 356.279 147.347 cv
356.057 147.569 355.932 147.87 355.932 148.184 cv
355.932 148.499 356.057 148.8 356.279 149.022 cv
356.501 149.244 356.803 149.369 357.117 149.369 cv
cp
@
grestore
gsave
359.643 146.681 mo
363.43 146.681 li
363.43 142.895 li
359.643 142.895 li
cp
clp
361.536 145.972 mo
361.851 145.972 362.152 145.847 362.374 145.625 cv
362.596 145.403 362.721 145.102 362.721 144.788 cv
362.721 144.474 362.596 144.173 362.374 143.95 cv
362.152 143.728 361.851 143.604 361.536 143.604 cv
361.222 143.604 360.921 143.728 360.699 143.95 cv
360.477 144.173 360.352 144.474 360.352 144.788 cv
360.352 145.102 360.477 145.403 360.699 145.625 cv
360.921 145.847 361.222 145.972 361.536 145.972 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
361.536 145.972 mo
361.851 145.972 362.152 145.847 362.374 145.625 cv
362.596 145.403 362.721 145.102 362.721 144.788 cv
362.721 144.474 362.596 144.173 362.374 143.95 cv
362.152 143.728 361.851 143.604 361.536 143.604 cv
361.222 143.604 360.921 143.728 360.699 143.95 cv
360.477 144.173 360.352 144.474 360.352 144.788 cv
360.352 145.102 360.477 145.403 360.699 145.625 cv
360.921 145.847 361.222 145.972 361.536 145.972 cv
cp
@
grestore
gsave
364.063 143.257 mo
367.849 143.257 li
367.849 139.471 li
364.063 139.471 li
cp
clp
365.956 142.548 mo
366.27 142.548 366.572 142.424 366.794 142.202 cv
367.016 141.979 367.141 141.678 367.141 141.364 cv
367.141 141.05 367.016 140.749 366.794 140.527 cv
366.572 140.304 366.27 140.18 365.956 140.18 cv
365.642 140.18 365.341 140.304 365.119 140.527 cv
364.897 140.749 364.772 141.05 364.772 141.364 cv
364.772 141.678 364.897 141.979 365.119 142.202 cv
365.341 142.424 365.642 142.548 365.956 142.548 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
365.956 142.548 mo
366.27 142.548 366.572 142.424 366.794 142.202 cv
367.016 141.979 367.141 141.678 367.141 141.364 cv
367.141 141.05 367.016 140.749 366.794 140.527 cv
366.572 140.304 366.27 140.18 365.956 140.18 cv
365.642 140.18 365.341 140.304 365.119 140.527 cv
364.897 140.749 364.772 141.05 364.772 141.364 cv
364.772 141.678 364.897 141.979 365.119 142.202 cv
365.341 142.424 365.642 142.548 365.956 142.548 cv
cp
@
grestore
gsave
368.483 141.102 mo
372.269 141.102 li
372.269 137.316 li
368.483 137.316 li
cp
clp
370.376 140.393 mo
370.69 140.393 370.991 140.268 371.214 140.046 cv
371.436 139.824 371.56 139.523 371.56 139.209 cv
371.56 138.895 371.436 138.593 371.214 138.371 cv
370.991 138.149 370.69 138.024 370.376 138.024 cv
370.062 138.024 369.761 138.149 369.539 138.371 cv
369.316 138.593 369.192 138.895 369.192 139.209 cv
369.192 139.523 369.316 139.824 369.539 140.046 cv
369.761 140.268 370.062 140.393 370.376 140.393 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
370.376 140.393 mo
370.69 140.393 370.991 140.268 371.214 140.046 cv
371.436 139.824 371.56 139.523 371.56 139.209 cv
371.56 138.895 371.436 138.593 371.214 138.371 cv
370.991 138.149 370.69 138.024 370.376 138.024 cv
370.062 138.024 369.761 138.149 369.539 138.371 cv
369.316 138.593 369.192 138.895 369.192 139.209 cv
369.192 139.523 369.316 139.824 369.539 140.046 cv
369.761 140.268 370.062 140.393 370.376 140.393 cv
cp
@
grestore
gsave
372.903 139.432 mo
376.689 139.432 li
376.689 135.645 li
372.903 135.645 li
cp
clp
374.796 138.723 mo
375.11 138.723 375.411 138.598 375.633 138.376 cv
375.855 138.154 375.98 137.853 375.98 137.538 cv
375.98 137.224 375.855 136.923 375.633 136.701 cv
375.411 136.479 375.11 136.354 374.796 136.354 cv
374.482 136.354 374.181 136.479 373.958 136.701 cv
373.736 136.923 373.612 137.224 373.612 137.538 cv
373.612 137.853 373.736 138.154 373.958 138.376 cv
374.181 138.598 374.482 138.723 374.796 138.723 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
374.796 138.723 mo
375.11 138.723 375.411 138.598 375.633 138.376 cv
375.855 138.154 375.98 137.853 375.98 137.538 cv
375.98 137.224 375.855 136.923 375.633 136.701 cv
375.411 136.479 375.11 136.354 374.796 136.354 cv
374.482 136.354 374.181 136.479 373.958 136.701 cv
373.736 136.923 373.612 137.224 373.612 137.538 cv
373.612 137.853 373.736 138.154 373.958 138.376 cv
374.181 138.598 374.482 138.723 374.796 138.723 cv
cp
@
grestore
gsave
377.323 136.329 mo
381.109 136.329 li
381.109 132.543 li
377.323 132.543 li
cp
clp
379.216 135.62 mo
379.53 135.62 379.831 135.496 380.053 135.273 cv
380.275 135.051 380.4 134.75 380.4 134.436 cv
380.4 134.122 380.275 133.821 380.053 133.599 cv
379.831 133.376 379.53 133.252 379.216 133.252 cv
378.902 133.252 378.6 133.376 378.378 133.599 cv
378.156 133.821 378.031 134.122 378.031 134.436 cv
378.031 134.75 378.156 135.051 378.378 135.273 cv
378.6 135.496 378.902 135.62 379.216 135.62 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
379.216 135.62 mo
379.53 135.62 379.831 135.496 380.053 135.273 cv
380.275 135.051 380.4 134.75 380.4 134.436 cv
380.4 134.122 380.275 133.821 380.053 133.599 cv
379.831 133.376 379.53 133.252 379.216 133.252 cv
378.902 133.252 378.6 133.376 378.378 133.599 cv
378.156 133.821 378.031 134.122 378.031 134.436 cv
378.031 134.75 378.156 135.051 378.378 135.273 cv
378.6 135.496 378.902 135.62 379.216 135.62 cv
cp
@
grestore
gsave
381.742 132.475 mo
385.529 132.475 li
385.529 128.688 li
381.742 128.688 li
cp
clp
383.635 131.766 mo
383.95 131.766 384.251 131.641 384.473 131.419 cv
384.695 131.197 384.82 130.896 384.82 130.582 cv
384.82 130.267 384.695 129.966 384.473 129.744 cv
384.251 129.522 383.95 129.397 383.635 129.397 cv
383.321 129.397 383.02 129.522 382.798 129.744 cv
382.576 129.966 382.451 130.267 382.451 130.582 cv
382.451 130.896 382.576 131.197 382.798 131.419 cv
383.02 131.641 383.321 131.766 383.635 131.766 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
383.635 131.766 mo
383.95 131.766 384.251 131.641 384.473 131.419 cv
384.695 131.197 384.82 130.896 384.82 130.582 cv
384.82 130.267 384.695 129.966 384.473 129.744 cv
384.251 129.522 383.95 129.397 383.635 129.397 cv
383.321 129.397 383.02 129.522 382.798 129.744 cv
382.576 129.966 382.451 130.267 382.451 130.582 cv
382.451 130.896 382.576 131.197 382.798 131.419 cv
383.02 131.641 383.321 131.766 383.635 131.766 cv
cp
@
grestore
gsave
386.162 132.482 mo
389.948 132.482 li
389.948 128.696 li
386.162 128.696 li
cp
clp
388.055 131.773 mo
388.369 131.773 388.671 131.649 388.893 131.427 cv
389.115 131.204 389.24 130.903 389.24 130.589 cv
389.24 130.275 389.115 129.974 388.893 129.752 cv
388.671 129.529 388.369 129.405 388.055 129.405 cv
387.741 129.405 387.44 129.529 387.218 129.752 cv
386.996 129.974 386.871 130.275 386.871 130.589 cv
386.871 130.903 386.996 131.204 387.218 131.427 cv
387.44 131.649 387.741 131.773 388.055 131.773 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
388.055 131.773 mo
388.369 131.773 388.671 131.649 388.893 131.427 cv
389.115 131.204 389.24 130.903 389.24 130.589 cv
389.24 130.275 389.115 129.974 388.893 129.752 cv
388.671 129.529 388.369 129.405 388.055 129.405 cv
387.741 129.405 387.44 129.529 387.218 129.752 cv
386.996 129.974 386.871 130.275 386.871 130.589 cv
386.871 130.903 386.996 131.204 387.218 131.427 cv
387.44 131.649 387.741 131.773 388.055 131.773 cv
cp
@
grestore
gsave
390.582 129.252 mo
394.368 129.252 li
394.368 125.466 li
390.582 125.466 li
cp
clp
392.475 128.543 mo
392.789 128.543 393.09 128.418 393.313 128.196 cv
393.535 127.974 393.659 127.673 393.659 127.359 cv
393.659 127.045 393.535 126.743 393.313 126.521 cv
393.09 126.299 392.789 126.174 392.475 126.174 cv
392.161 126.174 391.86 126.299 391.638 126.521 cv
391.415 126.743 391.291 127.045 391.291 127.359 cv
391.291 127.673 391.415 127.974 391.638 128.196 cv
391.86 128.418 392.161 128.543 392.475 128.543 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
392.475 128.543 mo
392.789 128.543 393.09 128.418 393.313 128.196 cv
393.535 127.974 393.659 127.673 393.659 127.359 cv
393.659 127.045 393.535 126.743 393.313 126.521 cv
393.09 126.299 392.789 126.174 392.475 126.174 cv
392.161 126.174 391.86 126.299 391.638 126.521 cv
391.415 126.743 391.291 127.045 391.291 127.359 cv
391.291 127.673 391.415 127.974 391.638 128.196 cv
391.86 128.418 392.161 128.543 392.475 128.543 cv
cp
@
grestore
gsave
395.002 128.827 mo
398.788 128.827 li
398.788 125.041 li
395.002 125.041 li
cp
clp
396.895 128.119 mo
397.209 128.119 397.51 127.994 397.732 127.772 cv
397.954 127.55 398.079 127.248 398.079 126.934 cv
398.079 126.62 397.954 126.319 397.732 126.097 cv
397.51 125.875 397.209 125.75 396.895 125.75 cv
396.581 125.75 396.28 125.875 396.057 126.097 cv
395.835 126.319 395.711 126.62 395.711 126.934 cv
395.711 127.248 395.835 127.55 396.057 127.772 cv
396.28 127.994 396.581 128.119 396.895 128.119 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
396.895 128.119 mo
397.209 128.119 397.51 127.994 397.732 127.772 cv
397.954 127.55 398.079 127.248 398.079 126.934 cv
398.079 126.62 397.954 126.319 397.732 126.097 cv
397.51 125.875 397.209 125.75 396.895 125.75 cv
396.581 125.75 396.28 125.875 396.057 126.097 cv
395.835 126.319 395.711 126.62 395.711 126.934 cv
395.711 127.248 395.835 127.55 396.057 127.772 cv
396.28 127.994 396.581 128.119 396.895 128.119 cv
cp
@
grestore
gsave
399.422 126.474 mo
403.208 126.474 li
403.208 122.688 li
399.422 122.688 li
cp
clp
401.315 125.766 mo
401.629 125.766 401.93 125.641 402.152 125.419 cv
402.374 125.197 402.499 124.895 402.499 124.581 cv
402.499 124.267 402.374 123.966 402.152 123.744 cv
401.93 123.522 401.629 123.397 401.315 123.397 cv
401.001 123.397 400.699 123.522 400.477 123.744 cv
400.255 123.966 400.13 124.267 400.13 124.581 cv
400.13 124.895 400.255 125.197 400.477 125.419 cv
400.699 125.641 401.001 125.766 401.315 125.766 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
401.315 125.766 mo
401.629 125.766 401.93 125.641 402.152 125.419 cv
402.374 125.197 402.499 124.895 402.499 124.581 cv
402.499 124.267 402.374 123.966 402.152 123.744 cv
401.93 123.522 401.629 123.397 401.315 123.397 cv
401.001 123.397 400.699 123.522 400.477 123.744 cv
400.255 123.966 400.13 124.267 400.13 124.581 cv
400.13 124.895 400.255 125.197 400.477 125.419 cv
400.699 125.641 401.001 125.766 401.315 125.766 cv
cp
@
grestore
gsave
403.841 124.224 mo
407.628 124.224 li
407.628 120.438 li
403.841 120.438 li
cp
clp
405.734 123.515 mo
406.049 123.515 406.35 123.391 406.572 123.168 cv
406.794 122.946 406.919 122.645 406.919 122.331 cv
406.919 122.017 406.794 121.716 406.572 121.493 cv
406.35 121.271 406.049 121.147 405.734 121.147 cv
405.42 121.147 405.119 121.271 404.897 121.493 cv
404.675 121.716 404.55 122.017 404.55 122.331 cv
404.55 122.645 404.675 122.946 404.897 123.168 cv
405.119 123.391 405.42 123.515 405.734 123.515 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
405.734 123.515 mo
406.049 123.515 406.35 123.391 406.572 123.168 cv
406.794 122.946 406.919 122.645 406.919 122.331 cv
406.919 122.017 406.794 121.716 406.572 121.493 cv
406.35 121.271 406.049 121.147 405.734 121.147 cv
405.42 121.147 405.119 121.271 404.897 121.493 cv
404.675 121.716 404.55 122.017 404.55 122.331 cv
404.55 122.645 404.675 122.946 404.897 123.168 cv
405.119 123.391 405.42 123.515 405.734 123.515 cv
cp
@
grestore
gsave
408.261 121.531 mo
412.047 121.531 li
412.047 117.744 li
408.261 117.744 li
cp
clp
410.154 120.822 mo
410.468 120.822 410.77 120.697 410.992 120.475 cv
411.214 120.253 411.339 119.952 411.339 119.637 cv
411.339 119.323 411.214 119.022 410.992 118.8 cv
410.77 118.578 410.468 118.453 410.154 118.453 cv
409.84 118.453 409.539 118.578 409.317 118.8 cv
409.095 119.022 408.97 119.323 408.97 119.637 cv
408.97 119.952 409.095 120.253 409.317 120.475 cv
409.539 120.697 409.84 120.822 410.154 120.822 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
410.154 120.822 mo
410.468 120.822 410.77 120.697 410.992 120.475 cv
411.214 120.253 411.339 119.952 411.339 119.637 cv
411.339 119.323 411.214 119.022 410.992 118.8 cv
410.77 118.578 410.468 118.453 410.154 118.453 cv
409.84 118.453 409.539 118.578 409.317 118.8 cv
409.095 119.022 408.97 119.323 408.97 119.637 cv
408.97 119.952 409.095 120.253 409.317 120.475 cv
409.539 120.697 409.84 120.822 410.154 120.822 cv
cp
@
grestore
gsave
412.681 119.498 mo
416.467 119.498 li
416.467 115.712 li
412.681 115.712 li
cp
clp
414.574 118.79 mo
414.888 118.79 415.189 118.665 415.412 118.443 cv
415.634 118.221 415.758 117.919 415.758 117.605 cv
415.758 117.291 415.634 116.99 415.412 116.768 cv
415.189 116.546 414.888 116.421 414.574 116.421 cv
414.26 116.421 413.959 116.546 413.737 116.768 cv
413.514 116.99 413.39 117.291 413.39 117.605 cv
413.39 117.919 413.514 118.221 413.737 118.443 cv
413.959 118.665 414.26 118.79 414.574 118.79 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
414.574 118.79 mo
414.888 118.79 415.189 118.665 415.412 118.443 cv
415.634 118.221 415.758 117.919 415.758 117.605 cv
415.758 117.291 415.634 116.99 415.412 116.768 cv
415.189 116.546 414.888 116.421 414.574 116.421 cv
414.26 116.421 413.959 116.546 413.737 116.768 cv
413.514 116.99 413.39 117.291 413.39 117.605 cv
413.39 117.919 413.514 118.221 413.737 118.443 cv
413.959 118.665 414.26 118.79 414.574 118.79 cv
cp
@
grestore
gsave
417.101 115.755 mo
420.887 115.755 li
420.887 111.969 li
417.101 111.969 li
cp
clp
418.994 115.046 mo
419.308 115.046 419.609 114.922 419.831 114.7 cv
420.053 114.477 420.178 114.176 420.178 113.862 cv
420.178 113.548 420.053 113.247 419.831 113.025 cv
419.609 112.803 419.308 112.678 418.994 112.678 cv
418.68 112.678 418.379 112.803 418.156 113.025 cv
417.934 113.247 417.81 113.548 417.81 113.862 cv
417.81 114.176 417.934 114.477 418.156 114.7 cv
418.379 114.922 418.68 115.046 418.994 115.046 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
418.994 115.046 mo
419.308 115.046 419.609 114.922 419.831 114.7 cv
420.053 114.477 420.178 114.176 420.178 113.862 cv
420.178 113.548 420.053 113.247 419.831 113.025 cv
419.609 112.803 419.308 112.678 418.994 112.678 cv
418.68 112.678 418.379 112.803 418.156 113.025 cv
417.934 113.247 417.81 113.548 417.81 113.862 cv
417.81 114.176 417.934 114.477 418.156 114.7 cv
418.379 114.922 418.68 115.046 418.994 115.046 cv
cp
@
grestore
gsave
421.521 112.927 mo
425.307 112.927 li
425.307 109.141 li
421.521 109.141 li
cp
clp
423.414 112.218 mo
423.728 112.218 424.029 112.094 424.251 111.871 cv
424.473 111.649 424.598 111.348 424.598 111.034 cv
424.598 110.72 424.473 110.419 424.251 110.196 cv
424.029 109.974 423.728 109.85 423.414 109.85 cv
423.1 109.85 422.798 109.974 422.576 110.196 cv
422.354 110.419 422.229 110.72 422.229 111.034 cv
422.229 111.348 422.354 111.649 422.576 111.871 cv
422.798 112.094 423.1 112.218 423.414 112.218 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
423.414 112.218 mo
423.728 112.218 424.029 112.094 424.251 111.871 cv
424.473 111.649 424.598 111.348 424.598 111.034 cv
424.598 110.72 424.473 110.419 424.251 110.196 cv
424.029 109.974 423.728 109.85 423.414 109.85 cv
423.1 109.85 422.798 109.974 422.576 110.196 cv
422.354 110.419 422.229 110.72 422.229 111.034 cv
422.229 111.348 422.354 111.649 422.576 111.871 cv
422.798 112.094 423.1 112.218 423.414 112.218 cv
cp
@
grestore
gsave
425.94 113.846 mo
429.727 113.846 li
429.727 110.06 li
425.94 110.06 li
cp
clp
427.833 113.137 mo
428.148 113.137 428.449 113.012 428.671 112.79 cv
428.893 112.568 429.018 112.267 429.018 111.953 cv
429.018 111.639 428.893 111.337 428.671 111.115 cv
428.449 110.893 428.148 110.768 427.833 110.768 cv
427.519 110.768 427.218 110.893 426.996 111.115 cv
426.774 111.337 426.649 111.639 426.649 111.953 cv
426.649 112.267 426.774 112.568 426.996 112.79 cv
427.218 113.012 427.519 113.137 427.833 113.137 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
427.833 113.137 mo
428.148 113.137 428.449 113.012 428.671 112.79 cv
428.893 112.568 429.018 112.267 429.018 111.953 cv
429.018 111.639 428.893 111.337 428.671 111.115 cv
428.449 110.893 428.148 110.768 427.833 110.768 cv
427.519 110.768 427.218 110.893 426.996 111.115 cv
426.774 111.337 426.649 111.639 426.649 111.953 cv
426.649 112.267 426.774 112.568 426.996 112.79 cv
427.218 113.012 427.519 113.137 427.833 113.137 cv
cp
@
grestore
gsave
430.36 109.463 mo
434.146 109.463 li
434.146 105.677 li
430.36 105.677 li
cp
clp
432.253 108.755 mo
432.567 108.755 432.869 108.63 433.091 108.408 cv
433.313 108.186 433.438 107.884 433.438 107.57 cv
433.438 107.256 433.313 106.955 433.091 106.733 cv
432.869 106.511 432.567 106.386 432.253 106.386 cv
431.939 106.386 431.638 106.511 431.416 106.733 cv
431.194 106.955 431.069 107.256 431.069 107.57 cv
431.069 107.884 431.194 108.186 431.416 108.408 cv
431.638 108.63 431.939 108.755 432.253 108.755 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
432.253 108.755 mo
432.567 108.755 432.869 108.63 433.091 108.408 cv
433.313 108.186 433.438 107.884 433.438 107.57 cv
433.438 107.256 433.313 106.955 433.091 106.733 cv
432.869 106.511 432.567 106.386 432.253 106.386 cv
431.939 106.386 431.638 106.511 431.416 106.733 cv
431.194 106.955 431.069 107.256 431.069 107.57 cv
431.069 107.884 431.194 108.186 431.416 108.408 cv
431.638 108.63 431.939 108.755 432.253 108.755 cv
cp
@
grestore
gsave
434.78 106.444 mo
438.566 106.444 li
438.566 102.658 li
434.78 102.658 li
cp
clp
436.673 105.736 mo
436.987 105.736 437.288 105.611 437.511 105.389 cv
437.733 105.167 437.857 104.865 437.857 104.551 cv
437.857 104.237 437.733 103.936 437.511 103.714 cv
437.288 103.492 436.987 103.367 436.673 103.367 cv
436.359 103.367 436.058 103.492 435.836 103.714 cv
435.613 103.936 435.489 104.237 435.489 104.551 cv
435.489 104.865 435.613 105.167 435.836 105.389 cv
436.058 105.611 436.359 105.736 436.673 105.736 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
436.673 105.736 mo
436.987 105.736 437.288 105.611 437.511 105.389 cv
437.733 105.167 437.857 104.865 437.857 104.551 cv
437.857 104.237 437.733 103.936 437.511 103.714 cv
437.288 103.492 436.987 103.367 436.673 103.367 cv
436.359 103.367 436.058 103.492 435.836 103.714 cv
435.613 103.936 435.489 104.237 435.489 104.551 cv
435.489 104.865 435.613 105.167 435.836 105.389 cv
436.058 105.611 436.359 105.736 436.673 105.736 cv
cp
@
grestore
gsave
439.2 103.435 mo
442.986 103.435 li
442.986 99.6487 li
439.2 99.6487 li
cp
clp
441.093 102.726 mo
441.407 102.726 441.708 102.601 441.93 102.379 cv
442.152 102.157 442.277 101.856 442.277 101.542 cv
442.277 101.228 442.152 100.926 441.93 100.704 cv
441.708 100.482 441.407 100.357 441.093 100.357 cv
440.779 100.357 440.478 100.482 440.255 100.704 cv
440.033 100.926 439.909 101.228 439.909 101.542 cv
439.909 101.856 440.033 102.157 440.255 102.379 cv
440.478 102.601 440.779 102.726 441.093 102.726 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
441.093 102.726 mo
441.407 102.726 441.708 102.601 441.93 102.379 cv
442.152 102.157 442.277 101.856 442.277 101.542 cv
442.277 101.228 442.152 100.926 441.93 100.704 cv
441.708 100.482 441.407 100.357 441.093 100.357 cv
440.779 100.357 440.478 100.482 440.255 100.704 cv
440.033 100.926 439.909 101.228 439.909 101.542 cv
439.909 101.856 440.033 102.157 440.255 102.379 cv
440.478 102.601 440.779 102.726 441.093 102.726 cv
cp
@
grestore
gsave
443.62 101.712 mo
447.406 101.712 li
447.406 97.9253 li
443.62 97.9253 li
cp
clp
445.513 101.003 mo
445.827 101.003 446.128 100.878 446.35 100.656 cv
446.572 100.434 446.697 100.133 446.697 99.8184 cv
446.697 99.5043 446.572 99.203 446.35 98.9809 cv
446.128 98.7588 445.827 98.634 445.513 98.634 cv
445.199 98.634 444.897 98.7588 444.675 98.9809 cv
444.453 99.203 444.328 99.5043 444.328 99.8184 cv
444.328 100.133 444.453 100.434 444.675 100.656 cv
444.897 100.878 445.199 101.003 445.513 101.003 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
445.513 101.003 mo
445.827 101.003 446.128 100.878 446.35 100.656 cv
446.572 100.434 446.697 100.133 446.697 99.8184 cv
446.697 99.5043 446.572 99.203 446.35 98.9809 cv
446.128 98.7588 445.827 98.634 445.513 98.634 cv
445.199 98.634 444.897 98.7588 444.675 98.9809 cv
444.453 99.203 444.328 99.5043 444.328 99.8184 cv
444.328 100.133 444.453 100.434 444.675 100.656 cv
444.897 100.878 445.199 101.003 445.513 101.003 cv
cp
@
grestore
gsave
448.039 97.3039 mo
451.826 97.3039 li
451.826 93.5176 li
448.039 93.5176 li
cp
clp
449.932 96.5951 mo
450.247 96.5951 450.548 96.4703 450.77 96.2482 cv
450.992 96.0261 451.117 95.7248 451.117 95.4107 cv
451.117 95.0966 450.992 94.7953 450.77 94.5732 cv
450.548 94.3511 450.247 94.2263 449.932 94.2263 cv
449.618 94.2263 449.317 94.3511 449.095 94.5732 cv
448.873 94.7953 448.748 95.0966 448.748 95.4107 cv
448.748 95.7248 448.873 96.0261 449.095 96.2482 cv
449.317 96.4703 449.618 96.5951 449.932 96.5951 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
449.932 96.5951 mo
450.247 96.5951 450.548 96.4703 450.77 96.2482 cv
450.992 96.0261 451.117 95.7248 451.117 95.4107 cv
451.117 95.0966 450.992 94.7953 450.77 94.5732 cv
450.548 94.3511 450.247 94.2263 449.932 94.2263 cv
449.618 94.2263 449.317 94.3511 449.095 94.5732 cv
448.873 94.7953 448.748 95.0966 448.748 95.4107 cv
448.748 95.7248 448.873 96.0261 449.095 96.2482 cv
449.317 96.4703 449.618 96.5951 449.932 96.5951 cv
cp
@
grestore
gsave
452.459 97.1951 mo
456.245 97.1951 li
456.245 93.4088 li
452.459 93.4088 li
cp
clp
454.352 96.4863 mo
454.666 96.4863 454.968 96.3615 455.19 96.1394 cv
455.412 95.9173 455.537 95.616 455.537 95.3019 cv
455.537 94.9878 455.412 94.6866 455.19 94.4645 cv
454.968 94.2424 454.666 94.1176 454.352 94.1176 cv
454.038 94.1176 453.737 94.2424 453.515 94.4645 cv
453.293 94.6866 453.168 94.9878 453.168 95.3019 cv
453.168 95.616 453.293 95.9173 453.515 96.1394 cv
453.737 96.3615 454.038 96.4863 454.352 96.4863 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
454.352 96.4863 mo
454.666 96.4863 454.968 96.3615 455.19 96.1394 cv
455.412 95.9173 455.537 95.616 455.537 95.3019 cv
455.537 94.9878 455.412 94.6866 455.19 94.4645 cv
454.968 94.2424 454.666 94.1176 454.352 94.1176 cv
454.038 94.1176 453.737 94.2424 453.515 94.4645 cv
453.293 94.6866 453.168 94.9878 453.168 95.3019 cv
453.168 95.616 453.293 95.9173 453.515 96.1394 cv
453.737 96.3615 454.038 96.4863 454.352 96.4863 cv
cp
@
grestore
gsave
456.879 93.7882 mo
460.665 93.7882 li
460.665 90.002 li
456.879 90.002 li
cp
clp
458.772 93.0795 mo
459.086 93.0795 459.387 92.9547 459.61 92.7326 cv
459.832 92.5105 459.956 92.2092 459.956 91.8951 cv
459.956 91.581 459.832 91.2797 459.61 91.0576 cv
459.387 90.8355 459.086 90.7107 458.772 90.7107 cv
458.458 90.7107 458.157 90.8355 457.935 91.0576 cv
457.712 91.2797 457.588 91.581 457.588 91.8951 cv
457.588 92.2092 457.712 92.5105 457.935 92.7326 cv
458.157 92.9547 458.458 93.0795 458.772 93.0795 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
458.772 93.0795 mo
459.086 93.0795 459.387 92.9547 459.61 92.7326 cv
459.832 92.5105 459.956 92.2092 459.956 91.8951 cv
459.956 91.581 459.832 91.2797 459.61 91.0576 cv
459.387 90.8355 459.086 90.7107 458.772 90.7107 cv
458.458 90.7107 458.157 90.8355 457.935 91.0576 cv
457.712 91.2797 457.588 91.581 457.588 91.8951 cv
457.588 92.2092 457.712 92.5105 457.935 92.7326 cv
458.157 92.9547 458.458 93.0795 458.772 93.0795 cv
cp
@
grestore
gsave
461.299 90.7666 mo
465.085 90.7666 li
465.085 86.9803 li
461.299 86.9803 li
cp
clp
463.192 90.0578 mo
463.506 90.0578 463.807 89.933 464.029 89.7109 cv
464.251 89.4888 464.376 89.1875 464.376 88.8734 cv
464.376 88.5593 464.251 88.2581 464.029 88.036 cv
463.807 87.8139 463.506 87.6891 463.192 87.6891 cv
462.878 87.6891 462.577 87.8139 462.354 88.036 cv
462.132 88.2581 462.008 88.5593 462.008 88.8734 cv
462.008 89.1875 462.132 89.4888 462.354 89.7109 cv
462.577 89.933 462.878 90.0578 463.192 90.0578 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
463.192 90.0578 mo
463.506 90.0578 463.807 89.933 464.029 89.7109 cv
464.251 89.4888 464.376 89.1875 464.376 88.8734 cv
464.376 88.5593 464.251 88.2581 464.029 88.036 cv
463.807 87.8139 463.506 87.6891 463.192 87.6891 cv
462.878 87.6891 462.577 87.8139 462.354 88.036 cv
462.132 88.2581 462.008 88.5593 462.008 88.8734 cv
462.008 89.1875 462.132 89.4888 462.354 89.7109 cv
462.577 89.933 462.878 90.0578 463.192 90.0578 cv
cp
@
grestore
gsave
465.719 86.9341 mo
469.505 86.9341 li
469.505 83.1478 li
465.719 83.1478 li
cp
clp
467.612 86.2253 mo
467.926 86.2253 468.227 86.1005 468.449 85.8784 cv
468.671 85.6563 468.796 85.3551 468.796 85.041 cv
468.796 84.7269 468.671 84.4256 468.449 84.2035 cv
468.227 83.9814 467.926 83.8566 467.612 83.8566 cv
467.298 83.8566 466.996 83.9814 466.774 84.2035 cv
466.552 84.4256 466.427 84.7269 466.427 85.041 cv
466.427 85.3551 466.552 85.6563 466.774 85.8784 cv
466.996 86.1005 467.298 86.2253 467.612 86.2253 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
467.612 86.2253 mo
467.926 86.2253 468.227 86.1005 468.449 85.8784 cv
468.671 85.6563 468.796 85.3551 468.796 85.041 cv
468.796 84.7269 468.671 84.4256 468.449 84.2035 cv
468.227 83.9814 467.926 83.8566 467.612 83.8566 cv
467.298 83.8566 466.996 83.9814 466.774 84.2035 cv
466.552 84.4256 466.427 84.7269 466.427 85.041 cv
466.427 85.3551 466.552 85.6563 466.774 85.8784 cv
466.996 86.1005 467.298 86.2253 467.612 86.2253 cv
cp
@
grestore
gsave
470.138 81.2966 mo
473.925 81.2966 li
473.925 77.5103 li
470.138 77.5103 li
cp
clp
472.031 80.5878 mo
472.346 80.5878 472.647 80.463 472.869 80.2409 cv
473.091 80.0188 473.216 79.7175 473.216 79.4034 cv
473.216 79.0893 473.091 78.7881 472.869 78.566 cv
472.647 78.3439 472.346 78.2191 472.031 78.2191 cv
471.717 78.2191 471.416 78.3439 471.194 78.566 cv
470.972 78.7881 470.847 79.0893 470.847 79.4034 cv
470.847 79.7175 470.972 80.0188 471.194 80.2409 cv
471.416 80.463 471.717 80.5878 472.031 80.5878 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
472.031 80.5878 mo
472.346 80.5878 472.647 80.463 472.869 80.2409 cv
473.091 80.0188 473.216 79.7175 473.216 79.4034 cv
473.216 79.0893 473.091 78.7881 472.869 78.566 cv
472.647 78.3439 472.346 78.2191 472.031 78.2191 cv
471.717 78.2191 471.416 78.3439 471.194 78.566 cv
470.972 78.7881 470.847 79.0893 470.847 79.4034 cv
470.847 79.7175 470.972 80.0188 471.194 80.2409 cv
471.416 80.463 471.717 80.5878 472.031 80.5878 cv
cp
@
grestore
gsave
474.558 80.3944 mo
478.344 80.3944 li
478.344 76.6081 li
474.558 76.6081 li
cp
clp
476.451 79.6856 mo
476.765 79.6856 477.067 79.5608 477.289 79.3387 cv
477.511 79.1166 477.636 78.8154 477.636 78.5013 cv
477.636 78.1871 477.511 77.8859 477.289 77.6638 cv
477.067 77.4417 476.765 77.3169 476.451 77.3169 cv
476.137 77.3169 475.836 77.4417 475.614 77.6638 cv
475.392 77.8859 475.267 78.1871 475.267 78.5013 cv
475.267 78.8154 475.392 79.1166 475.614 79.3387 cv
475.836 79.5608 476.137 79.6856 476.451 79.6856 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
476.451 79.6856 mo
476.765 79.6856 477.067 79.5608 477.289 79.3387 cv
477.511 79.1166 477.636 78.8154 477.636 78.5013 cv
477.636 78.1871 477.511 77.8859 477.289 77.6638 cv
477.067 77.4417 476.765 77.3169 476.451 77.3169 cv
476.137 77.3169 475.836 77.4417 475.614 77.6638 cv
475.392 77.8859 475.267 78.1871 475.267 78.5013 cv
475.267 78.8154 475.392 79.1166 475.614 79.3387 cv
475.836 79.5608 476.137 79.6856 476.451 79.6856 cv
cp
@
grestore
gsave
478.978 77.9927 mo
482.764 77.9927 li
482.764 74.2064 li
478.978 74.2064 li
cp
clp
480.871 77.2839 mo
481.185 77.2839 481.486 77.1591 481.709 76.937 cv
481.931 76.7149 482.055 76.4137 482.055 76.0995 cv
482.055 75.7854 481.931 75.4842 481.709 75.2621 cv
481.486 75.04 481.185 74.9152 480.871 74.9152 cv
480.557 74.9152 480.256 75.04 480.034 75.2621 cv
479.811 75.4842 479.687 75.7854 479.687 76.0995 cv
479.687 76.4137 479.811 76.7149 480.034 76.937 cv
480.256 77.1591 480.557 77.2839 480.871 77.2839 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
480.871 77.2839 mo
481.185 77.2839 481.486 77.1591 481.709 76.937 cv
481.931 76.7149 482.055 76.4137 482.055 76.0995 cv
482.055 75.7854 481.931 75.4842 481.709 75.2621 cv
481.486 75.04 481.185 74.9152 480.871 74.9152 cv
480.557 74.9152 480.256 75.04 480.034 75.2621 cv
479.811 75.4842 479.687 75.7854 479.687 76.0995 cv
479.687 76.4137 479.811 76.7149 480.034 76.937 cv
480.256 77.1591 480.557 77.2839 480.871 77.2839 cv
cp
@
grestore
gsave
483.398 72.9273 mo
487.184 72.9273 li
487.184 69.1411 li
483.398 69.1411 li
cp
clp
485.291 72.2186 mo
485.605 72.2186 485.906 72.0938 486.128 71.8717 cv
486.35 71.6496 486.475 71.3483 486.475 71.0342 cv
486.475 70.7201 486.35 70.4188 486.128 70.1967 cv
485.906 69.9746 485.605 69.8498 485.291 69.8498 cv
484.977 69.8498 484.676 69.9746 484.453 70.1967 cv
484.231 70.4188 484.107 70.7201 484.107 71.0342 cv
484.107 71.3483 484.231 71.6496 484.453 71.8717 cv
484.676 72.0938 484.977 72.2186 485.291 72.2186 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
485.291 72.2186 mo
485.605 72.2186 485.906 72.0938 486.128 71.8717 cv
486.35 71.6496 486.475 71.3483 486.475 71.0342 cv
486.475 70.7201 486.35 70.4188 486.128 70.1967 cv
485.906 69.9746 485.605 69.8498 485.291 69.8498 cv
484.977 69.8498 484.676 69.9746 484.453 70.1967 cv
484.231 70.4188 484.107 70.7201 484.107 71.0342 cv
484.107 71.3483 484.231 71.6496 484.453 71.8717 cv
484.676 72.0938 484.977 72.2186 485.291 72.2186 cv
cp
@
grestore
gsave
487.818 71.8598 mo
491.604 71.8598 li
491.604 68.0735 li
487.818 68.0735 li
cp
clp
489.711 71.151 mo
490.025 71.151 490.326 71.0262 490.548 70.8041 cv
490.77 70.582 490.895 70.2807 490.895 69.9666 cv
490.895 69.6525 490.77 69.3512 490.548 69.1291 cv
490.326 68.907 490.025 68.7822 489.711 68.7822 cv
489.397 68.7822 489.095 68.907 488.873 69.1291 cv
488.651 69.3512 488.526 69.6525 488.526 69.9666 cv
488.526 70.2807 488.651 70.582 488.873 70.8041 cv
489.095 71.0262 489.397 71.151 489.711 71.151 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
489.711 71.151 mo
490.025 71.151 490.326 71.0262 490.548 70.8041 cv
490.77 70.582 490.895 70.2807 490.895 69.9666 cv
490.895 69.6525 490.77 69.3512 490.548 69.1291 cv
490.326 68.907 490.025 68.7822 489.711 68.7822 cv
489.397 68.7822 489.095 68.907 488.873 69.1291 cv
488.651 69.3512 488.526 69.6525 488.526 69.9666 cv
488.526 70.2807 488.651 70.582 488.873 70.8041 cv
489.095 71.0262 489.397 71.151 489.711 71.151 cv
cp
@
grestore
gsave
492.237 68.4405 mo
496.024 68.4405 li
496.024 64.6542 li
492.237 64.6542 li
cp
clp
494.13 67.7317 mo
494.445 67.7317 494.746 67.6069 494.968 67.3848 cv
495.19 67.1627 495.315 66.8614 495.315 66.5473 cv
495.315 66.2332 495.19 65.9319 494.968 65.7098 cv
494.746 65.4877 494.445 65.3629 494.13 65.3629 cv
493.816 65.3629 493.515 65.4877 493.293 65.7098 cv
493.071 65.9319 492.946 66.2332 492.946 66.5473 cv
492.946 66.8614 493.071 67.1627 493.293 67.3848 cv
493.515 67.6069 493.816 67.7317 494.13 67.7317 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
494.13 67.7317 mo
494.445 67.7317 494.746 67.6069 494.968 67.3848 cv
495.19 67.1627 495.315 66.8614 495.315 66.5473 cv
495.315 66.2332 495.19 65.9319 494.968 65.7098 cv
494.746 65.4877 494.445 65.3629 494.13 65.3629 cv
493.816 65.3629 493.515 65.4877 493.293 65.7098 cv
493.071 65.9319 492.946 66.2332 492.946 66.5473 cv
492.946 66.8614 493.071 67.1627 493.293 67.3848 cv
493.515 67.6069 493.816 67.7317 494.13 67.7317 cv
cp
@
grestore
gsave
496.657 65.805 mo
500.443 65.805 li
500.443 62.0187 li
496.657 62.0187 li
cp
clp
498.55 65.0962 mo
498.864 65.0962 499.166 64.9715 499.388 64.7494 cv
499.61 64.5272 499.735 64.226 499.735 63.9119 cv
499.735 63.5978 499.61 63.2965 499.388 63.0744 cv
499.166 62.8523 498.864 62.7275 498.55 62.7275 cv
498.236 62.7275 497.935 62.8523 497.713 63.0744 cv
497.491 63.2965 497.366 63.5978 497.366 63.9119 cv
497.366 64.226 497.491 64.5272 497.713 64.7494 cv
497.935 64.9715 498.236 65.0962 498.55 65.0962 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
498.55 65.0962 mo
498.864 65.0962 499.166 64.9715 499.388 64.7494 cv
499.61 64.5272 499.735 64.226 499.735 63.9119 cv
499.735 63.5978 499.61 63.2965 499.388 63.0744 cv
499.166 62.8523 498.864 62.7275 498.55 62.7275 cv
498.236 62.7275 497.935 62.8523 497.713 63.0744 cv
497.491 63.2965 497.366 63.5978 497.366 63.9119 cv
497.366 64.226 497.491 64.5272 497.713 64.7494 cv
497.935 64.9715 498.236 65.0962 498.55 65.0962 cv
cp
@
grestore
gsave
501.077 61.0558 mo
504.863 61.0558 li
504.863 57.2695 li
501.077 57.2695 li
cp
clp
502.97 60.347 mo
503.284 60.347 503.585 60.2222 503.808 60.0001 cv
504.03 59.778 504.154 59.4767 504.154 59.1626 cv
504.154 58.8485 504.03 58.5472 503.808 58.3251 cv
503.585 58.103 503.284 57.9782 502.97 57.9782 cv
502.656 57.9782 502.355 58.103 502.133 58.3251 cv
501.91 58.5472 501.786 58.8485 501.786 59.1626 cv
501.786 59.4767 501.91 59.778 502.133 60.0001 cv
502.355 60.2222 502.656 60.347 502.97 60.347 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
502.97 60.347 mo
503.284 60.347 503.585 60.2222 503.808 60.0001 cv
504.03 59.778 504.154 59.4767 504.154 59.1626 cv
504.154 58.8485 504.03 58.5472 503.808 58.3251 cv
503.585 58.103 503.284 57.9782 502.97 57.9782 cv
502.656 57.9782 502.355 58.103 502.133 58.3251 cv
501.91 58.5472 501.786 58.8485 501.786 59.1626 cv
501.786 59.4767 501.91 59.778 502.133 60.0001 cv
502.355 60.2222 502.656 60.347 502.97 60.347 cv
cp
@
grestore
gsave
505.497 62.2337 mo
509.283 62.2337 li
509.283 58.4474 li
505.497 58.4474 li
cp
clp
507.39 61.525 mo
507.704 61.525 508.005 61.4002 508.227 61.1781 cv
508.449 60.956 508.574 60.6547 508.574 60.3406 cv
508.574 60.0265 508.449 59.7252 508.227 59.5031 cv
508.005 59.281 507.704 59.1562 507.39 59.1562 cv
507.076 59.1562 506.775 59.281 506.552 59.5031 cv
506.33 59.7252 506.206 60.0265 506.206 60.3406 cv
506.206 60.6547 506.33 60.956 506.552 61.1781 cv
506.775 61.4002 507.076 61.525 507.39 61.525 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.70875 lw
507.39 61.525 mo
507.704 61.525 508.005 61.4002 508.227 61.1781 cv
508.449 60.956 508.574 60.6547 508.574 60.3406 cv
508.574 60.0265 508.449 59.7252 508.227 59.5031 cv
508.005 59.281 507.704 59.1562 507.39 59.1562 cv
507.076 59.1562 506.775 59.281 506.552 59.5031 cv
506.33 59.7252 506.206 60.0265 506.206 60.3406 cv
506.206 60.6547 506.33 60.956 506.552 61.1781 cv
506.775 61.4002 507.076 61.525 507.39 61.525 cv
cp
@
grestore
.945 lw
1 lc
65.4099 317.335 mo
69.8297 317.154 li
74.2495 316.227 li
78.6693 316.065 li
83.0891 314.067 li
87.5089 313.646 li
91.9287 312.819 li
96.3485 309.572 li
100.768 306.852 li
105.188 305.774 li
109.608 302.663 li
114.028 299.687 li
118.448 297.199 li
122.867 294.593 li
127.287 291.062 li
131.707 285.479 li
136.127 287.044 li
140.547 282.239 li
144.966 278.049 li
149.386 274.305 li
153.806 270.782 li
158.226 267.937 li
162.646 264.133 li
167.065 261.86 li
171.485 258.123 li
175.905 256.806 li
180.325 253.488 li
184.745 251.571 li
189.164 248.415 li
193.584 244.137 li
198.004 239.932 li
202.424 238.751 li
206.844 234.004 li
211.263 232.135 li
215.683 227.328 li
220.103 224.775 li
224.523 221.977 li
228.943 219.442 li
233.362 217.204 li
237.782 214.409 li
242.202 211.031 li
246.622 207.247 li
251.042 205.7 li
255.461 202.627 li
259.881 199.869 li
264.301 196.614 li
268.721 193.778 li
273.141 191.673 li
277.56 189.291 li
281.98 187.485 li
286.4 185.152 li
290.82 183.606 li
295.24 180.287 li
299.659 176.373 li
304.079 174.189 li
308.499 171.928 li
312.919 170.63 li
317.339 167.173 li
321.758 164.484 li
326.178 161.349 li
330.598 158.756 li
335.018 157.618 li
339.438 154.924 li
343.857 154.448 li
348.277 150.86 li
352.697 148.569 li
357.117 148.185 li
361.537 144.788 li
365.956 141.364 li
370.376 139.209 li
374.796 137.539 li
379.216 134.436 li
383.636 130.582 li
388.055 130.589 li
392.475 127.359 li
396.895 126.934 li
401.315 124.581 li
405.735 122.331 li
410.154 119.637 li
414.574 117.605 li
418.994 113.862 li
423.414 111.034 li
427.834 111.953 li
432.253 107.57 li
436.673 104.551 li
441.093 101.542 li
445.513 99.8184 li
449.933 95.4107 li
454.352 95.3019 li
458.772 91.8951 li
463.192 88.8734 li
467.612 85.041 li
472.032 79.4034 li
476.451 78.5013 li
480.871 76.0995 li
485.291 71.0342 li
489.711 69.9666 li
494.131 66.5473 li
498.551 63.9119 li
502.97 59.1626 li
507.39 60.3406 li
1 /0 /CSD get_res sepcs
1 sep
@
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
3.15 lw
65.4099 319.131 mo
65.4099 315.295 li
@
grestore
3.15 lw
69.8297 319.338 mo
69.8297 314.99 li
@
74.2495 318.449 mo
74.2495 314.131 li
@
78.6693 317.867 mo
78.6693 314.242 li
@
83.0891 316.341 mo
83.0891 311.882 li
@
87.5089 315.554 mo
87.5089 311.921 li
@
91.9287 314.623 mo
91.9287 310.982 li
@
96.3485 311.556 mo
96.3485 307.544 li
@
100.768 308.567 mo
100.768 305.06 li
@
105.188 307.535 mo
105.188 303.857 li
@
109.608 304.27 mo
109.608 300.884 li
@
114.028 301.361 mo
114.028 298.003 li
@
118.448 299.019 mo
118.448 295.376 li
@
122.867 296.68 mo
122.867 292.776 li
@
127.287 293.005 mo
127.287 289.093 li
@
131.707 287.542 mo
131.707 283.179 li
@
136.127 288.784 mo
136.127 285.299 li
@
140.547 283.842 mo
140.547 280.606 li
@
144.966 279.935 mo
144.966 276.101 li
@
149.386 276.062 mo
149.386 272.523 li
@
153.806 272.561 mo
153.806 269.004 li
@
158.226 269.849 mo
158.226 266.036 li
@
162.646 265.597 mo
162.646 262.621 li
@
167.065 263.635 mo
167.065 260.048 li
@
171.485 259.872 mo
171.485 256.393 li
@
175.905 258.635 mo
175.905 255.161 li
@
180.325 255.326 mo
180.325 251.749 li
@
184.745 253.148 mo
184.745 249.889 li
@
189.164 250.157 mo
189.164 246.574 li
@
193.584 245.677 mo
193.584 242.546 li
@
198.004 241.719 mo
198.004 238.177 li
@
202.424 240.434 mo
202.424 237.252 li
@
206.844 235.554 mo
206.844 232.362 li
@
211.263 233.8 mo
211.263 230.437 li
@
215.683 229.258 mo
215.683 225.595 li
@
220.103 226.499 mo
220.103 223.043 li
@
224.523 224.094 mo
224.523 219.952 li
@
228.943 221.36 mo
228.943 217.727 li
@
233.362 218.74 mo
233.362 215.761 li
@
237.782 216.13 mo
237.782 212.748 li
@
242.202 212.363 mo
242.202 209.529 li
@
246.622 208.921 mo
246.622 205.713 li
@
251.042 207.091 mo
251.042 204.304 li
@
255.461 204.568 mo
255.461 200.601 li
@
259.881 202.075 mo
259.881 197.893 li
@
264.301 198.252 mo
264.301 195.021 li
@
268.721 195.402 mo
268.721 192.194 li
@
273.141 193.394 mo
273.141 189.88 li
@
277.56 190.968 mo
277.56 187.575 li
@
281.98 189.004 mo
281.98 185.863 li
@
286.4 186.957 mo
286.4 183.284 li
@
290.82 185.309 mo
290.82 181.989 li
@
295.24 182.049 mo
295.24 178.741 li
@
299.659 178.127 mo
299.659 174.649 li
@
304.079 175.814 mo
304.079 172.656 li
@
308.499 173.676 mo
308.499 170.463 li
@
312.919 172.309 mo
312.919 169.128 li
@
317.339 169.005 mo
317.339 165.351 li
@
321.758 166.51 mo
321.758 162.442 li
@
326.178 163.015 mo
326.178 159.704 li
@
330.598 160.417 mo
330.598 157.191 li
@
335.018 159.355 mo
335.018 155.877 li
@
339.438 156.716 mo
339.438 153.134 li
@
343.857 155.937 mo
343.857 153.016 li
@
348.277 152.587 mo
348.277 149.204 li
@
352.697 150.343 mo
352.697 146.769 li
@
357.117 149.781 mo
357.117 146.628 li
@
361.537 146.412 mo
361.537 143.344 li
@
365.956 142.841 mo
365.956 139.783 li
@
370.376 140.678 mo
370.376 137.758 li
@
374.796 139.224 mo
374.796 135.977 li
@
379.216 136.321 mo
379.216 132.736 li
@
383.636 132.207 mo
383.636 128.822 li
@
388.055 132.301 mo
388.055 128.767 li
@
392.475 129.294 mo
392.475 125.548 li
@
396.895 128.837 mo
396.895 125.151 li
@
401.315 126.456 mo
401.315 122.701 li
@
405.735 124.169 mo
405.735 120.277 li
@
410.154 121.887 mo
410.154 117.536 li
@
414.574 119.727 mo
414.574 115.305 li
@
418.994 115.979 mo
418.994 111.79 li
@
423.414 113.216 mo
423.414 108.7 li
@
427.834 113.931 mo
427.834 109.775 li
@
432.253 109.422 mo
432.253 105.74 li
@
436.673 106.71 mo
436.673 102.39 li
@
441.093 103.693 mo
441.093 99.3602 li
@
445.513 102.075 mo
445.513 97.5291 li
@
449.933 97.8439 mo
449.933 93.0012 li
@
454.352 97.554 mo
454.352 93.0865 li
@
458.772 94.1539 mo
458.772 89.7108 li
@
463.192 91.7737 mo
463.192 85.6858 li
@
467.612 88.1354 mo
467.612 81.8882 li
@
472.032 83.0349 mo
472.032 75.6426 li
@
476.451 81.8349 mo
476.451 75.3486 li
@
480.871 79.6115 mo
480.871 72.4648 li
@
485.291 74.3198 mo
485.291 67.9626 li
@
489.711 73.3109 mo
489.711 66.6286 li
@
494.131 70.1803 mo
494.131 63.0894 li
@
498.551 67.2746 mo
498.551 60.8306 li
@
502.97 62.1741 mo
502.97 56.306 li
@
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
507.39 63.3654 mo
507.39 57.7226 li
@
grestore
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
1.75 lw
0 lc
[5.6 2.4 ] 0 dsh
21.2119 322.48 mo
525.129 322.48 li
@
grestore
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
1.75 lw
0 lc
[5.6 2.4 ] 0 dsh
21.2119 280.93 mo
144.966 280.93 li
1 /0 /CSD get_res sepcs
.337255 sep
@
grestore
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
1.75 lw
0 lc
[5.6 2.4 ] 0 dsh
144.966 396.238 mo
144.966 280.93 li
1 /0 /CSD get_res sepcs
.337255 sep
@
grestore
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
1.75 lw
0 lc
[5.6 2.4 ] 0 dsh
21.2119 184.452 mo
286.4 184.452 li
1 /0 /CSD get_res sepcs
.588235 sep
@
grestore
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
1.75 lw
0 lc
[5.6 2.4 ] 0 dsh
286.4 396.238 mo
286.4 184.452 li
1 /0 /CSD get_res sepcs
.588235 sep
@
grestore
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
1.75 lw
0 lc
[5.6 2.4 ] 0 dsh
21.2119 314.102 mo
87.5089 314.102 li
1 /0 /CSD get_res sepcs
.172549 sep
@
grestore
gsave
63.2 347.366 mo
509.6 347.366 li
509.6 42.446 li
63.2 42.446 li
cp
clp
1.75 lw
0 lc
[5.6 2.4 ] 0 dsh
87.5089 396.238 mo
87.5089 314.102 li
1 /0 /CSD get_res sepcs
.172549 sep
@
grestore
1.25 lw
2 lc
0 lj
63.2 347.366 mo
63.2 42.446 li
1 /0 /CSD get_res sepcs
.85 sep
@
509.6 347.366 mo
509.6 42.446 li
@
63.2 347.366 mo
509.6 347.366 li
@
63.2 42.446 mo
509.6 42.446 li
@
210.39 20.8719 mo
210.39 19.9359 li
212.064 19.9359 li
212.064 8.68589 li
210.39 8.68589 li
210.39 7.74989 li
220.956 7.74989 li
220.956 10.6659 li
219.876 10.6659 li
219.876 8.82989 li
213.846 8.82989 li
213.846 13.2219 li
218.148 13.2219 li
218.148 11.5839 li
219.228 11.5839 li
219.228 15.9399 li
218.148 15.9399 li
218.148 14.3019 li
213.846 14.3019 li
213.846 19.7919 li
220.02 19.7919 li
220.02 17.9559 li
221.1 17.9559 li
221.1 20.8719 li
210.39 20.8719 li
f
223.548 20.3499 mo
223.548 18.1719 li
224.484 18.1719 li
224.502 18.8739 224.718 19.3959 225.132 19.7379 cv
225.546 20.0979 226.158 20.2599 226.968 20.2599 cv
227.688 20.2599 228.246 20.1339 228.624 19.8459 cv
229.002 19.5759 229.2 19.1799 229.2 18.6579 cv
229.2 18.2619 229.056 17.9199 228.786 17.6679 cv
228.498 17.4159 227.922 17.1459 227.022 16.8579 cv
225.852 16.4619 li
225.042 16.2099 224.466 15.8859 224.106 15.4899 cv
223.746 15.1119 223.566 14.6259 223.566 14.0139 cv
223.566 13.1679 223.872 12.5019 224.502 12.0159 cv
225.132 11.5299 225.996 11.2779 227.112 11.2779 cv
227.598 11.2779 228.12 11.3499 228.66 11.4759 cv
229.2 11.6019 229.776 11.7819 230.352 12.0339 cv
230.352 14.0679 li
229.416 14.0679 li
229.38 13.4739 229.182 13.0059 228.786 12.6639 cv
228.39 12.3219 227.85 12.1419 227.166 12.1419 cv
226.482 12.1419 225.96 12.2679 225.618 12.5019 cv
225.258 12.7539 225.096 13.1139 225.096 13.5819 cv
225.096 13.9779 225.222 14.3019 225.492 14.5359 cv
225.744 14.7699 226.284 15.0039 227.076 15.2559 cv
228.354 15.6519 li
229.236 15.9399 229.866 16.2819 230.262 16.6959 cv
230.658 17.1099 230.856 17.6319 230.856 18.2799 cv
230.856 19.1799 230.514 19.8639 229.83 20.3679 cv
229.146 20.8719 228.228 21.1059 227.04 21.1059 cv
226.428 21.1059 225.852 21.0339 225.276 20.9259 cv
224.7 20.8179 224.124 20.6199 223.548 20.3499 cv
f
233.721 12.4659 mo
232.299 12.4659 li
232.299 11.5299 li
233.721 11.5299 li
233.721 8.63189 li
235.341 8.63189 li
235.341 11.5299 li
238.383 11.5299 li
238.383 12.4659 li
235.341 12.4659 li
235.341 18.4059 li
235.341 19.1979 235.413 19.7199 235.575 19.9359 cv
235.719 20.1519 236.007 20.2599 236.421 20.2599 cv
236.835 20.2599 237.141 20.1339 237.339 19.8819 cv
237.519 19.6299 237.627 19.2339 237.645 18.6759 cv
238.869 18.6759 li
238.815 19.5399 238.581 20.1519 238.167 20.5299 cv
237.753 20.9079 237.123 21.1059 236.277 21.1059 cv
235.341 21.1059 234.675 20.8899 234.297 20.4939 cv
233.901 20.0979 233.721 19.3959 233.721 18.4059 cv
233.721 12.4659 li
f
240.756 8.63189 mo
240.756 8.36189 240.846 8.12789 241.044 7.92989 cv
241.242 7.73189 241.476 7.62389 241.764 7.62389 cv
242.016 7.62389 242.25 7.73189 242.448 7.92989 cv
242.646 8.12789 242.754 8.36189 242.754 8.63189 cv
242.754 8.91989 242.646 9.15389 242.466 9.33389 cv
242.268 9.53189 242.034 9.62189 241.764 9.62189 cv
241.476 9.62189 241.242 9.53189 241.044 9.33389 cv
240.846 9.15389 240.756 8.91989 240.756 8.63189 cv
242.826 19.9359 mo
244.356 19.9359 li
244.356 20.8719 li
239.658 20.8719 li
239.658 19.9359 li
241.206 19.9359 li
241.206 12.4659 li
239.658 12.4659 li
239.658 11.5299 li
242.826 11.5299 li
242.826 19.9359 li
f
254.091 13.3479 mo
254.397 12.6639 254.793 12.1599 255.279 11.7999 cv
255.765 11.4579 256.323 11.2779 256.971 11.2779 cv
257.943 11.2779 258.681 11.5839 259.167 12.1959 cv
259.635 12.8079 259.887 13.7079 259.887 14.9319 cv
259.887 19.9359 li
261.345 19.9359 li
261.345 20.8719 li
256.863 20.8719 li
256.863 19.9359 li
258.267 19.9359 li
258.267 15.1119 li
258.267 14.1759 258.123 13.4919 257.835 13.0779 cv
257.547 12.6819 257.097 12.4659 256.449 12.4659 cv
255.729 12.4659 255.171 12.7539 254.793 13.2939 cv
254.415 13.8339 254.235 14.6259 254.235 15.6699 cv
254.235 19.9359 li
255.639 19.9359 li
255.639 20.8719 li
251.211 20.8719 li
251.211 19.9359 li
252.615 19.9359 li
252.615 15.0579 li
252.615 14.1219 252.471 13.4559 252.183 13.0599 cv
251.895 12.6639 251.445 12.4659 250.797 12.4659 cv
250.077 12.4659 249.519 12.7539 249.141 13.2939 cv
248.763 13.8339 248.583 14.6259 248.583 15.6699 cv
248.583 19.9359 li
249.987 19.9359 li
249.987 20.8719 li
245.505 20.8719 li
245.505 19.9359 li
246.963 19.9359 li
246.963 12.4479 li
245.415 12.4479 li
245.415 11.5299 li
248.583 11.5299 li
248.583 13.1859 li
248.871 12.5739 249.249 12.0879 249.717 11.7639 cv
250.185 11.4399 250.707 11.2779 251.301 11.2779 cv
252.021 11.2779 252.615 11.4579 253.101 11.8179 cv
253.587 12.1779 253.911 12.6999 254.091 13.3479 cv
f
269 17.9379 mo
269 15.9579 li
266.912 15.9579 li
266.102 15.9579 265.508 16.1379 265.112 16.4799 cv
264.716 16.8399 264.536 17.3619 264.536 18.0639 cv
264.536 18.7119 264.734 19.2339 265.13 19.6119 cv
265.526 20.0079 266.066 20.1879 266.75 20.1879 cv
267.416 20.1879 267.956 19.9899 268.37 19.5759 cv
268.784 19.1619 269 18.6219 269 17.9379 cv
270.62 15.0399 mo
270.62 19.9359 li
272.06 19.9359 li
272.06 20.8719 li
269 20.8719 li
269 19.8639 li
268.64 20.2959 268.226 20.6199 267.758 20.8179 cv
267.29 20.9979 266.732 21.1059 266.12 21.1059 cv
265.076 21.1059 264.248 20.8359 263.636 20.2959 cv
263.024 19.7559 262.736 18.9999 262.736 18.0639 cv
262.736 17.1099 263.078 16.3719 263.78 15.8319 cv
264.464 15.2919 265.454 15.0219 266.732 15.0219 cv
269 15.0219 li
269 14.3739 li
269 13.6719 268.784 13.1319 268.352 12.7359 cv
267.92 12.3399 267.308 12.1419 266.534 12.1419 cv
265.886 12.1419 265.382 12.3039 265.004 12.5919 cv
264.608 12.8799 264.374 13.3119 264.284 13.8879 cv
263.456 13.8879 li
263.456 11.9979 li
264.014 11.7639 264.554 11.5839 265.094 11.4579 cv
265.616 11.3499 266.138 11.2779 266.642 11.2779 cv
267.938 11.2779 268.91 11.6019 269.594 12.2499 cv
270.278 12.8979 270.62 13.8159 270.62 15.0399 cv
f
274.511 12.4659 mo
273.089 12.4659 li
273.089 11.5299 li
274.511 11.5299 li
274.511 8.63189 li
276.131 8.63189 li
276.131 11.5299 li
279.173 11.5299 li
279.173 12.4659 li
276.131 12.4659 li
276.131 18.4059 li
276.131 19.1979 276.203 19.7199 276.365 19.9359 cv
276.509 20.1519 276.797 20.2599 277.211 20.2599 cv
277.625 20.2599 277.931 20.1339 278.129 19.8819 cv
278.309 19.6299 278.417 19.2339 278.435 18.6759 cv
279.659 18.6759 li
279.605 19.5399 279.371 20.1519 278.957 20.5299 cv
278.543 20.9079 277.913 21.1059 277.067 21.1059 cv
276.131 21.1059 275.465 20.8899 275.087 20.4939 cv
274.691 20.0979 274.511 19.3959 274.511 18.4059 cv
274.511 12.4659 li
f
289.556 16.3719 mo
282.59 16.3719 li
282.59 16.4439 li
282.59 17.7039 282.824 18.6579 283.292 19.3059 cv
283.76 19.9539 284.462 20.2599 285.398 20.2599 cv
286.1 20.2599 286.676 20.0799 287.144 19.7019 cv
287.594 19.3419 287.918 18.7839 288.098 18.0459 cv
289.394 18.0459 li
289.142 19.0719 288.656 19.8459 287.972 20.3499 cv
287.27 20.8539 286.352 21.1059 285.236 21.1059 cv
283.868 21.1059 282.77 20.6739 281.942 19.7739 cv
281.114 18.8739 280.7 17.6859 280.7 16.1919 cv
280.7 14.7159 281.096 13.5279 281.924 12.6279 cv
282.734 11.7279 283.796 11.2779 285.128 11.2779 cv
286.532 11.2779 287.63 11.7279 288.386 12.5919 cv
289.142 13.4559 289.52 14.7159 289.556 16.3719 cv
287.648 15.4359 mo
287.612 14.3559 287.378 13.5279 286.946 12.9699 cv
286.514 12.4299 285.92 12.1419 285.128 12.1419 cv
284.372 12.1419 283.796 12.4299 283.364 12.9879 cv
282.932 13.5459 282.68 14.3559 282.59 15.4359 cv
287.648 15.4359 li
f
299.903 19.9359 mo
301.451 19.9359 li
301.451 20.8719 li
298.283 20.8719 li
298.283 19.4139 li
297.959 20.0079 297.563 20.4399 297.077 20.7099 cv
296.573 20.9619 295.979 21.1059 295.259 21.1059 cv
294.107 21.1059 293.153 20.6559 292.433 19.7559 cv
291.713 18.8559 291.353 17.6679 291.353 16.1919 cv
291.353 14.7339 291.713 13.5459 292.433 12.6459 cv
293.153 11.7459 294.107 11.2779 295.259 11.2779 cv
295.979 11.2779 296.573 11.4219 297.077 11.6919 cv
297.563 11.9799 297.959 12.4119 298.283 12.9879 cv
298.283 8.12789 li
296.753 8.12789 li
296.753 7.19189 li
299.903 7.19189 li
299.903 19.9359 li
298.283 16.6599 mo
298.283 15.7419 li
298.283 14.6259 298.067 13.7799 297.635 13.1859 cv
297.203 12.5919 296.573 12.2859 295.763 12.2859 cv
294.935 12.2859 294.305 12.6279 293.873 13.2759 cv
293.441 13.9239 293.243 14.8959 293.243 16.1919 cv
293.243 17.4879 293.441 18.4779 293.873 19.1259 cv
294.305 19.7919 294.935 20.1159 295.763 20.1159 cv
296.573 20.1159 297.203 19.8279 297.635 19.2339 cv
298.067 18.6579 298.283 17.7939 298.283 16.6599 cv
f
315.725 12.5199 mo
315.545 12.4479 315.365 12.3759 315.149 12.3219 cv
314.933 12.2859 314.717 12.2499 314.483 12.2499 cv
313.619 12.2499 312.863 12.5919 312.215 13.2399 cv
311.567 13.8879 311.153 14.7699 310.937 15.8499 cv
309.947 20.8719 li
308.327 20.8719 li
310.253 11.0259 li
311.873 11.0259 li
311.567 12.5559 li
311.981 11.9979 312.485 11.5659 313.097 11.2599 cv
313.691 10.9539 314.321 10.7919 315.005 10.7919 cv
315.167 10.7919 315.329 10.8099 315.509 10.8279 cv
315.689 10.8459 315.851 10.8819 316.031 10.9179 cv
315.725 12.5199 li
f
325.265 20.8719 mo
321.827 12.4659 li
320.783 12.4659 li
320.783 11.5299 li
325.067 11.5299 li
325.067 12.4659 li
323.573 12.4659 li
326.201 18.8919 li
328.829 12.4659 li
327.425 12.4659 li
327.425 11.5299 li
330.935 11.5299 li
330.935 12.4659 li
329.891 12.4659 li
326.453 20.8719 li
325.265 20.8719 li
f
331.996 20.3499 mo
331.996 18.1719 li
332.932 18.1719 li
332.95 18.8739 333.166 19.3959 333.58 19.7379 cv
333.994 20.0979 334.606 20.2599 335.416 20.2599 cv
336.136 20.2599 336.694 20.1339 337.072 19.8459 cv
337.45 19.5759 337.648 19.1799 337.648 18.6579 cv
337.648 18.2619 337.504 17.9199 337.234 17.6679 cv
336.946 17.4159 336.37 17.1459 335.47 16.8579 cv
334.3 16.4619 li
333.49 16.2099 332.914 15.8859 332.554 15.4899 cv
332.194 15.1119 332.014 14.6259 332.014 14.0139 cv
332.014 13.1679 332.32 12.5019 332.95 12.0159 cv
333.58 11.5299 334.444 11.2779 335.56 11.2779 cv
336.046 11.2779 336.568 11.3499 337.108 11.4759 cv
337.648 11.6019 338.224 11.7819 338.8 12.0339 cv
338.8 14.0679 li
337.864 14.0679 li
337.828 13.4739 337.63 13.0059 337.234 12.6639 cv
336.838 12.3219 336.298 12.1419 335.614 12.1419 cv
334.93 12.1419 334.408 12.2679 334.066 12.5019 cv
333.706 12.7539 333.544 13.1139 333.544 13.5819 cv
333.544 13.9779 333.67 14.3019 333.94 14.5359 cv
334.192 14.7699 334.732 15.0039 335.524 15.2559 cv
336.802 15.6519 li
337.684 15.9399 338.314 16.2819 338.71 16.6959 cv
339.106 17.1099 339.304 17.6319 339.304 18.2799 cv
339.304 19.1799 338.962 19.8639 338.278 20.3679 cv
337.594 20.8719 336.676 21.1059 335.488 21.1059 cv
334.876 21.1059 334.3 21.0339 333.724 20.9259 cv
333.148 20.8179 332.572 20.6199 331.996 20.3499 cv
f
341.917 19.9539 mo
341.917 19.6299 342.025 19.3599 342.241 19.1259 cv
342.457 18.9099 342.745 18.7839 343.087 18.7839 cv
343.411 18.7839 343.681 18.9099 343.915 19.1259 cv
344.131 19.3599 344.257 19.6299 344.257 19.9539 cv
344.257 20.2779 344.131 20.5659 343.915 20.7819 cv
343.681 20.9979 343.411 21.1059 343.087 21.1059 cv
342.745 21.1059 342.457 20.9979 342.241 20.7819 cv
342.025 20.5659 341.917 20.2959 341.917 19.9539 cv
f
360.597 14.8059 mo
360.597 13.9419 360.399 13.2939 360.039 12.8259 cv
359.661 12.3759 359.121 12.1419 358.419 12.1419 cv
357.933 12.1419 357.465 12.2679 357.033 12.5199 cv
356.601 12.7719 356.205 13.1139 355.881 13.5819 cv
355.539 14.0499 355.269 14.6259 355.071 15.2739 cv
354.873 15.9219 354.783 16.5699 354.783 17.2179 cv
354.783 18.0459 354.963 18.6759 355.341 19.1079 cv
355.701 19.5579 356.241 19.7739 356.943 19.7739 cv
357.447 19.7739 357.915 19.6659 358.347 19.4139 cv
358.779 19.1799 359.157 18.8379 359.481 18.3699 cv
359.805 17.9019 360.075 17.3259 360.291 16.6779 cv
360.489 16.0299 360.597 15.3999 360.597 14.8059 cv
355.593 12.5199 mo
356.025 11.9619 356.529 11.5299 357.123 11.2419 cv
357.699 10.9539 358.365 10.7919 359.085 10.7919 cv
360.093 10.7919 360.867 11.1339 361.425 11.7819 cv
361.983 12.4479 362.271 13.3659 362.271 14.5539 cv
362.271 15.5259 362.091 16.4619 361.749 17.3439 cv
361.389 18.2259 360.903 19.0179 360.255 19.7019 cv
359.823 20.1699 359.319 20.5299 358.779 20.7639 cv
358.239 20.9799 357.663 21.1059 357.069 21.1059 cv
356.367 21.1059 355.773 20.9619 355.305 20.6919 cv
354.837 20.4039 354.477 19.9719 354.243 19.3959 cv
353.235 24.5979 li
351.633 24.5979 li
354.261 11.0259 li
355.881 11.0259 li
355.593 12.5199 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
