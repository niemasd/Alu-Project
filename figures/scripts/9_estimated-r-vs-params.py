#! /usr/bin/env python3
'''
Niema Moshiri 2016

Generate plots of fraction of cherries vs. various parameters
'''
# imports
from matplotlib import rcParams
from matplotlib.collections import PolyCollection
from matplotlib.patches import Patch
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

# settings
sns.set_style("ticks")
rcParams['font.family'] = 'serif'
pal = {'theoretical':'#000000', 'fasttree_bl':'#E6C594', 'fasttree_bl_bootlier_log':'#CE8F30', 'fasttree_bl_bootlier_log_below_p25':'#00FF00', 'raxml_bl':'#62E1EA', 'raxml_bl_bootlier_log':'#37ACA4'}
handles = [Patch(color=pal['theoretical'],label='Theoretical'),Patch(color=pal['fasttree_bl'],label='FastTree'),Patch(color=pal['fasttree_bl_bootlier_log'],label='FastTree (Bootlier Log)'),Patch(color=pal['fasttree_bl_bootlier_log_below_p25'],label='FastTree (Bootlier Log, Filter Below 25-percentile)'),Patch(color=pal['raxml_bl'],label='RAxML'),Patch(color=pal['raxml_bl_bootlier_log'],label='RAxML (Bootlier Log)')]
axisY = np.asarray([-5,-4,-3,-2,-1,0,1])

# Expected Number of Cherries as a Function of r
def cherries_vs_r(r):
    return (r**0.5)/(1+r+r**0.5)

# Estimated r from number of cherries
def r_vs_cherries(c):
    if isinstance(c,np.ndarray):
        for i in range(len(c)):
            if c[i] > 1./3.:
                c[i] = 1./3.
    return ((1-c-((c+1)*(1-3*c))**0.5)/(2*c))**2

# set alpha transparency for axes
def setAlpha(ax,a):
    for art in ax.get_children():
        if isinstance(art, PolyCollection):
            art.set_alpha(a)

# DATASETS
# modifying r = lambdaA/lambdaB (with different lambda = lambdaA+lambdaB to keep expected branch length constant)
r_fasttree_bl = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00259112,0.00167373,0.00125273,0.00211274,0.00153397,0.00221708,0.00127848,0.00146812,0.00106884,0.00205367,0.0017137,0.00111848,0.00140597,0.00132294,0.00122357,0.00180502,0.00134897,0.00106581,0.00146013,0.00178702] +# r = 0.0001
                                                      [0.0027005,0.00231558,0.00149568,0.00260693,0.00202584,0.0026354,0.00325965,0.00188967,0.00264273,0.00240021,0.00222768,0.00235425,0.00171695,0.0020636,0.00298759,0.00235696,0.00307641,0.00197012,0.00197477,0.00250449] + # r = 0.001
                                                      [0.0122579,0.0140104,0.0147327,0.0129625,0.0127697,0.0166014,0.00966062,0.0170136,0.0205515,0.0116561,0.0104276,0.0129337,0.0144581,0.00953683,0.0153007,0.01193,0.0111577,0.0136173,0.0151836,0.0130099] + # r = 0.01
                                                      [0.151919,0.175476,0.148687,0.146993,0.129048,0.108831,0.105748,0.125227,0.133087,0.145826,0.129651,0.143007,0.107577,0.142741,0.121937,0.119136,0.0934888,0.12372,0.129202,0.201572] + # r = 0.1
                                                      [1,0.667569,1,0.700721,1,1,0.702307,1,1,1,1,0.630382,1,0.468371,1,1,0.511356,1,0.704684,0.817548] + # r = 1
                                                      []
                                                      ))}
r_raxml_bl = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.000870785,0.000721476,0.000543969,0.000812787,0.000767027,0.00115985,0.000708702,0.000788084,0.000663358,0.0008593,0.000763153,0.000542042,0.000716182,0.000671087,0.00062377,0.000828667,0.000577192,0.000572545,0.000705479,0.000833441] +# r = 0.0001
                                                      [0.00218258,0.00190193,0.00115899,0.00174507,0.00140276,0.00219349,0.00252501,0.00123777,0.0019915,0.00182022,0.00169188,0.00182905,0.00125066,0.00152518,0.00239899,0.00187002,0.00240785,0.00116542,0.00154912,0.00196829] + # r = 0.001
                                                      [0.0116796,0.0128327,0.0145352,0.0123368,0.0118993,0.0158731,0.00913205,0.0160686,0.0194957,0.0110458,0.00967891,0.0120827,0.0132024,0.00912984,0.0146636,0.0115625,0.0107406,0.0133031,0.014599,0.0121914] + # r = 0.01
                                                      [0.152309,0.17417,0.14719,0.146065,0.128731,0.10839,0.106013,0.124227,0.130832,0.144351,0.129936,0.141635,0.106686,0.142508,0.12038,0.118949,0.093411,0.123444,0.128082,0.198322] + # r = 0.1
                                                      [1,0.666462,1,0.703312,1,1,0.694874,1,1,1,1,0.627475,1,0.466592,1,0.931215,0.500904,1,0.689571,0.8059] + # r = 1
                                                      []
                                                      ))}
r_fasttree_bl_bootlier_log = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.000579443,0.000468135,0.000524007,0.000778373,0.00086377,0.000924685,0.000577939,0.000470969,0.000595789,0.000634817,0.000499853,0.000721455,0.000556947,0.000527034,0.000467004,0.00063195,0.000491676,0.00048544,0.000531504,0.000567296] +# r = 0.0001
                                                      [0.00117553,0.0013109,0.0010006,0.000986167,0.000972245,0.0013659,0.00150924,0.000815785,0.00135059,0.00139687,0.000902207,0.00107433,0.000835443,0.000908148,0.0014028,0.0011544,0.00143852,0.000689055,0.000992403,0.00156526] + # r = 0.001
                                                      [0.00886929,0.00960094,0.00993662,0.00944752,0.0102536,0.0118833,0.00595553,0.0120525,0.0147908,0.00832097,0.0073311,0.00849477,0.00918819,0.00560626,0.00915525,0.0082181,0.00766799,0.010339,0.0103675,0.00921321] + # r = 0.01
                                                      [0.120093,0.144806,0.116162,0.120649,0.102868,0.0922744,0.0875431,0.103696,0.117972,0.12424,0.112772,0.113383,0.0836447,0.125204,0.0963314,0.100426,0.0749968,0.107154,0.108284,0.151401] + # r = 0.1
                                                      [1,0.487299,1,0.488308,1,1,0.479504,1,1,0.62621,1,0.540101,1,0.37807,0.627363,0.593535,0.382606,0.618475,0.4782,0.56948] + # r = 1
                                                      []
                                                      ))}
r_fasttree_bl_bootlier_log_above_med = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00054359,0.00728791,0.00131477,0.000881997,0.000804192,0.0111455,0.0370095,0.000177967,0.00225957,0.000728167,0.000580477,0.00985082,1.34255e-05,0.00134911,0.000401274,0.00468694,0.0270239,0.00443257,4.0904e-05,0.00202933] +# r = 0.0001
                                                      [0.0027005,3.14329e-05,0.0170317,0.00125293,0.00530665,0.00145728,0.00494287,0.00285252,0.0469772,0.00208415,0.00667487,0.00109617,0.0583285,0.00030095,0.00607617,0.000841931,0.0187162,0.00117906,0.000109847,0.0249964] + # r = 0.001
                                                      [0.00221646,0.00108963,0.0304448,0.0237199,0.00662563,0.0374557,0.00466325,0.0225628,0.0191758,0.0197739,0.000846576,0.0728263,0.00196749,0.0199767,0.000248585,1.66196e-05,0.0714402,0.00559847,0.00672054,0.000159838] + # r = 0.01
                                                      [0.499354,1,0.027356,0.0300348,0.112755,0.107971,0.0611069,0.107761,0.0615517,0.0728532,0.054853,0.276432,1,0.0533931,0.00241161,0.0788938,0.393453,0.0260197,0.112077,0.480826] + # r = 0.1
                                                      [0.155712,0.283833,1,0.335785,0.384054,1,0.0807279,1,1,1,0.331337,0.705821,0.524519,1,0.0785637,0.283698,0.121338,1,0.152476,1] + # r = 1
                                                      []
                                                      ))}
r_fasttree_bl_bootlier_log_above_p75 = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00154645,0.00222748,0.00300374,0.00101142,0.00194562,0.00103481,0.00303065,0.00235914,0.00259863,0.000958655,0.00188881,0.00323515,0.00240615,0.00281859,0.00249309,0.00211943,0.00282098,0.00263728,0.00278518,0.00228168] +# r = 0.0001
                                                      [0.00129744,0.000990421,0.00179855,0.000858597,0.00185377,0.0013366,0.000508826,0.00130778,0.00135963,0.000912643,0.0012171,0.00193104,0.00157241,0.00132132,0.00105935,0.000899697,0.000682645,0.00171382,0.00185016,0.000965845] + # r = 0.001
                                                      [0.00108852,0.00193108,0.00179308,0.00193242,0.00174558,0.00274745,0.000664356,0.00326797,0.00511815,0.00194418,0.000831647,0.00166191,0.00224527,0.000646923,0.00300314,0.00129947,0.000880309,0.00286701,0.00217712,0.0017459] + # r = 0.01
                                                      [0.120264,0.140289,0.116106,0.116483,0.100309,0.0849343,0.0807343,0.0974029,0.105341,0.107853,0.104321,0.115329,0.0800632,0.111227,0.0919728,0.088825,0.0705547,0.0990305,0.103271,0.151011] + # r = 0.1
                                                      [1,0.573482,1,0.576832,1,1,0.575916,1,1,0.836066,1,0.536931,1,0.39427,0.748775,0.666972,0.453116,0.782364,0.55623,0.66282] + # r = 1
                                                      []
                                                      ))}
r_fasttree_bl_bootlier_log_below_med = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.016653,0.00224285,0.00112956,0.00105981,0.000101003,0.035561,0.00036731,0.00149072,0.00930741,8.56051e-05,0.00239564,0.00119286,0.017306,9.4949e-05,0.00373382,0.0124987,2.041e-05,0.00314001,0.000746644,0.00901401] +# r = 0.0001
                                                      [0.00579312,0.00377757,0.054263,0.0134036,0.060544,0.0129223,0.0201391,0.00281793,3.51035e-05,0.0192927,0.00705888,0.0141089,0.00567271,0.0104429,0.0329306,0.00999295,0.0005211,0.000947168,0.00229216,0.00065341] + # r = 0.001
                                                      [0.019581,0.0200394,0.00120906,0.00126504,0.0069211,0.00502504,0.130303,0.00816477,0.0132894,0.000963423,0.039146,0.000976556,0.0212891,0.000701164,0.0634205,0.027525,0.00157279,0.0243419,0.0153482,0.0321537] + # r = 0.01
                                                      [0.0710578,0.0530513,0.262119,0.564522,0.103775,0.105959,0.275274,0.136788,0.232463,0.297446,0.241661,0.0629555,0.0132369,0.104526,0.809365,0.322036,0.00779655,0.48331,0.166388,0.169318] + # r = 0.1
                                                      [1,0.559342,0.570672,1,0.846403,1,1,0.673948,0.201411,0.291198,0.703113,0.474958,1,0.0922812,1,0.739941,1,0.330395,1,0.135451] + # r = 1
                                                      []
                                                      ))}
r_fasttree_bl_bootlier_log_below_p25 = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00317067,0.00298222,0.00161205,0.00271379,0.00237895,0.00208508,0.00173844,0.0030617,0.00172946,0.00176937,0.00276396,0.00143032,0.00210257,0.00212118,0.00165446,0.00271575,0.00159555,0.00131829,0.00162041,0.00290564] +# r = 0.0001
                                                      [0.00231825,0.00243461,0.0019289,0.00215841,0.00193691,0.00252028,0.00281463,0.00164634,0.00246886,0.00242439,0.00180035,0.00222401,0.00166827,0.00186278,0.00270356,0.00218566,0.00270768,0.00156173,0.00199706,0.0025916] + # r = 0.001
                                                      [0.0109411,0.0122211,0.0127495,0.0118127,0.0120983,0.014863,0.0080618,0.0150463,0.0184559,0.0101157,0.00927429,0.0108969,0.0119005,0.00772811,0.0121802,0.0104285,0.00992154,0.0123706,0.0132202,0.0114998] + # r = 0.01
                                                      [0.133388,0.158108,0.130419,0.132193,0.113923,0.0994494,0.0958059,0.113184,0.124497,0.135393,0.122811,0.126219,0.0939449,0.133825,0.10794,0.109288,0.0835101,0.114754,0.117615,0.172736] + # r = 0.1
                                                      [1,0.546031,1,0.553244,1,1,0.551635,1,1,0.71479,1,0.588759,1,0.413171,0.706824,0.677717,0.425114,0.704945,0.555963,0.641405] + # r = 1
                                                      []
                                                      ))}
r_raxml_bl_bootlier_log = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.000886974,0.000736106,0.000556551,0.000828384,0.000782145,0.00117876,0.000723192,0.000803425,0.000677344,0.000875372,0.00077823,0.000554602,0.000730754,0.000685161,0.000637304,0.000844428,0.000590177,0.000585475,0.000719934,0.000849251] +# r = 0.0001
                                                      [0.00220944,0.0019268,0.0011779,0.00176877,0.00142376,0.00222043,0.00255419,0.00125737,0.00201702,0.00184448,0.00171518,0.00185338,0.00127037,0.00154717,0.00242733,0.00189465,0.00243625,0.00118439,0.0015713,0.00199364] + # r = 0.001
                                                      [0.0117528,0.0129104,0.0146195,0.0124127,0.0119733,0.0159625,0.00919471,0.0161587,0.0195983,0.0111165,0.00974389,0.0121575,0.0132816,0.00919249,0.0147484,0.0116352,0.01081,0.0133828,0.0146836,0.0122667] + # r = 0.01
                                                      [0.152831,0.174766,0.147696,0.146567,0.129177,0.108771,0.106387,0.124659,0.131284,0.144847,0.130386,0.142123,0.107062,0.142998,0.120799,0.119364,0.093746,0.123873,0.128525,0.199004] + # r = 0.1
                                                      [1,0.670879,1,0.708509,1,1,0.699875,1,1,1,1,0.631236,1,0.468649,1,0.970257,0.503235,1,0.694455,0.814888] + # r = 1
                                                      []
                                                      ))}
r_fastme_bl_tn93 = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00180452,0.00126664,0.00114829,0.00169555,0.00147816,0.00196421,0.00131551,0.00150143,0.00125927,0.00178808,0.00144811,0.00126982,0.00143543,0.00136424,0.00135568,0.00153377,0.00136515,0.00131083,0.00141419,0.00165802] +# r = 0.0001
                                                      [0.00318022,0.00301706,0.00198479,0.00275938,0.00236406,0.00341489,0.00374976,0.00228789,0.00319386,0.00307227,0.00295404,0.00275725,0.00224622,0.00249742,0.00361071,0.00309103,0.0036574,0.00227866,0.00269324,0.00338131] + # r = 0.001
                                                      [0.0143638,0.0164001,0.016971,0.0154096,0.0151034,0.0186759,0.0111293,0.0191315,0.022814,0.0135666,0.0122981,0.0654313,0.0163859,0.0113581,0.017656,0.0142689,0.0131063,0.016155,0.0169108,0.0154387] + # r = 0.01
                                                      [0.193658,0.0958686,0.156507,0.367241,0.139577,0.442358,0.110436,0.131244,0.140074,0.150526,0.200979,0.148692,0.113755,0.149295,0.125423,0.180124,0.0961616,0.221107,0.135303,0.454085] + # r = 0.1
                                                      [1,0.743153,1,0.757818,1,0.216597,0.770632,1,1,1,0.0336799,0.654081,1,0.495553,1,0.536533,0.341784,1,0.764188,0.798273] + # r = 1
                                                      []
                                                      ))}
r_fastme_bl_logdet = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([4.09659e-05,3.01291e-05,3.73239e-05,4.6618e-05,3.76059e-05,3.44804e-05,4.0336e-05,2.67565e-05,3.77414e-05,4.03759e-05,3.0266e-05,3.89235e-05,3.54513e-05,3.07533e-05,3.72499e-05,3.34717e-05,4.7932e-05,5.17314e-05,3.86357e-05,3.50739e-05] +# r = 0.0001
                                                      [7.45548e-05,8.62683e-05,5.44039e-05,7.13742e-05,8.36713e-05,7.63988e-05,8.73426e-05,7.69009e-05,7.21134e-05,7.96832e-05,8.53098e-05,6.96529e-05,7.18208e-05,6.69067e-05,7.51708e-05,8.02335e-05,7.24599e-05,7.12974e-05,7.91217e-05,9.70835e-05] + # r = 0.001
                                                      [0.000325063,0.000301238,0.00031604,0.000285718,0.000300644,0.000329095,0.000257878,0.000288282,0.000359541,0.000301295,0.000269049,0.000396792,0.000309578,0.00028509,0.000322451,0.00029509,0.000256781,0.000278724,0.000323159,0.000367942] + # r = 0.01
                                                      [0.00141697,0.00146195,0.00144152,0.00144744,0.00126906,0.00126285,0.0011024,0.00134555,0.00146059,0.00122103,0.00137122,0.00117136,0.00113932,0.00132514,0.00106926,0.00140591,0.00106299,0.00136998,0.00110681,0.00146732] + # r = 0.1
                                                      [0.00271324,0.00238792,0.00227339,0.0026266,0.00253287,0.00247352,0.00210365,0.00245025,0.0030222,0.0026023,0.00269838,0.00234028,0.00259473,0.00230788,0.00257362,0.00234497,0.00231235,0.00242874,0.00235276,0.00265579] + # r = 1
                                                      []
                                                      ))}
r_fastme_bl_f84 = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00176336,0.00130801,0.00114909,0.00165697,0.00146736,0.00189045,0.00135469,0.00145599,0.00123009,0.00171045,0.00149481,0.00122633,0.00138381,0.00133076,0.00134997,0.00152458,0.00139104,0.00131971,0.00139736,0.00163275] +# r = 0.0001
                                                      [0.00316697,0.00296922,0.00196941,0.00277201,0.00236322,0.00338392,0.00374007,0.00231862,0.00319392,0.0029948,0.00292849,0.00274069,0.00220797,0.00248541,0.00354233,0.00313252,0.00364199,0.00231484,0.00265693,0.00333212] + # r = 0.001
                                                      [0.0143685,0.0162377,0.0167976,0.0151501,0.0148318,0.0186507,0.0110592,0.0189016,0.0224232,0.0133187,0.0123032,0.0142948,0.0161528,0.0113471,0.0174883,0.0139854,0.013216,0.0159902,0.0167991,0.0153694] + # r = 0.01
                                                      [0.15631,0.181892,0.156005,0.153107,0.138174,0.115476,0.108991,0.130123,0.138654,0.149428,0.135447,0.14644,0.112471,0.148543,0.124644,0.124308,0.0953245,0.1306,0.134138,0.209944] + # r = 0.1
                                                      [1,0.720903,1,0.74309,1,1,0.744509,1,1,1,1,0.636211,1,0.490339,1,0.877682,0.519642,1,0.747269,0.777687] + # r = 1
                                                      []
                                                      ))}
r_fastme_bl_f84_bootlier_log = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.000175124,0.00022195,0.000427811,0.000358969,0.000538527,0.000590213,0.000387128,0.000395062,0.000594001,0.000286554,0.000370382,0.000537169,0.000366076,0.000422693,0.000613077,0.000402374,0.000454692,0.000490448,0.000412475,0.000479643] +# r = 0.0001
                                                      [0.00112562,0.00142163,0.000842165,0.000869593,0.00103323,0.00136744,0.00150058,0.000905783,0.00116912,0.00135351,0.00101671,0.00112587,0.000915931,0.000913244,0.00143722,0.00118933,0.00137663,0.000624201,0.00124547,0.00179289] + # r = 0.001
                                                      [0.00866107,0.00942393,0.00966997,0.00964417,0.00914312,0.011375,0.00553541,0.011636,0.0138578,0.00757752,0.00675555,0.00742165,0.00828122,0.00531442,0.00896275,0.00737442,0.00694002,0.00911732,0.00981926,0.0088206] + # r = 0.01
                                                      [0.106967,0.125302,0.10765,0.108237,0.0953172,0.0829035,0.0809657,0.108095,0.107883,0.112467,0.103429,0.104097,0.0738745,0.108896,0.0867237,0.0946548,0.0685849,0.0976038,0.0955602,0.137185] + # r = 0.1
                                                      [1,0.421657,0.708828,0.431823,0.728407,0.718653,0.436347,0.767643,1,0.483681,0.71975,0.456372,1,0.345436,0.548349,0.479549,0.327371,0.494132,0.443733,0.454904] + # r = 1
                                                      []
                                                      ))}

# modifying r = lambdaA/lambdaB (with constant lambda = lambdaA + lambdaB)
r2_fasttree_bl = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00243969,0.00220311,0.00309257,0.00217179,0.00300056,0.00326384,0.00214554,0.00211122,0.00284401,0.00397541,0.00280597,0.00238146,0.00190641,0.00162167,0.00293471,0.005795,0.00229674,0.00189202,0.00181873,0.00193158] +# r = 0.0001
                                                      [0.002481,0.00286043,0.00197105,0.00219666,0.00194924,0.00157953,0.00288942,0.00260789,0.00211669,0.00185037,0.00195815,0.00214998,0.0027016,0.00308162,0.00242884,0.00194003,0.00299548,0.00231593,0.00245448,0.00280262] + # r = 0.001
                                                      [0.0122579,0.0140104,0.0147327,0.0129625,0.0127697,0.0166014,0.00966062,0.0170136,0.0205515,0.0116561,0.0104276,0.0129337,0.0144581,0.00953683,0.0153007,0.01193,0.0111577,0.0136173,0.0151836,0.0130099] + # r = 0.01
                                                      [0.1119,0.154428,0.145553,0.155258,0.131635,0.151121,0.149798,0.125633,0.170716,0.188352,0.125712,0.180573,0.199526,0.159263,0.116347,0.158983,0.162494,0.162863,0.135715,0.131589] + # r = 0.1
                                                      [1,1,1,1,0.860621,1,0.845822,1,1,1,0.633468,1,1,0.73893,1,1,1,1,1,1] + # r = 1
                                                      []
                                                      ))}
r2_raxml_bl = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00185575,0.00132657,0.00293458,0.00160861,0.00203998,0.00204604,0.00139835,0.00127956,0.00175538,0.00269108,0.00204559,0.00150601,0.00139718,0.00107835,0.00201859,0.0042152,0.00151108,0.00131407,0.000968635,0.00113553] +# r = 0.0001
                                                      [0.00221302,0.00227727,0.00172784,0.00179337,0.00150544,0.0013075,0.0024372,0.00210367,0.00166852,0.00149409,0.0015295,0.00188723,0.00234201,0.00259157,0.00214788,0.00150588,0.00224847,0.00167816,0.00192867,0.00208798] + # r = 0.001
                                                      [0.0116796,0.0128327,0.0145352,0.0123368,0.0118993,0.0158731,0.00913205,0.0160686,0.0194957,0.0110458,0.00967891,0.0120827,0.0132024,0.00912984,0.0146636,0.0115625,0.0107406,0.0133031,0.014599,0.0121914] + # r = 0.01
                                                      [0.107718,0.146927,0.142885,0.149697,0.123453,0.146388,0.138057,0.120092,0.163352,0.181324,0.117281,0.168861,0.188292,0.152836,0.111786,0.149683,0.154575,0.155888,0.133798,0.122451] + # r = 0.1
                                                      [1,1,1,1,0.668276,0.740817,0.68201,1,0.765413,1,0.53226,1,1,0.626744,0.778987,1,0.860018,0.835358,1,0.837288] + # r = 1
                                                      []
                                                      ))}
r2_fasttree_bl_bootlier_log = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00218993,0.00199291,0.00259181,0.00198901,0.00278022,0.00284022,0.00196378,0.00188099,0.0025123,0.00357082,0.00265382,0.00224287,0.00178459,0.00155445,0.00268677,0.00546889,0.00210785,0.00151608,0.00169991,0.00157494] +# r = 0.0001
                                                      [0.00188476,0.00223929,0.00154051,0.00183555,0.00163575,0.00136377,0.00232114,0.00189103,0.00181205,0.00126708,0.00144088,0.00167328,0.00235031,0.00249102,0.0018656,0.00158198,0.00250312,0.00179384,0.00223638,0.00210791] + # r = 0.001
                                                      [0.00886929,0.00960094,0.00993662,0.00944752,0.0102536,0.0118833,0.00595553,0.0120525,0.0147908,0.00832097,0.0073311,0.00849477,0.00918819,0.00560626,0.00915525,0.0082181,0.00766799,0.010339,0.0103675,0.00921321] + # r = 0.01
                                                      [0.056755,0.0853771,0.0833796,0.0838775,0.0720461,0.0849831,0.0701686,0.0743912,0.0836643,0.106955,0.0682313,0.104955,0.104282,0.0926168,0.0710098,0.0861773,0.0849176,0.0915734,0.0817226,0.0691067] + # r = 0.1
                                                      [0.23973,0.288814,0.293236,0.259888,0.236479,0.251767,0.194906,0.230534,0.230054,0.322802,0.175364,0.286477,0.232572,0.192447,0.245868,0.264666,0.22667,0.26044,0.265142,0.250246] + # r = 1
                                                      []
                                                      ))}
r2_fasttree_bl_bootlier_log_above_med = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00968235,0.0010564,0.00476948,0.000301658,0.000697495,0.00778454,0.0031452,0.0014292,0.00578114,0.000890573,0.00373174,0.00798748,0.00501914,0.00509023,1.10775e-05,0.000394317,0.000252549,0.0115729,0.000825063,0.0179784] +# r = 0.0001
                                                      [0.00232685,0.00198,0.00217273,0.0121739,8.55456e-05,0.00187579,0.0132432,0.00795759,0.0108831,0.013261,0.00240804,0.00200043,0.00032403,4.00588e-11,0.00499283,0.0232336,0.027485,0.0176717,0.00370013,0.00721087] + # r = 0.001
                                                      [0.00221646,0.00108963,0.0304448,0.0237199,0.00662563,0.0374557,0.00466325,0.0225628,0.0191758,0.0197739,0.000846576,0.0728263,0.00196749,0.0199767,0.000248585,1.66196e-05,0.0714402,0.00559847,0.00672054,0.000159838] + # r = 0.01
                                                      [0.000538729,0.000506418,0.278314,0.280288,0.0841187,0.127382,0.0150152,0.0296495,0.881324,0.0897018,0.0274608,0.192508,0.0959087,0.0846248,0.0648098,0.169823,0.175624,0.145455,0.114183,0.461535] + # r = 0.1
                                                      [1,0.56769,0.450477,0.0196193,0.600181,0.0119982,0.316713,0.498236,1,1,0.0648085,0.0292303,1,0.375995,1,0.0121226,0.00813946,0.191666,0.516117,0.216278] + # r = 1
                                                      []
                                                      ))}
r2_fasttree_bl_bootlier_log_above_p75 = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.000904882,0.00139893,0.000499806,0.00127961,0.00077352,0.000709185,0.00116375,0.00121322,0.000715714,0.00013569,0.000553972,0.00121654,0.00137662,0.00188476,0.000523186,2.42078e-08,0.00104531,0.00166441,0.00141676,0.00149534] +# r = 0.0001
                                                      [0.000936598,0.000557824,0.00100564,0.000948651,0.00104239,0.00190201,0.000493673,0.000658128,0.00124325,0.00214035,0.00154488,0.00147898,0.000622665,0.000436947,0.000896357,0.00127446,0.000358578,0.00150413,0.000911455,0.000549703] + # r = 0.001
                                                      [0.00108852,0.00193108,0.00179308,0.00193242,0.00174558,0.00274745,0.000664356,0.00326797,0.00511815,0.00194418,0.000831647,0.00166191,0.00224527,0.000646923,0.00300314,0.00129947,0.000880309,0.00286701,0.00217712,0.0017459] + # r = 0.01
                                                      [0.0710632,0.0965158,0.0939224,0.0974463,0.0861321,0.0945939,0.0900385,0.0817667,0.106058,0.132986,0.0821743,0.113607,0.118208,0.101459,0.0740636,0.0972138,0.0967446,0.100315,0.0868813,0.085361] + # r = 0.1
                                                      [0.505059,0.587542,0.438148,0.467403,0.368764,0.39759,0.363091,0.499402,0.407668,0.595529,0.309902,0.580176,0.47366,0.33584,0.425476,0.489668,0.39653,0.439051,0.455257,0.457958] + # r = 1
                                                      []
                                                      ))}
r2_fasttree_bl_bootlier_log_below_med = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.000724735,0.0180417,0.00101163,0.000907304,0.00471479,0.00121719,0.000929184,0.00261955,0.0398601,0.0418999,0.0742905,0.0580182,0.000643784,0.0229962,0.0198618,0.019979,0.00242236,0.000186613,0.00894684,5.92112e-07] +# r = 0.0001
                                                      [0.0195625,0.0190946,0.0283178,0.000314717,0.000562257,0.0178718,0.0994318,0.0179761,0.0865661,0.000404809,0.0107761,0.000147686,0.0131726,0.00895128,0.0203068,1.10089e-05,0.000336385,0.000475452,0.0068209,0.000391949] + # r = 0.001
                                                      [0.019581,0.0200394,0.00120906,0.00126504,0.0069211,0.00502504,0.130303,0.00816477,0.0132894,0.000963423,0.039146,0.000976556,0.0212891,0.000701164,0.0634205,0.027525,0.00157279,0.0243419,0.0153482,0.0321537] + # r = 0.01
                                                      [0.447222,0.661095,0.0980487,0.089557,0.109271,0.0777838,0.257953,0.185213,0.0518559,0.227172,0.106265,0.080388,0.094806,0.0589649,0.100442,0.104697,0.142765,0.0704041,0.104759,0.0437755] + # r = 0.1
                                                      [0.274136,0.366209,0.337179,1,1,1,0.245484,0.297609,0.115197,0.0661104,0.385275,1,0.220941,0.221705,0.145929,1,1,0.23184,0.262149,0.328485] + # r = 1
                                                      []
                                                      ))}
r2_fasttree_bl_bootlier_log_below_p25 = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00323793,0.00334205,0.00394808,0.00312444,0.00410033,0.00406231,0.00316072,0.00307118,0.00409376,0.00490798,0.00413172,0.00325693,0.0027663,0.00256377,0.00382652,0.00706417,0.00373888,0.00253525,0.00287577,0.00292876] +# r = 0.0001
                                                      [0.0026772,0.00300727,0.00224649,0.00279803,0.0023803,0.00223514,0.00319717,0.00284764,0.00255122,0.00199342,0.00233491,0.00242886,0.00324013,0.00335202,0.00288263,0.00258956,0.00339581,0.00266776,0.00271421,0.00307311] + # r = 0.001
                                                      [0.0109411,0.0122211,0.0127495,0.0118127,0.0120983,0.014863,0.0080618,0.0150463,0.0184559,0.0101157,0.00927429,0.0108969,0.0119005,0.00772811,0.0121802,0.0104285,0.00992154,0.0123706,0.0132202,0.0114998] + # r = 0.01
                                                      [0.0814139,0.123246,0.114626,0.126522,0.105787,0.125271,0.103948,0.101513,0.110756,0.149439,0.0964979,0.138334,0.16243,0.1259,0.0983166,0.131523,0.127773,0.138659,0.107349,0.100968] + # r = 0.1
                                                      [0.54801,0.768948,0.380106,0.807979,0.298125,0.341428,0.411295,0.556609,0.500786,1,0.467754,0.80059,0.569271,0.41403,0.303334,0.70922,0.522033,0.325776,0.328553,0.29901] + # r = 1
                                                      []
                                                      ))}
r2_raxml_bl_bootlier_log = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00183144,0.00134693,0.00296638,0.00180268,0.00206584,0.00207195,0.00141931,0.00129953,0.00177916,0.00272134,0.00186924,0.00152785,0.00129497,0.00120622,0.0020443,0.00425443,0.00153296,0.00133433,0.000985783,0.00115423] +# r = 0.0001
                                                      [0.0022401,0.00230479,0.00175141,0.00181743,0.00152727,0.0013277,0.0024658,0.00212998,0.00169164,0.00151583,0.00155153,0.00191199,0.00236997,0.00262119,0.0021745,0.00152771,0.00227579,0.00170135,0.00195373,0.00211419] + # r = 0.001
                                                      [0.0117528,0.0129104,0.0146195,0.0124127,0.0119733,0.0159625,0.00919471,0.0161587,0.0195983,0.0111165,0.00974389,0.0121575,0.0132816,0.00919249,0.0147484,0.0116352,0.01081,0.0133828,0.0146836,0.0122667] + # r = 0.01
                                                      [0.108098,0.147432,0.143376,0.150211,0.123882,0.146891,0.138532,0.12051,0.163911,0.181945,0.11769,0.16944,0.188938,0.153361,0.112178,0.150197,0.155105,0.156422,0.13426,0.122877] + # r = 0.1
                                                      [1,1,1,1,0.672728,0.747039,0.686734,1,0.772491,1,0.534875,1,1,0.630494,0.786623,1,0.873493,0.846379,1,0.848471] + # r = 1
                                                      []
                                                      ))}
r2_fastme_bl_f84 = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00729127,0.00633959,0.00958985,0.00685145,0.0100937,0.00949537,0.00618398,0.00694314,0.00843522,0.0113589,0.00912312,0.0082521,0.00592601,0.00510641,0.00940477,0.0150467,0.00785096,0.00569573,0.00543001,0.00551234] +# r = 0.0001
                                                      [0.00414049,0.00549782,0.00367447,0.00374079,0.00368921,0.00275989,0.00460099,0.00457298,0.00379241,0.00330511,0.0036757,0.0035661,0.00416402,0.00549493,0.00460131,0.00342814,0.00517983,0.00365318,0.00442238,0.00409397] + # r = 0.001
                                                      [0.0143685,0.0162377,0.0167976,0.0151501,0.0148318,0.0186507,0.0110592,0.0189016,0.0224232,0.0133187,0.0123032,0.0142948,0.0161528,0.0113471,0.0174883,0.0139854,0.013216,0.0159902,0.0167991,0.0153694] + # r = 0.01
                                                      [0.113398,0.15839,0.150352,0.159045,0.130519,0.155237,0.144089,0.130906,0.175753,0.190471,0.126089,0.17937,0.198507,0.15985,0.116878,0.157751,0.158087,0.167506,0.142514,0.135167] + # r = 0.1
                                                      [1,1,1,1,0.748689,1,0.744035,1,0.928524,1,0.559093,1,1,0.656977,0.81904,1,1,1,1,0.838884] + # r = 1
                                                      []
                                                      ))}
r2_fastme_bl_f84_bootlier_log = {'r':np.array([-4]*20+[-3]*20+[-2]*20+[-1]*20+[0]*20), # values of r (log-scaled)
                         'cherries':np.log10(np.array([0.00691525,0.00561171,0.00864616,0.00659219,0.0092445,0.00880222,0.005701,0.00586056,0.00796375,0.0107902,0.00887345,0.00744685,0.00578245,0.00471887,0.0090252,0.0147042,0.00751306,0.00470685,0.00520499,0.00515006] +# r = 0.0001
                                                      [0.00294927,0.00407442,0.00278813,0.00268987,0.00299623,0.00204302,0.00347012,0.0033765,0.0029568,0.00221021,0.00279046,0.00269547,0.00321011,0.00423477,0.0035454,0.00286047,0.0041235,0.00270709,0.00335775,0.00297398] + # r = 0.001
                                                      [0.00866107,0.00942393,0.00966997,0.00964417,0.00914312,0.011375,0.00553541,0.011636,0.0138578,0.00757752,0.00675555,0.00742165,0.00828122,0.00531442,0.00896275,0.00737442,0.00694002,0.00911732,0.00981926,0.0088206] + # r = 0.01
                                                      [0.0449959,0.0582831,0.061121,0.060791,0.0532198,0.0600076,0.0503334,0.0510589,0.0631538,0.0727428,0.0451591,0.0800616,0.077763,0.066529,0.0440703,0.0618962,0.0606228,0.0639406,0.0549789,0.0492957] + # r = 0.1
                                                      [0.114113,0.149977,0.178173,0.125166,0.137096,0.145524,0.114954,0.129654,0.126664,0.184274,0.102985,0.153504,0.121014,0.112237,0.130725,0.139656,0.135757,0.145196,0.140662,0.127946] + # r = 1
                                                      []
                                                      ))}

# modifying lambda = lambdaA + lambdaB
l_fasttree_bl = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0120516,0.0158,0.0147479,0.0173901,0.0150184,0.0157791,0.0171816,0.0180579,0.0143785,0.0110717,0.0187192,0.013164,0.0145259,0.0152681,0.012073,0.0161176,0.0123912,0.0163398,0.0176516,0.0152609] +   # lambda = 33.86550309051126
                                     [0.0121021,0.00946928,0.0113081,0.0132259,0.0119619,0.0152158,0.0134191,0.0148024,0.0111964,0.0139221,0.00860438,0.0145687,0.0145632,0.0161802,0.0181722,0.0122117,0.0111503,0.0113378,0.011169,0.0150552] +  # lambda = 84.66375772627816
                                     [0.0122579,0.0140104,0.0147327,0.0129625,0.0127697,0.0166014,0.00966062,0.0170136,0.0205515,0.0116561,0.0104276,0.0129337,0.0144581,0.00953683,0.0153007,0.01193,0.0111577,0.0136173,0.0151836,0.0130099] +    # lambda = 169.32751545255631
                                     [0.0121162,0.0110273,0.0140669,0.0106744,0.0136182,0.0106018,0.0169918,0.0126882,0.0163903,0.0148205,0.0191373,0.0112142,0.0179406,0.0131293,0.0180688,0.0154466,0.0164913,0.0163135,0.0113111,0.0203699] +      # lambda = 338.65503090511262
                                     [0.020285,0.0175386,0.0282338,0.016918,0.0199041,0.0219235,0.0209558,0.0141997,0.0186491,0.0214897,0.0207528,0.0159977,0.0178944,0.0207508,0.0226515,0.0195752,0.0182026,0.0227461,0.024289,0.0194464]      # lambda = 846.63757726278155
                ).astype(float))}
l_raxml_bl = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0113864,0.0145343,0.0137272,0.0170479,0.0141306,0.0141814,0.0154513,0.0169736,0.0137584,0.0109028,0.019331,0.0128141,0.0127819,0.0140409,0.0114314,0.0155412,0.011516,0.0155445,0.0165628,0.0145607] +   # lambda = 33.86550309051126
                                     [0.0113919,0.00913125,0.0107799,0.0127229,0.0115249,0.014769,0.0133383,0.0144146,0.0109348,0.0131476,0.00821475,0.0139934,0.0139321,0.0157925,0.0175885,0.0115945,0.0109861,0.010966,0.0108227,0.0148753] +  # lambda = 84.66375772627816
                                     [0.0116796,0.0128327,0.0145352,0.0123368,0.0118993,0.0158731,0.00913205,0.0160686,0.0194957,0.0110458,0.00967891,0.0120827,0.0132024,0.00912984,0.0146636,0.0115625,0.0107406,0.0133031,0.014599,0.0121914] +    # lambda = 169.32751545255631
                                     [0.0107344,0.00954578,0.0125439,0.00921421,0.0115096,0.00933032,0.0148642,0.0111706,0.0153214,0.0138004,0.0165201,0.0101954,0.0163487,0.0111589,0.0167907,0.0141905,0.0149074,0.0134243,0.0102134,0.0186013] +      # lambda = 338.65503090511262
                                     [0.0136574,0.0119322,0.0173741,0.0107716,0.0112042,0.0141499,0.0112881,0.00947459,0.0135185,0.0125378,0.0143822,0.00997774,0.0130447,0.015203,0.0137375,0.0134534,0.0115266,0.0149826,0.0146441,0.0117188]      # lambda = 846.63757726278155
                ).astype(float))}
l_fasttree_bl_bootlier_log = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0113892,0.0171703,0.0139095,0.0165465,0.0139184,0.0161524,0.0157961,0.0163451,0.0128275,0.0101705,0.017638,0.0120052,0.0141082,0.0138204,0.0111206,0.0154926,0.0115695,0.0151763,0.016056,0.0138992] +   # lambda = 33.86550309051126
                                     [0.00967639,0.00810767,0.00931306,0.0106503,0.0100315,0.0128713,0.0114101,0.0121049,0.00901939,0.0108886,0.00760783,0.0130042,0.0123663,0.0134802,0.0148883,0.00990662,0.00924002,0.00967347,0.00945364,0.0128862] +  # lambda = 84.66375772627816
                                     [0.00886929,0.00960094,0.00993662,0.00944752,0.0102536,0.0118833,0.00595553,0.0120525,0.0147908,0.00832097,0.0073311,0.00849477,0.00918819,0.00560626,0.00915525,0.0082181,0.00766799,0.010339,0.0103675,0.00921321] +    # lambda = 169.32751545255631
                                     [0.00622091,0.00396423,0.00753202,0.00444371,0.00571078,0.00440126,0.00798684,0.00532396,0.00851725,0.00776227,0.00867113,0.006334,0.00832874,0.00475451,0.00993497,0.00810237,0.00798916,0.00656629,0.00606445,0.0107929] +      # lambda = 338.65503090511262
                                     [0.00334694,0.00258651,0.0028921,0.00231326,0.00129103,0.00337898,0.00224496,0.00176958,0.00370705,0.00222756,0.00480515,0.00198652,0.00241916,0.00430343,0.00340292,0.00224618,0.0027279,0.00362606,0.00306494,0.00156441]      # lambda = 846.63757726278155
                ).astype(float))}
l_fasttree_bl_bootlier_log_above_med = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.00202021,0.0302122,0.000230471,0.00477982,0.011524,0.00302725,0.000331896,0.0255832,0.0907201,4.47839e-05,0.0464555,1.365e-06,0.00411427,0.00995562,0.0128243,0.0163992,0.00115475,0.000738983,0.000109276,0.00318258] +   # lambda = 33.86550309051126
                                     [0.00579321,0.00111484,2.54357e-05,0.00299059,0.000576262,0.00869075,0.0877206,0.0451475,0.00218082,0.0239786,0.00330373,0.00281854,0.00576885,0.00599119,0.157271,0.0006212,0.00263144,0.000313628,3.76513e-05,3.21816e-06] +  # lambda = 84.66375772627816
                                     [0.00221646,0.00108963,0.0304448,0.0237199,0.00662563,0.0374557,0.00466325,0.0225628,0.0191758,0.0197739,0.000846576,0.0728263,0.00196749,0.0199767,0.000248585,1.66196e-05,0.0714402,0.00559847,0.00672054,0.000159838] +    # lambda = 169.32751545255631
                                     [0.0547348,0.00996647,0.00212607,0.00479928,0.0804834,0.00105934,0.00944695,0.00530519,0.000560452,0.0817607,0.119503,0.00201548,0.0029084,0.0746318,0.00150879,0.00177779,0.000694208,4.67534e-05,0.000358573,0.00143095] +      # lambda = 338.65503090511262
                                     [0.0019011,0.0112132,0.00486452,0.0695595,0.0329793,0.00337898,0.0196468,0.00230505,0.0830091,4.68618e-05,0.0319334,0.125461,1.89929e-05,0.00336341,0.0421092,0.00250637,0.018468,0.0305313,0.20877,0.00694139]      # lambda = 846.63757726278155
                ).astype(float))}
l_fasttree_bl_bootlier_log_above_p75 = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.00264058,0.00366631,0.00314154,0.00490751,0.00298348,0.00367448,0.00465557,0.00627051,0.00364044,0.00160808,0.00561135,0.00235475,0.00333584,0.00353092,0.00202497,0.0041642,0.00265521,0.00438425,0.00447643,0.00403687] +   # lambda = 33.86550309051126
                                     [0.00206077,0.000520505,0.00147619,0.00218165,0.001658,0.00300662,0.00260731,0.0028432,0.00137293,0.00219811,0.000348432,0.00279544,0.00213375,0.00318117,0.00469611,0.00160731,0.00124331,0.00139334,0.00123736,0.00348961] +  # lambda = 84.66375772627816
                                     [0.00108852,0.00193108,0.00179308,0.00193242,0.00174558,0.00274745,0.000664356,0.00326797,0.00511815,0.00194418,0.000831647,0.00166191,0.00224527,0.000646923,0.00300314,0.00129947,0.000880309,0.00286701,0.00217712,0.0017459] +    # lambda = 169.32751545255631
                                     [0.00117514,0.000387303,0.0013755,0.000493399,0.00113345,0.000480976,0.00166518,0.00088709,0.00185719,0.00256731,0.00293573,0.000914969,0.00279102,0.000678179,0.00310134,0.00227235,0.00241414,0.0021282,0.000996801,0.00416287] +      # lambda = 338.65503090511262
                                     [0.00197794,0.00100982,0.00290719,0.00108449,0.00117803,0.0021408,0.00189525,0.000482345,0.00119129,0.00182003,0.00173266,0.000509731,0.000889995,0.00159882,0.00222541,0.00111015,0.00170077,0.00203405,0.00181507,0.00105519]      # lambda = 846.63757726278155
                ).astype(float))}
l_fasttree_bl_bootlier_log_below_med = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0456874,0.00266924,0.0690082,0.00790923,0.0568862,0.0497392,0.0585351,0.00148611,0.00129041,0.0444123,0.0313919,0.0521272,0.00795049,0.0608046,0.0226098,0.0393368,0.045452,0.0893349,0.0327178,0.0478245] +   # lambda = 33.86550309051126
                                     [0.019472,0.0236008,0.0260036,0.0244614,0.0397643,0.0334289,0.000495466,0.0173706,0.0329027,3.325e-05,0.0121531,0.19566,0.0346582,0.00406399,0.000137932,0.0153457,0.0754422,0.00823756,0.0221572,0.0365893] +  # lambda = 84.66375772627816
                                     [0.019581,0.0200394,0.00120906,0.00126504,0.0069211,0.00502504,0.130303,0.00816477,0.0132894,0.000963423,0.039146,0.000976556,0.0212891,0.000701164,0.0634205,0.027525,0.00157279,0.0243419,0.0153482,0.0321537] +    # lambda = 169.32751545255631
                                     [0.00357503,0.0444292,0.0267243,0.119312,0.000564836,0.0176237,0.00906647,0.000745349,0.0248955,0.00388279,0.000195975,0.0199077,0.0274911,0.00146975,0.0792172,0.0229399,0.120056,0.0262959,0.0221478,0.0224211] +      # lambda = 338.65503090511262
                                     [0.00846967,0.0360188,0.00214537,0.0023057,2.12341e-05,0.00337898,0.0572228,0.051337,0.000756552,0.0343158,0.000860248,0.00439648,0.00588938,0.0526028,0.000274863,0.00886846,0.0733959,0.00132556,0.00292162,0.0279995]      # lambda = 846.63757726278155
                ).astype(float))}
l_fasttree_bl_bootlier_log_below_p25 = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0123734,0.0161077,0.0151883,0.0179404,0.0155386,0.0158933,0.017224,0.0177828,0.0148452,0.0113786,0.0190557,0.0136771,0.0154566,0.0150695,0.0124001,0.0167195,0.0130057,0.016462,0.0175713,0.0153431] +   # lambda = 33.86550309051126
                                     [0.0112109,0.00947996,0.010985,0.0126215,0.0115386,0.0146299,0.0129614,0.014068,0.0108386,0.0130646,0.00887205,0.0144799,0.0143982,0.0155935,0.016996,0.0118777,0.0106852,0.0111573,0.0112163,0.014507] +  # lambda = 84.66375772627816
                                     [0.0109411,0.0122211,0.0127495,0.0118127,0.0120983,0.014863,0.0080618,0.0150463,0.0184559,0.0101157,0.00927429,0.0108969,0.0119005,0.00772811,0.0121802,0.0104285,0.00992154,0.0123706,0.0132202,0.0114998] +    # lambda = 169.32751545255631
                                     [0.0119436,0.0103805,0.0127714,0.00891889,0.0112915,0.00964331,0.0158165,0.0124405,0.0130391,0.0134292,0.0173875,0.010061,0.0173434,0.0115094,0.0167457,0.015489,0.0143612,0.0151842,0.0108673,0.0184966] +      # lambda = 338.65503090511262
                                     [0.0168902,0.0168125,0.015021,0.0123806,0.0172973,0.0166697,0.0220035,0.0130179,0.0165459,0.0227983,0.022459,0.0123722,0.0145584,0.0182313,0.0178594,0.013858,0.0154359,0.0197134,0.024491,0.018115]      # lambda = 846.63757726278155
                ).astype(float))}
l_raxml_bl_bootlier_log = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0114584,0.0146186,0.0138085,0.0171416,0.0142134,0.0142644,0.015539,0.017067,0.0138397,0.0109729,0.019433,0.0128918,0.0128594,0.0125178,0.0115036,0.0156293,0.0115885,0.0156327,0.0166547,0.0146451] +   # lambda = 33.86550309051126
                                     [0.011464,0.00919391,0.0108494,0.0128002,0.0115975,0.0148542,0.0134982,0.0144985,0.011005,0.0132266,0.00827341,0.0140757,0.0140142,0.0158816,0.0176842,0.0116674,0.0110565,0.0110363,0.0108925,0.014961] +  # lambda = 84.66375772627816
                                     [0.0117528,0.0129104,0.0146195,0.0124127,0.0119733,0.0159625,0.00919471,0.0161587,0.0195983,0.0111165,0.00974389,0.0121575,0.0132816,0.00919249,0.0147484,0.0116352,0.01081,0.0133828,0.0146836,0.0122667] +    # lambda = 169.32751545255631
                                     [0.0108037,0.0096102,0.0126205,0.00927722,0.0115821,0.00939382,0.0149498,0.0112418,0.0154087,0.013882,0.0166119,0.0102626,0.0164398,0.01123,0.0168835,0.0142735,0.0149932,0.0135044,0.0102806,0.0187006] +      # lambda = 338.65503090511262
                                     [0.0137384,0.0120065,0.017469,0.0108412,0.0112755,0.0142328,0.0113597,0.00953871,0.013599,0.0126144,0.0144659,0.010044,0.0131233,0.0152898,0.0138188,0.0135336,0.0115992,0.0150686,0.0147288,0.0117922]      # lambda = 846.63757726278155
                ).astype(float))}
l_fastme_bl_f84 = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0259999,0.0259851,0.0224849,0.0318683,0.0250234,0.0291291,0.0310279,0.0334652,0.0253794,0.0230736,0.0364881,0.0250428,0.0248686,0.0265995,0.0235247,0.0266692,0.0218852,0.0282189,0.0276089,0.0262525] +   # lambda = 33.86550309051126
                                     [0.0151618,0.0122376,0.0144486,0.0161809,0.0150989,0.018455,0.0162913,0.0179148,0.0131201,0.0170571,0.0110736,0.0176698,0.0176331,0.0197131,0.0217034,0.0154274,0.0139657,0.0142258,0.0133809,0.018464] +  # lambda = 84.66375772627816
                                     [0.0143685,0.0162377,0.0167976,0.0151501,0.0148318,0.0186507,0.0110592,0.0189016,0.0224232,0.0133187,0.0123032,0.0142948,0.0161528,0.0113471,0.0174883,0.0139854,0.013216,0.0159902,0.0167991,0.0153694] +    # lambda = 169.32751545255631
                                     [0.0128801,0.0116164,0.0146594,0.0114737,0.0133832,0.0109551,0.0171363,0.0134218,0.0174834,0.0155768,0.0188603,0.0120861,0.019573,0.0129523,0.0190733,0.0171575,0.0179164,0.0156424,0.0120512,0.0213901] +      # lambda = 338.65503090511262
                                     [0.0156499,0.0142153,0.0193467,0.0128596,0.0133492,0.0164076,0.0134665,0.0107901,0.0159327,0.014515,0.0161541,0.0119454,0.0153895,0.0179816,0.0152589,0.0162558,0.0136612,0.0174142,0.0170619,0.0139504]      # lambda = 846.63757726278155
                ).astype(float))}
l_fastme_bl_f84_bootlier_log = {'lambda':np.array([33.866]*20+[84.664]*20+[169.328]*20+[338.655]*20+[846.638]*20),
                 'cherries':np.log10(np.array([0.0273095,0.023537,0.0203794,0.0283397,0.0229909,0.0254376,0.0271725,0.0293431,0.0222658,0.0245925,0.0330089,0.0227757,0.0229475,0.0219658,0.0211375,0.0246516,0.0198294,0.0251063,0.0243115,0.0227826] +   # lambda = 33.86550309051126
                                     [0.0105558,0.00897893,0.0103671,0.0115994,0.0109545,0.0143079,0.0116617,0.0136819,0.00856801,0.0123937,0.0087791,0.0140065,0.0146665,0.014928,0.0155071,0.0114605,0.0104043,0.0112886,0.00992747,0.0142424] +  # lambda = 84.66375772627816
                                     [0.00866107,0.00942393,0.00966997,0.00964417,0.00914312,0.011375,0.00553541,0.011636,0.0138578,0.00757752,0.00675555,0.00742165,0.00828122,0.00531442,0.00896275,0.00737442,0.00694002,0.00911732,0.00981926,0.0088206] +    # lambda = 169.32751545255631
                                     [0.00428363,0.003226,0.00549178,0.00453119,0.00432587,0.00314521,0.00517128,0.00406597,0.00608424,0.00547431,0.00573913,0.00473492,0.00626697,0.00354441,0.00660008,0.0063578,0.00618104,0.00458232,0.004553,0.00861753] +      # lambda = 338.65503090511262
                                     [0.0007821,0.000537143,0.000218574,0.000309634,3.75746e-06,0.00087297,0.000129598,0.000355682,0.00121215,3.51507e-05,0.00130168,0.000127756,0.000293099,0.00129682,0.000354708,0.000451121,0.000490785,0.000593387,0.000430003,6.08347e-05]      # lambda = 846.63757726278155
                ).astype(float))}

# modifying sequence length
k_fasttree_bl = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.0427802,0.0474117,0.0485844,0.0512438,0.0646607,0.0438524,0.0633359,0.0691174,0.0444996,0.0545086,0.0595854,0.0491783,0.0489498,0.05356,0.0415044,0.0538873,0.0429739,0.0514629,0.0392867,0.0502799] +  # length = 50
                                     [0.0228812,0.0241614,0.0163993,0.0194282,0.0229367,0.0244554,0.0196727,0.0216283,0.0205361,0.0246706,0.0171701,0.0248134,0.0213294,0.0230472,0.0159703,0.0226871,0.0214596,0.023457,0.020837,0.0214121] +   # length = 100
                                     [0.0111198,0.0145299,0.0156629,0.0161564,0.0159989,0.0112388,0.0133591,0.0161641,0.0136955,0.0195486,0.0149736,0.014879,0.0188827,0.0145646,0.012685,0.0128649,0.0193457,0.0115333,0.0131622,0.0164278] +   # length = 200
                                     [0.0122579,0.0140104,0.0147327,0.0129625,0.0127697,0.0166014,0.00966062,0.0170136,0.0205515,0.0116561,0.0104276,0.0129337,0.0144581,0.00953683,0.0153007,0.01193,0.0111577,0.0136173,0.0151836,0.0130099] +    # length = 300
                                     [0.00855219,0.00877734,0.00972551,0.00854478,0.0147576,0.0106901,0.0152375,0.0166326,0.0103016,0.0143491,0.0100936,0.0096417,0.013475,0.0170208,0.00999145,0.0111491,0.0164445,0.0119714,0.00961763,0.00915284] + # length = 600
                                     [0.00956276,0.00989205,0.012106,0.012994,0.00956605,0.0127947,0.0122727,0.0117936,0.0123229,0.0102325,0.00982698,0.00939633,0.0149589,0.0105688,0.0164763,0.0109572,0.010515,0.0136184,0.0100604,0.0137671] +  # length = 1200
                                     [0.00833246,0.0129986,0.0114098,0.014171,0.00918868,0.0100476,0.0112997,0.0121075,0.0103605,0.00929667,0.0105171,0.0108852,0.00850883,0.00826422,0.0114894,0.00961713,0.00943021,0.00642079,0.0116746,0.0121126] + # length = 2400
                                     [0.00760534,0.0113546,0.0147971,0.00792801,0.0132407,0.00977195,0.0136729,0.0104973,0.00857026,0.0111994,0.00798105,0.0110093,0.0123088,0.00877922,0.013396,0.0125421,0.00860825,0.00753932,0.011505,0.00903028]    # length = 4800
                ).astype(float))}
k_raxml_bl = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.0238124,0.0263987,0.0290364,0.028915,0.0330315,0.0256918,0.0335829,0.0354851,0.0272294,0.0299068,0.0316723,0.024782,0.0261417,0.0283754,0.0225955,0.0304431,0.0217002,0.0311585,0.0233729,0.0275233] +  # length = 50
                                     [0.0185514,0.0193585,0.0117487,0.0156878,0.0170298,0.0182602,0.0151984,0.0168458,0.0141487,0.0181164,0.0146396,0.0183307,0.0170749,0.0180811,0.0110642,0.0184674,0.0167497,0.0178668,0.0156366,0.0168387] +   # length = 100
                                     [0.0100744,0.0133927,0.0141384,0.0147626,0.0143518,0.0105631,0.0117754,0.0145847,0.0124883,0.0175475,0.0138732,0.0132588,0.0176813,0.0129866,0.0114365,0.0116927,0.0181756,0.0102249,0.0116411,0.014984] +   # length = 200
                                     [0.0116796,0.0128327,0.0145352,0.0123368,0.0118993,0.0158731,0.00913205,0.0160686,0.0194957,0.0110458,0.00967891,0.0120827,0.0132024,0.00912984,0.0146636,0.0115625,0.0107406,0.0133031,0.014599,0.0121914] +    # length = 300
                                     [0.00853671,0.00865184,0.0094752,0.00841453,0.0144865,0.0105462,0.0147194,0.0166405,0.0101532,0.0142705,0.00989013,0.00948399,0.013364,0.0168005,0.009981,0.0110714,0.0162591,0.0115048,0.00966015,0.0089585] + # length = 600
                                     [0.0094413,0.00991061,0.0121278,0.0129669,0.00943164,0.0127004,0.0122888,0.0118003,0.0122739,0.0102148,0.00983116,0.00938313,0.0148654,0.0105713,0.0162827,0.0108938,0.0104154,0.0135422,0.010089,0.0137002] +  # length = 1200
                                     [0.00832997,0.0130088,0.0114084,0.0141906,0.00921681,0.0101034,0.0113182,0.0121352,0.0103804,0.0093393,0.0105383,0.0109388,0.00854012,0.00830718,0.0115082,0.00966318,0.0094308,0.00642568,0.0116843,0.0121424] + # length = 2400
                                     [0.00762159,0.0113809,0.0147904,0.00794803,0.0132574,0.00978842,0.0137171,0.0105242,0.00857839,0.011209,0.00799564,0.0110234,0.0123555,0.00880314,0.0134024,0.0125546,0.00863298,0.00755903,0.0115519,0.00903266]    # length = 4800
                ).astype(float))}
k_fasttree_bl_bootlier_log = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.0062467,0.00992926,0.00630955,0.00928293,0.00876914,0.00821251,0.0108388,0.0120069,0.0091917,0.0103711,0.0113067,0.00662893,0.0082361,0.00843564,0.00825878,0.0107271,0.00759204,0.00879402,0.00809724,0.00743035] +  # length = 50
                                     [0.00827448,0.00909369,0.00497574,0.0073606,0.00900009,0.00770844,0.00654468,0.00923595,0.0069116,0.00648086,0.00645346,0.00686919,0.00667323,0.00850319,0.00422476,0.00847188,0.00591594,0.00829157,0.00584389,0.00844273] +   # length = 100
                                     [0.00577522,0.00908418,0.00906882,0.0100781,0.00754894,0.0076138,0.00816223,0.00949171,0.00713747,0.0106217,0.00759772,0.00852372,0.0112853,0.00721236,0.00659243,0.0070653,0.0116028,0.0062736,0.00745246,0.0089019] +   # length = 200
                                     [0.00886929,0.00960094,0.00993662,0.00944752,0.0102536,0.0118833,0.00595553,0.0120525,0.0147908,0.00832097,0.0073311,0.00849477,0.00918819,0.00560626,0.00915525,0.0082181,0.00766799,0.010339,0.0103675,0.00921321] +    # length = 300
                                     [0.00721978,0.00697536,0.00750691,0.0075526,0.0129379,0.00820345,0.0127316,0.0148362,0.00918372,0.0128808,0.00892631,0.00826422,0.0116853,0.0137962,0.00864348,0.00950289,0.0134626,0.00970082,0.00794113,0.00805642] + # length = 600
                                     [0.00886733,0.00918066,0.0104426,0.0126057,0.00887046,0.0114333,0.0117501,0.0111404,0.0120973,0.00950561,0.00911857,0.00846273,0.0132857,0.00936843,0.0144349,0.0101302,0.00990823,0.0121222,0.00947051,0.0125716] +  # length = 1200
                                     [0.00780914,0.0129206,0.0104909,0.0140886,0.00931225,0.00958793,0.0105275,0.0118844,0.00962954,0.0103845,0.00964583,0.0105387,0.00844929,0.00774399,0.0121473,0.0084237,0.00837362,0.00828159,0.010604,0.0113042] + # length = 2400
                                     [0.00700467,0.0105781,0.014207,0.00787096,0.0151179,0.00906834,0.0129559,0.00989305,0.00895885,0.0102945,0.00769668,0.0103858,0.0114913,0.00847687,0.0122248,0.0120132,0.00854828,0.00715629,0.0110048,0.00860182]    # length = 4800
                ).astype(float))}
k_fasttree_bl_bootlier_log_above_med = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.18386,0.139503,0.065345,0.0073287,0.156949,0.0293141,0.00240968,0.0261412,0.0583996,0.074888,0.0337089,0.000201611,0.00826451,0.0131682,0.00825878,0.00573789,0.106568,0.000608953,0.00258266,0.00102529] +  # length = 50
                                     [0.208972,0.0340347,1.04103e-05,0.101571,0.00105445,0.011026,0.0461634,0.0837053,0.00620454,0.000394112,0.0712659,0.0857618,0.0415194,0.0302036,0.0031029,0.0129732,0.0139291,0.0293513,0.00107095,0.00356047] +   # length = 100
                                     [6.90879e-06,0.0975876,0.00363998,1.62842e-05,0.0055288,0.0280572,0.00114184,0.0114665,0.00914553,0.00262665,0.00103786,0.00143009,0.00465721,0.0306862,0.00865773,0.00184633,0.123294,0.0062736,0.00364548,0.0718994] +   # length = 200
                                     [0.00221646,0.00108963,0.0304448,0.0237199,0.00662563,0.0374557,0.00466325,0.0225628,0.0191758,0.0197739,0.000846576,0.0728263,0.00196749,0.0199767,0.000248585,1.66196e-05,0.0714402,0.00559847,0.00672054,0.000159838] +    # length = 300
                                     [1.59435e-05,0.0323876,0.00142363,0.00266658,0.057452,0.000402261,0.00110053,0.0114171,0.0066532,0.0385007,0.0014019,0.0677785,0.0488877,0.00519103,0.0274992,0.0350667,0.000632971,0.00493375,0.00265284,0.0041693] + # length = 600
                                     [0.00207874,0.0065896,8.60244e-05,0.100221,0.118733,0.0115257,0.00461651,0.00262323,0.00111038,0.0101126,0.000739033,0.0129205,0.000851084,0.0184598,0.00219991,0.0238186,0.00212602,0.0529231,5.5797e-05,2.82177e-08] +  # length = 1200
                                     [5.84678e-05,0.0362635,0.00152289,0.0170017,0.00152891,1.0387e-05,0.0194123,0.00715536,0.00394934,0.000754714,0.0145581,0.0484931,0.0432381,0.000444239,0.000986545,0.0624862,0.00488673,0.0421798,0.0350178,0.00410537] + # length = 2400
                                     [0.00145777,0.0677631,0.0127215,0.0265243,0.000507657,0.0141154,0.000366498,0.0313395,0.0136514,0.0218844,0.056479,0.0301783,0.04197,0.00156356,0.0182861,0.0119809,0.00180583,0.00113934,0.000135768,0.00305303]    # length = 4800
                ).astype(float))}
k_fasttree_bl_bootlier_log_above_p75 = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.0114123,0.0136255,0.0125124,0.0145194,0.0171209,0.0119193,0.0216661,0.0243147,0.0129545,0.0174607,0.0205763,0.0137783,0.0149097,0.015173,0.0107497,0.0173321,0.0125108,0.0156164,0.0107874,0.0150404] +  # length = 50
                                     [0.00495368,0.00514422,0.00242231,0.00343577,0.00461886,0.00428298,0.00298394,0.00441026,0.00376779,0.00410055,0.00231712,0.00553796,0.0035309,0.00450692,0.00169562,0.00455098,0.00359334,0.00468643,0.00306192,0.003325] +   # length = 100
                                     [0.000933286,0.00259337,0.00193112,0.00227662,0.00232131,0.000982704,0.00213301,0.00256958,0.00143496,0.00338572,0.00192219,0.00233957,0.00313392,0.00173254,0.0014719,0.00128991,0.00367712,0.000936216,0.00173356,0.00256054] +   # length = 200
                                     [0.00108852,0.00193108,0.00179308,0.00193242,0.00174558,0.00274745,0.000664356,0.00326797,0.00511815,0.00194418,0.000831647,0.00166191,0.00224527,0.000646923,0.00300314,0.00129947,0.000880309,0.00286701,0.00217712,0.0017459] +    # length = 300
                                     [0.000564577,0.000577745,0.000690605,0.000429434,0.00273425,0.000909326,0.00277523,0.00379344,0.0010268,0.00310326,0.000765499,0.000698849,0.00211654,0.00311768,0.00108517,0.00115004,0.00342398,0.0017315,0.000679948,0.000884902] + # length = 600
                                     [0.00098458,0.000837997,0.00152634,0.0020081,0.000909394,0.00202299,0.00194217,0.00165775,0.00137124,0.000821686,0.000766552,0.000666571,0.00368844,0.00117071,0.00286165,0.00154287,0.00129851,0.00190885,0.000889834,0.00254618] +  # length = 1200
                                     [0.0006267,0.0025816,0.00130014,0.00277925,0.000724057,0.000698365,0.00145277,0.00205648,0.00113128,0.000985679,0.00118226,0.00112556,0.00092099,0.00058279,0.00163044,0.000890911,0.000750196,8.3493e-05,0.00176312,0.00203794] + # length = 2400
                                     [0.00020271,0.00124973,0.00274522,0.000536531,0.00181867,0.00094514,0.00232869,0.00105578,0.000872979,0.00162105,0.000443442,0.0012623,0.00127917,0.000578624,0.00212177,0.00209586,0.000544915,0.000430527,0.00155387,0.000472523]    # length = 4800
                ).astype(float))}
k_fasttree_bl_bootlier_log_below_med = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([3.04272e-05,0.000843428,0.00282613,0.0568024,0.00903946,0.00598475,0.0194468,0.0219488,0.00469422,0.00274453,0.0416584,0.0195275,0.0363641,0.11244,0.00825878,0.143077,0.000934725,0.0503308,0.0958066,0.00748197] +  # length = 50
                                     [0.000232777,0.0322484,0.0160762,0.000539888,0.0384113,0.0162187,0.013413,6.99573e-05,0.010083,0.0237574,0.00543834,9.45404e-06,0.00402979,0.0161084,0.0137835,0.0350071,0.0353877,0.0353061,0.00914049,0.0910542] +   # length = 100
                                     [0.0452489,0.00248035,0.0308342,0.0657068,0.0618885,0.00065455,0.0247293,0.00189943,0.147582,0.0233121,0.0254842,0.0133915,0.00939631,0.0138487,0.0229653,0.0292381,5.50452e-05,0.0062736,0.00180005,0.000328221] +   # length = 200
                                     [0.019581,0.0200394,0.00120906,0.00126504,0.0069211,0.00502504,0.130303,0.00816477,0.0132894,0.000963423,0.039146,0.000976556,0.0212891,0.000701164,0.0634205,0.027525,0.00157279,0.0243419,0.0153482,0.0321537] +    # length = 300
                                     [0.0945195,0.000677891,0.0655479,0.0280325,1.10151e-05,0.0718259,0.0243141,0.0108862,0.0112903,0.0229482,0.0254334,0.000502416,0.00387101,0.0463427,0.0192618,0.0157451,0.0292567,0.18788,0.0626683,0.0267719] + # length = 600
                                     [0.0579787,0.00123746,0.0628029,0.000239415,0.000689549,0.00795639,0.122879,0.0581838,0.0354903,0.00589144,0.0248747,0.00361145,0.0382645,0.000602267,0.114844,0.00467029,0.0715657,0.0032719,0.10177,0.0376656] +  # length = 1200
                                     [0.00985587,0.02305,0.0187208,0.00919863,0.00383564,0.015146,0.00461639,0.00332014,0.119162,0.0275539,0.00132015,0.00926016,1.90827e-06,0.0569013,0.0461128,3.96563e-05,0.00185064,0.000670434,0.00200346,0.0212343] + # length = 2400
                                     [0.0583271,0.000621923,0.0624694,0.00275866,0.0219299,0.0090988,0.10624,5.34534e-05,0.00563331,0.00595828,0.000894929,2.86034e-06,0.00377462,0.0262828,0.00200468,0.0119916,0.0641146,0.0218541,0.0450852,0.0211316]    # length = 4800
                ).astype(float))}
k_fasttree_bl_bootlier_log_below_p25 = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.0345495,0.0302671,0.037784,0.0582095,0.0445864,0.0349843,0.0302791,0.0580912,0.0239295,0.0441539,0.0461683,0.0216731,0.0225854,0.0414762,0.0411086,0.041031,0.0383647,0.0225968,0.0204225,0.0183455] +  # length = 50
                                     [0.0191982,0.0169315,0.0175376,0.019256,0.0224231,0.0229157,0.0216822,0.0202173,0.0152549,0.0158443,0.0121254,0.0177159,0.0214445,0.0234764,0.0170703,0.0205497,0.0183781,0.0224582,0.01243,0.023862] +   # length = 100
                                     [0.00857442,0.0121499,0.0126366,0.0134689,0.0114627,0.00985246,0.0114767,0.0130336,0.0105209,0.0151845,0.0112942,0.0118931,0.0153004,0.0107606,0.00974603,0.0100916,0.0157369,0.0091391,0.0106819,0.0126298] +   # length = 200
                                     [0.0109411,0.0122211,0.0127495,0.0118127,0.0120983,0.014863,0.0080618,0.0150463,0.0184559,0.0101157,0.00927429,0.0108969,0.0119005,0.00772811,0.0121802,0.0104285,0.00992154,0.0123706,0.0132202,0.0114998] +    # length = 300
                                     [0.008757,0.00850661,0.00923896,0.00879429,0.0149202,0.0100466,0.0145836,0.0167673,0.0105867,0.0142409,0.0105586,0.00976723,0.0134521,0.0160088,0.0100544,0.0112897,0.0154894,0.011732,0.00928242,0.00919331] + # length = 600
                                     [0.00994552,0.0102485,0.0121243,0.0137332,0.00986665,0.0128118,0.0126301,0.0120662,0.0134699,0.0106,0.0105037,0.0094313,0.0147883,0.0107611,0.0165142,0.0115366,0.0109468,0.013777,0.0105397,0.0139492] +  # length = 1200
                                     [0.0088387,0.0138626,0.011694,0.0159828,0.00997228,0.0108429,0.0118473,0.0132812,0.0107647,0.0108022,0.0108488,0.0116069,0.00931753,0.00892576,0.0121813,0.00945493,0.00971443,0.00730435,0.0119441,0.0127335] + # length = 2400
                                     [0.00822308,0.0117242,0.0152132,0.00867405,0.0138422,0.0102704,0.0146562,0.0109995,0.00874003,0.0114507,0.00858887,0.0116595,0.0126838,0.00942404,0.013487,0.0129029,0.00939178,0.00814685,0.0120451,0.00968791]    # length = 4800
                ).astype(float))}
k_raxml_bl_bootlier_log = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.0239299,0.0265251,0.0291715,0.0290497,0.0331797,0.0258157,0.0337329,0.0356412,0.0273585,0.0300448,0.031816,0.0249029,0.0262671,0.0285083,0.0227089,0.0305828,0.0218104,0.0313006,0.023489,0.0276533] +  # length = 50
                                     [0.0186505,0.0194606,0.0118222,0.0157764,0.0171235,0.0183583,0.0152852,0.0169387,0.0142315,0.018214,0.0147243,0.0184291,0.0171687,0.0181786,0.0111349,0.0185663,0.0168424,0.0179635,0.0157251,0.0169317] +   # length = 100
                                     [0.010141,0.0134727,0.0142212,0.0148478,0.0144355,0.0106318,0.011849,0.0146692,0.0125647,0.017643,0.0139551,0.0133383,0.0177773,0.013065,0.0115087,0.011766,0.0182734,0.0102922,0.0117142,0.0150701] +   # length = 200
                                     [0.0117528,0.0129104,0.0146195,0.0124127,0.0119733,0.0159625,0.00919471,0.0161587,0.0195983,0.0111165,0.00974389,0.0121575,0.0132816,0.00919249,0.0147484,0.0116352,0.01081,0.0133828,0.0146836,0.0122667] +    # length = 300
                                     [0.00859679,0.00871242,0.00953932,0.00847407,0.0145706,0.0106148,0.0148044,0.0167327,0.0102202,0.0143538,0.009956,0.00954814,0.0134438,0.0168932,0.0100473,0.0111422,0.0163499,0.0115773,0.00972505,0.00902041] + # length = 600
                                     [0.00950528,0.00997656,0.0122028,0.0130452,0.00949558,0.0127776,0.0123644,0.011874,0.0123495,0.010282,0.00989679,0.00944686,0.014951,0.01064,0.0163736,0.0109638,0.0104835,0.0136227,0.0101557,0.0137814] +  # length = 1200
                                     [0.00838914,0.0130873,0.0114806,0.0142736,0.00927983,0.0101702,0.0122231,0.0122103,0.0104483,0.00994076,0.0106068,0.011009,0.00848038,0.00836625,0.0115807,0.0097281,0.00949473,0.00637554,0.0117575,0.0122175] + # length = 2400
                                     [0.00833839,0.0130745,0.0148757,0.00789089,0.0133368,0.00972335,0.0136364,0.0112925,0.00863865,0.0111381,0.00771095,0.0109532,0.01228,0.00886438,0.0134824,0.0126312,0.00833434,0.00761475,0.0109099,0.00860414]    # length = 4800
                ).astype(float))}
k_fastme_bl_f84 = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.0316959,0.0352264,0.0431794,0.0398323,0.040868,0.0380488,0.0492309,0.0504347,0.0427727,0.0407336,0.041607,0.0371781,0.0385914,0.0452715,0.0343539,0.0416812,0.0367661,0.0449793,0.0323915,0.0390263] +  # length = 50
                                     [0.0242369,0.0264518,0.017999,0.021777,0.0243248,0.0249679,0.0211079,0.022647,0.0206354,0.0247664,0.0203444,0.0253432,0.0228608,0.0222978,0.0174442,0.0238415,0.0237105,0.0245695,0.0212466,0.0216969] +   # length = 100
                                     [0.0133749,0.0167739,0.0181255,0.0187984,0.017638,0.0134613,0.0157398,0.018055,0.0159232,0.022042,0.0173327,0.0167762,0.0210971,0.0173963,0.0152672,0.0148108,0.0215971,0.0136198,0.015547,0.0186983] +   # length = 200
                                     [0.0143685,0.0162377,0.0167976,0.0151501,0.0148318,0.0186507,0.0110592,0.0189016,0.0224232,0.0133187,0.0123032,0.0142948,0.0161528,0.0113471,0.0174883,0.0139854,0.013216,0.0159902,0.0167991,0.0153694] +    # length = 300
                                     [0.00945559,0.00982009,0.0110897,0.00945576,0.0162135,0.0118585,0.0163783,0.0180554,0.0113921,0.0162854,0.0112232,0.010481,0.0144585,0.0184549,0.0111821,0.0125852,0.01793,0.0129828,0.0108753,0.0100964] + # length = 600
                                     [0.0100739,0.010303,0.0128389,0.0136324,0.0102043,0.0135127,0.0130821,0.0124987,0.013164,0.0110478,0.0105747,0.0101401,0.0158214,0.0114157,0.0173509,0.0114438,0.0113464,0.0143435,0.0109099,0.0145184] +  # length = 1200
                                     [0.00873783,0.0134698,0.0116678,0.0145074,0.00953988,0.0104114,0.0116311,0.0124654,0.0107406,0.00959685,0.0108623,0.0112566,0.00880422,0.00858553,0.01178,0.0100165,0.00976556,0.0067781,0.0122575,0.0125354] + # length = 2400
                                     [0.00782894,0.0116083,0.0150554,0.00807524,0.0135018,0.00992952,0.0138741,0.010695,0.00886149,0.0114611,0.008084,0.0111536,0.0126125,0.00901437,0.0136169,0.0127462,0.00889913,0.00773965,0.0119067,0.0091233]    # length = 4800
                ).astype(float))}
k_fastme_bl_f84_bootlier_log = {'length':np.array([50]*20+[100]*20+[200]*20+[300]*20+[600]*20+[1200]*20+[2400]*20+[4800]*20), # values of length
                 'cherries':np.log10(np.array([0.00155717,0.0033801,0.00243714,0.00291908,0.00098889,0.00459927,0.00336536,0.00298848,0.00424351,0.00417751,0.00309156,0.00208119,0.00297199,0.00237773,0.0029374,0.00321087,0.00340129,0.00337697,0.0029509,0.00223289] +  # length = 50
                                     [0.00600312,0.00611798,0.00311136,0.00585014,0.00624416,0.00492811,0.00533461,0.00756688,0.00458065,0.00468656,0.00538949,0.00427174,0.00524486,0.00509352,0.00343979,0.00698145,0.00553826,0.00710721,0.00329595,0.00624484] +   # length = 100
                                     [0.00608847,0.00754261,0.00828681,0.00986231,0.00688804,0.0067061,0.00755402,0.00831236,0.00707175,0.00997647,0.00718105,0.00760924,0.00977172,0.00741736,0.00609143,0.00698024,0.00999172,0.00605444,0.00645826,0.00760333] +   # length = 200
                                     [0.00866107,0.00942393,0.00966997,0.00964417,0.00914312,0.011375,0.00553541,0.011636,0.0138578,0.00757752,0.00675555,0.00742165,0.00828122,0.00531442,0.00896275,0.00737442,0.00694002,0.00911732,0.00981926,0.0088206] +    # length = 300
                                     [0.00710485,0.00644618,0.00809612,0.00715083,0.0126055,0.007967,0.0122455,0.0140726,0.00892279,0.0128991,0.0093033,0.00760755,0.0114195,0.0136148,0.00880906,0.00980752,0.0124388,0.00925219,0.00761497,0.00842625] + # length = 600
                                     [0.00859087,0.00861406,0.0109591,0.0121399,0.00877489,0.0109036,0.0111844,0.00975732,0.012231,0.00934606,0.00904585,0.00840547,0.0126761,0.00987684,0.0149607,0.00997057,0.00988274,0.0115528,0.00896469,0.0125547] +  # length = 1200
                                     [0.00801959,0.0129932,0.0102478,0.0133541,0.00847652,0.0094797,0.0111264,0.0118618,0.0100595,0.00927637,0.0103377,0.0102786,0.00826295,0.00759032,0.0107022,0.00835668,0.00813464,0.00641907,0.0115866,0.010347] + # length = 2400
                                     [0.00754726,0.0108908,0.0136249,0.00825049,0.0125541,0.00947326,0.0135494,0.0102848,0.00813999,0.0108198,0.00796889,0.0106626,0.0119302,0.00834368,0.0128202,0.0125154,0.00847337,0.00757141,0.0118331,0.00906111]    # length = 4800
                ).astype(float))}

# modifying deviation from ultrametricity
g_fasttree_bl = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.0102406,0.00919035,0.0115081,0.0147891,0.0122779,0.0112154,0.0134358,0.0117916,0.0106498,0.0102572,0.0170508,0.0108541,0.0165876,0.0145748,0.0155865,0.0121497,0.0117644,0.0132643,0.018171,0.018831] +    # gamma = 2.95181735298926
                                     [0.0132226,0.0130488,0.0144508,0.0138975,0.0123595,0.0206415,0.0116223,0.0149065,0.0116574,0.0114654,0.0135315,0.00927825,0.0114981,0.00952555,0.014528,0.0112802,0.0114177,0.0154756,0.0116301,0.012064] +  # gamma = 5.90363470597852
                                     [0.0122579,0.0140104,0.0147327,0.0129625,0.0127697,0.0166014,0.00966062,0.0170136,0.0205515,0.0116561,0.0104276,0.0129337,0.0144581,0.00953683,0.0153007,0.01193,0.0111577,0.0136173,0.0151836,0.0130099] +    # gamma = 29.518173529892621
                                     [0.0153578,0.0109353,0.0132417,0.0145235,0.0145225,0.0107188,0.0111282,0.0123176,0.00838662,0.0116098,0.012461,0.0116172,0.014534,0.00889949,0.0150935,0.00984349,0.0123763,0.0125835,0.00884112,0.0116644] +   # gamma = 147.590867649463
                                     [0.0148823,0.0121941,0.0133448,0.013683,0.0101743,0.0176761,0.0115887,0.0138486,0.0125669,0.0147383,0.0118118,0.0136548,0.0124376,0.0121298,0.014407,0.00957187,0.0107287,0.0145415,0.0122395,0.0144261] +        # gamma = 295.181735298926
                                     [0.0126154,0.00951075,0.00954195,0.0139637,0.0131583,0.0115978,0.0106451,0.0111683,0.0155404,0.0116249,0.0140551,0.0169731,0.0132624,0.0117782,0.0111374,0.0184172,0.0102189,0.0171867,0.0122307,0.0130963]        # gamma = infinity
                ).astype(float))}
g_raxml_bl = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.00942352,0.00833048,0.0108756,0.0143512,0.0117049,0.0106471,0.012181,0.0116684,0.00995295,0.00963702,0.0157126,0.00987403,0.0156713,0.014367,0.0151278,0.0119494,0.0109711,0.0126528,0.0168896,0.0179312] +    # gamma = 2.95181735298926
                                     [0.012748,0.0125605,0.0136604,0.0128767,0.011879,0.0196796,0.0108641,0.0138477,0.0110647,0.0110084,0.0127802,0.00861143,0.0107866,0.00890205,0.0137482,0.0104897,0.0103873,0.0147223,0.0113472,0.0112625] +  # gamma = 5.90363470597852
                                     [0.0116796,0.0128327,0.0145352,0.0123368,0.0118993,0.0158731,0.00913205,0.0160686,0.0194957,0.0110458,0.00967891,0.0120827,0.0132024,0.00912984,0.0146636,0.0115625,0.0107406,0.0133031,0.014599,0.0121914] +    # gamma = 29.518173529892621
                                     [0.014589,0.0103896,0.0127874,0.0137691,0.0130813,0.010088,0.0110471,0.0114526,0.00802045,0.0111899,0.0115302,0.0113448,0.0140263,0.00840114,0.0136352,0.00937374,0.0117375,0.0119783,0.00842957,0.0112472] +   # gamma = 147.590867649463
                                     [0.0143025,0.0116274,0.0124971,0.0133305,0.00938278,0.0167998,0.0110728,0.0132797,0.0118169,0.013594,0.0113459,0.013195,0.0120778,0.0115385,0.0139171,0.00876632,0.0103641,0.0137551,0.0118614,0.0137252] +        # gamma = 295.181735298926
                                     [0.0122184,0.00903168,0.00893515,0.0128871,0.0123187,0.0111515,0.0101066,0.01087,0.0151499,0.0115506,0.0135429,0.0163078,0.0124123,0.0113076,0.0107022,0.0175676,0.00945462,0.0163576,0.0117161,0.0125759]        # gamma = infinity
                ).astype(float))}
g_fasttree_bl_bootlier_log = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.00622809,0.00531525,0.00722279,0.00954953,0.00706585,0.00689178,0.00822751,0.0077349,0.00571014,0.00673744,0.0108992,0.00662186,0.0100843,0.0103907,0.0105278,0.00832254,0.00759872,0.00907051,0.0116542,0.0134975] +    # gamma = 2.95181735298926
                                     [0.00883376,0.00857098,0.0103736,0.0107265,0.00855805,0.0142261,0.00791456,0.0111944,0.00870286,0.00731001,0.00862486,0.00572521,0.00801401,0.00666294,0.0103647,0.00777135,0.00681184,0.0109759,0.00810628,0.00788336] +  # gamma = 5.90363470597852
                                     [0.00886929,0.00960094,0.00993662,0.00944752,0.0102536,0.0118833,0.00595553,0.0120525,0.0147908,0.00832097,0.0073311,0.00849477,0.00918819,0.00560626,0.00915525,0.0082181,0.00766799,0.010339,0.0103675,0.00921321] +    # gamma = 29.518173529892621
                                     [0.0116456,0.00731859,0.00995247,0.00894142,0.00957545,0.00768488,0.00795168,0.00697881,0.00595748,0.00711803,0.00864546,0.00866939,0.0107362,0.00680738,0.00943847,0.00663672,0.00909888,0.0088644,0.00595806,0.00890207] +   # gamma = 147.590867649463
                                     [0.0101322,0.00962217,0.00900575,0.00871678,0.00718697,0.0129078,0.00839303,0.00946599,0.00866209,0.0097452,0.00825109,0.00952387,0.00982662,0.0084421,0.0108524,0.0063742,0.00709803,0.00835164,0.00745575,0.0110178] +        # gamma = 295.181735298926
                                     [0.00799192,0.00508547,0.00718452,0.00950052,0.0100986,0.00777533,0.00762789,0.0079842,0.0127502,0.00906363,0.00976927,0.0130802,0.00847789,0.00784835,0.00753113,0.0113321,0.0076294,0.0117004,0.00891148,0.00914305]        # gamma = infinity
                ).astype(float))}
g_fasttree_bl_bootlier_log_above_med = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.0249875,0.0450333,0.00186849,0.0290474,0.0284183,0.0598876,0.0101125,0.00243378,0.00624781,0.00719898,0.0226089,0.0298466,0.00053748,0.00464791,0.0258829,0.0284558,0.09228,0.0519451,0.00779558,0.104697] +    # gamma = 2.95181735298926
                                     [0.00151174,0.00388071,0.0105235,0.00867763,0.00251281,0.000327402,0.122209,0.000780182,0.014646,1.65924e-05,0.00449585,0.0991693,0.0032388,0.00429769,0.014528,0.0286711,0.0379896,0.0273261,0.000152905,0.00419425] +  # gamma = 5.90363470597852
                                     [0.00221646,0.00108963,0.0304448,0.0237199,0.00662563,0.0374557,0.00466325,0.0225628,0.0191758,0.0197739,0.000846576,0.0728263,0.00196749,0.0199767,0.000248585,1.66196e-05,0.0714402,0.00559847,0.00672054,0.000159838] +    # gamma = 29.518173529892621
                                     [0.00208456,0.0425051,6.17866e-05,0.00414455,0.0641267,0.00307697,0.040856,0.00615043,0.00107089,0.0654102,0.00105028,0.0104101,0.000454526,2.40429e-05,0.000466673,0.000317567,0.00249787,0.00241771,0.0283675,0.0269448] +   # gamma = 147.590867649463
                                     [0.127674,0.00792089,0.102794,0.0153138,0.0335383,0.000354846,1.1979e-06,0.0384928,0.0032659,0.0628725,0.00198938,0.0627414,1.97863e-05,0.00324308,0.000212298,0.0287103,0.00242341,0.0531942,0.00310292,0.0657175] +        # gamma = 295.181735298926
                                     [0.000897405,0.00693665,0.00552454,0.00419287,0.000117869,0.00335078,0.000593288,0.000822377,0.00480155,0.00094901,0.0031185,0.00973824,0.00177931,0.0412391,0.0187741,0.00025698,0.0136383,8.34844e-07,0.0511672,0.00172376]        # gamma = infinity
                ).astype(float))}
g_fasttree_bl_bootlier_log_above_p75 = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.00132173,0.00109129,0.00177463,0.00343242,0.00191795,0.0016023,0.0022767,0.00243191,0.00139112,0.0014897,0.00445524,0.00110686,0.00477288,0.00340101,0.00324955,0.00237817,0.00169405,0.00262669,0.00447819,0.00483401] +    # gamma = 2.95181735298926
                                     [0.00212583,0.00227356,0.00254809,0.00259465,0.00181814,0.0049421,0.00161826,0.00325248,0.00177508,0.00144393,0.00225699,0.000687681,0.00111233,0.00121866,0.00226292,0.00150086,0.00185219,0.0030869,0.00178167,0.00131877] +  # gamma = 5.90363470597852
                                     [0.00108852,0.00193108,0.00179308,0.00193242,0.00174558,0.00274745,0.000664356,0.00326797,0.00511815,0.00194418,0.000831647,0.00166191,0.00224527,0.000646923,0.00300314,0.00129947,0.000880309,0.00286701,0.00217712,0.0017459] +    # gamma = 29.518173529892621
                                     [0.00303213,0.000527965,0.00177975,0.00192442,0.00139235,0.000633627,0.000879741,0.00126834,0.000187334,0.00106582,0.00136237,0.00103537,0.0022292,0.000448795,0.00248374,0.000654868,0.00157323,0.00118012,0.000266401,0.00128409] +   # gamma = 147.590867649463
                                     [0.00208534,0.00103755,0.00145736,0.00144351,0.000826106,0.00345636,0.00116123,0.00192389,0.00113938,0.00204525,0.000868697,0.00195908,0.00181938,0.00164019,0.00220433,0.000479526,0.00142326,0.00195527,0.00132349,0.00234605] +        # gamma = 295.181735298926
                                     [0.00116657,0.000183713,0.000511137,0.00202313,0.00147168,0.000590079,0.000657565,0.00115866,0.00298348,0.00154754,0.00128827,0.00306977,0.0014562,0.00170818,0.000927362,0.00372004,0.00126306,0.003232,0.00143772,0.00168692]        # gamma = infinity
                ).astype(float))}
g_fasttree_bl_bootlier_log_below_med = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.00102338,2.4577e-05,0.121113,0.0169057,1.42831e-05,0.000656592,0.0417865,0.0235882,0.0448149,0.0365279,0.0114091,0.00668826,0.108951,0.00298791,0.00871847,0.018441,0.0010658,0.00654466,0.00152977,3.7835e-05] +    # gamma = 2.95181735298926
                                     [0.077605,0.0138023,0.0308213,0.0045634,0.0906235,0.159559,4.91369e-05,0.0367761,0.00418545,0.0438858,0.01601,7.79479e-05,0.0602568,0.0215587,0.016381,0.0178442,0.0116124,0.0342729,0.0137573,0.0056146] +  # gamma = 5.90363470597852
                                     [0.019581,0.0200394,0.00120906,0.00126504,0.0069211,0.00502504,0.130303,0.00816477,0.0132894,0.000963423,0.039146,0.000976556,0.0212891,0.000701164,0.0634205,0.027525,0.00157279,0.0243419,0.0153482,0.0321537] +    # gamma = 29.518173529892621
                                     [0.171819,0.00414166,0.130396,0.0124528,2.47298e-05,0.0997463,0.00618285,0.0901381,0.0150223,0.000143781,0.0586134,0.00455948,0.0378278,0.0223119,0.0446849,0.0126682,0.0232116,0.0236035,0.000289569,0.00174874] +   # gamma = 147.590867649463
                                     [1.40135e-05,0.0234579,0.000461699,0.0398712,0.00629216,0.119442,0.109902,0.00718897,0.018395,2.7432e-05,0.0181276,0.00220628,0.0126934,0.0127288,0.07497,5.02209e-05,0.119705,5.87684e-05,0.0667523,0.00576792] +        # gamma = 295.181735298926
                                     [0.0412878,0.0359092,0.0469285,0.0191215,0.0212743,0.0126648,0.0202965,0.0356016,0.0842408,0.126854,0.0257254,0.0223969,0.00423687,0.00554763,0.0260337,0.0301043,0.00103856,0.0215865,0.00482427,0.085437]        # gamma = infinity
                ).astype(float))}
g_fasttree_bl_bootlier_log_below_p25 = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.00835701,0.00732789,0.00943891,0.0121799,0.00970314,0.00922779,0.0107976,0.00986594,0.00800508,0.00887311,0.0141193,0.0087492,0.0131844,0.0128352,0.0130648,0.0106481,0.00973843,0.0113897,0.0148347,0.0166157] +    # gamma = 2.95181735298926
                                     [0.0111305,0.0109881,0.0128334,0.0127771,0.0107784,0.0177792,0.0101873,0.0134862,0.010365,0.00944857,0.0112869,0.00771408,0.0101621,0.00858876,0.0128693,0.00976247,0.00921607,0.013651,0.0104225,0.0103767] +  # gamma = 5.90363470597852
                                     [0.0109411,0.0122211,0.0127495,0.0118127,0.0120983,0.014863,0.0080618,0.0150463,0.0184559,0.0101157,0.00927429,0.0108969,0.0119005,0.00772811,0.0121802,0.0104285,0.00992154,0.0123706,0.0132202,0.0114998] +    # gamma = 29.518173529892621
                                     [0.0140817,0.00965433,0.0123789,0.0119067,0.012259,0.00964149,0.00985848,0.00971501,0.00774258,0.00938057,0.0108615,0.0106954,0.0133822,0.00857227,0.0123285,0.00861447,0.0114358,0.011317,0.00783019,0.0109565] +   # gamma = 147.590867649463
                                     [0.0128639,0.0116908,0.0116406,0.0113473,0.00932246,0.0159025,0.010568,0.012053,0.0111388,0.0126091,0.0105661,0.0121875,0.0118908,0.0108034,0.013333,0.00840556,0.00913492,0.0116564,0.00983851,0.013237] +        # gamma = 295.181735298926
                                     [0.0105545,0.00753447,0.00897339,0.0120538,0.0126075,0.0101166,0.00983323,0.010125,0.0153254,0.0110934,0.0123812,0.015706,0.0111974,0.0101433,0.00983786,0.0147,0.00933826,0.0147734,0.0112091,0.011608]        # gamma = infinity
                ).astype(float))}
g_raxml_bl_bootlier_log = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.00948742,0.00838965,0.0109456,0.0144349,0.0117782,0.0107162,0.0122562,0.0117415,0.0100191,0.00970183,0.0158013,0.00993983,0.0157599,0.0144507,0.0152144,0.0120237,0.0110415,0.0127299,0.0169828,0.0180281] +    # gamma = 2.95181735298926
                                     [0.0128254,0.0126372,0.0137414,0.0129546,0.011953,0.0197828,0.010934,0.0139294,0.0111354,0.0110788,0.0128577,0.00867183,0.0108562,0.00896372,0.0138296,0.0105581,0.0104552,0.0148074,0.0114191,0.011334] +  # gamma = 5.90363470597852
                                     [0.0117528,0.0129104,0.0146195,0.0124127,0.0119733,0.0159625,0.00919471,0.0161587,0.0195983,0.0111165,0.00974389,0.0121575,0.0132816,0.00919249,0.0147484,0.0116352,0.01081,0.0133828,0.0146836,0.0122667] +    # gamma = 29.518173529892621
                                     [0.0146736,0.0104576,0.012865,0.0138505,0.0131601,0.0101547,0.0111177,0.0115249,0.00807825,0.0112611,0.0116028,0.0114167,0.0141087,0.00846062,0.0137161,0.00943743,0.0118109,0.0120527,0.00848918,0.0113187] +   # gamma = 147.590867649463
                                     [0.014386,0.0117004,0.0125736,0.0134103,0.00944651,0.0168926,0.0111436,0.0133592,0.0118907,0.0136748,0.0114178,0.0132742,0.0121526,0.0116112,0.0139991,0.00882739,0.0104319,0.0138365,0.0119353,0.0138064] +        # gamma = 295.181735298926
                                     [0.0122937,0.00909391,0.00899696,0.0129651,0.0123945,0.0112226,0.0101734,0.0109399,0.0152365,0.0116233,0.0136234,0.0163988,0.0124884,0.0113793,0.0107714,0.0176632,0.00951865,0.0164488,0.0117895,0.0126527]        # gamma = infinity
                ).astype(float))}
g_fastme_bl_f84 = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.0119388,0.0104229,0.0132687,0.0181933,0.0150951,0.0131634,0.0149016,0.0138538,0.0122114,0.011822,0.0191404,0.0122788,0.0187777,0.0171114,0.0183546,0.0145639,0.0133577,0.0157823,0.0201814,0.0207561] +    # gamma = 2.95181735298926
                                     [0.0150738,0.0156118,0.0162967,0.0161301,0.0148831,0.0230021,0.0139825,0.0168146,0.0138366,0.0139001,0.0148331,0.0106448,0.0127637,0.0114645,0.0162751,0.0128604,0.0130851,0.0173196,0.0143304,0.0138054] +  # gamma = 5.90363470597852
                                     [0.0143685,0.0162377,0.0167976,0.0151501,0.0148318,0.0186507,0.0110592,0.0189016,0.0224232,0.0133187,0.0123032,0.0142948,0.0161528,0.0113471,0.0174883,0.0139854,0.013216,0.0159902,0.0167991,0.0153694] +    # gamma = 29.518173529892621
                                     [0.016656,0.0129063,0.0152738,0.0162549,0.0161767,0.0122043,0.0130771,0.0145598,0.00956292,0.0131819,0.0135757,0.0140188,0.0164116,0.0102562,0.0159844,0.0113809,0.0148742,0.0142928,0.0106021,0.013754] +   # gamma = 147.590867649463
                                     [0.017006,0.0139075,0.0149663,0.0153577,0.0114098,0.020242,0.0133198,0.0155662,0.0140888,0.0163074,0.013677,0.0155415,0.0147364,0.013932,0.0163227,0.0115237,0.0129319,0.0163697,0.0146339,0.0159639] +        # gamma = 295.181735298926
                                     [0.0148536,0.011298,0.0108427,0.0146619,0.0149987,0.0128598,0.0122232,0.0129959,0.0176115,0.0138534,0.0162082,0.0186684,0.0150755,0.0136536,0.0126876,0.0210399,0.0114541,0.0188026,0.0141398,0.0154359]        # gamma = infinity
                ).astype(float))}
g_fastme_bl_f84_bootlier_log = {'gammarate':np.array([2.952]*20+[5.904]*20+[29.518]*20+[147.591]*20+[295.182]*20+[float('inf')]*20),
                 'cherries':np.log10(np.array([0.00559831,0.00456873,0.00558805,0.00884671,0.00704158,0.00620422,0.00521341,0.00681691,0.00470836,0.00587218,0.00864176,0.00691832,0.00796316,0.00946477,0.00902331,0.00748267,0.00547795,0.00794232,0.00967675,0.0111826] +    # gamma = 2.95181735298926
                                     [0.00729708,0.00796062,0.00884731,0.0100082,0.00889704,0.0131761,0.0079136,0.00976475,0.00807738,0.00683947,0.0076803,0.00525932,0.00748455,0.00703824,0.00976087,0.00892102,0.00631007,0.00944701,0.00884162,0.00712863] +  # gamma = 5.90363470597852
                                     [0.00866107,0.00942393,0.00966997,0.00964417,0.00914312,0.011375,0.00553541,0.011636,0.0138578,0.00757752,0.00675555,0.00742165,0.00828122,0.00531442,0.00896275,0.00737442,0.00694002,0.00911732,0.00981926,0.0088206] +    # gamma = 29.518173529892621
                                     [0.00917724,0.0074862,0.0100408,0.00856454,0.00936398,0.00705391,0.00779677,0.00695601,0.00555003,0.00667951,0.00661339,0.00855547,0.0102926,0.00677248,0.00843717,0.00640267,0.00895742,0.00784566,0.00591604,0.00868219] +   # gamma = 147.590867649463
                                     [0.00960383,0.00906584,0.00847248,0.00793131,0.00682634,0.0122032,0.0079172,0.00922998,0.00831814,0.00916533,0.00816877,0.00957897,0.0090734,0.00860762,0.0100798,0.00685109,0.00678218,0.00883592,0.00720755,0.00997188] +        # gamma = 295.181735298926
                                     [0.00864807,0.00538281,0.00642492,0.00758878,0.010481,0.00708935,0.00711153,0.00714225,0.0114501,0.00843324,0.00976885,0.0121485,0.00750576,0.0074987,0.00734012,0.0101079,0.00697802,0.00972331,0.00857094,0.00894273]        # gamma = infinity
                ).astype(float))}

# modifying n
n_fasttree_bl = {'n':np.array([250]*20+[500]*20+[1000]*20+[2000]*20+[4000]*20),
                 'cherries':np.log10(np.array([0.0197973682110591,0.0122794544703435,0.018135179746477,0.00986024872314182,0.016123373007064,0.012639197328898,0.0093004856758661,0.0111153702323517,0.0101297916016793,0.0130332715396194,0.020008229066072,0.0161309396905354,0.0171538125297368,0.0298474056767112,0.0141707010293789,0.0145010334867245,0.00965904508763861,0.014880771168957,0.0397718507636147,0.014842166267801] +    # n = 250
                                     [0.0166646828099873,0.0129803872329136,0.0136157037247994,0.0237901610213837,0.0110036296391139,0.0124538991503112,0.016224758880918,0.013464033849989,0.0184867585190751,0.0125171873051281,0.0141392792456091,0.00917473172124956,0.0146074863711463,0.0142803130551311,0.0144693780088076,0.0146419578866753,0.0176765983302092,0.0101739734287494,0.0202148463851139,0.00915807871440728] +  # n = 500
                                     [0.0122579147016219,0.0140103720789248,0.0147327035321989,0.0129625491965346,0.0127696805376608,0.0166013558138427,0.00966062419265511,0.0170135675784675,0.0205515493185226,0.0116561323976978,0.0104276210944678,0.0129336999874745,0.0144581019807331,0.00953682843476021,0.0153007440503213,0.0119300082256181,0.0111576599980945,0.0136172999063802,0.0151836133411528,0.0130099110208658] +    # n = 1000
                                     [0.0124105240438946,0.0119446116720129,0.0132859162519779,0.0135338351669975,0.011781083363752,0.0104937682997014,0.0150600797642897,0.0129157464249041,0.0188463830840797,0.0131102867216519,0.0110527442607616,0.0113475042864084,0.0138096819595874,0.0112530366634512,0.015447699697693,0.0120617108333435,0.00955404109991661,0.0142599381482401,0.0131524761619281,0.0180928313673267] +   # n = 2000
                                     [0.0137758253666541,0.0121571381466059,0.0135457291538703,0.0131313027546311,0.0132184488762502,0.0120673045892059,0.0133645937497721,0.0123862099696922,0.0145972198070896,0.0119118241976842,0.0147075184735558,0.0161307038869184,0.0121304246352676,0.0144306855149792,0.0135545705684826,0.0126574422487483,0.0148028940425931,0.0154711730316756,0.0149429571958576,0.0131381856190497]        # n = 4000
                ).astype(float))}
n_raxml_bl = {'n':np.array([250]*20+[500]*20+[1000]*20+[2000]*20+[4000]*20),
                 'cherries':np.log10(np.array([0.0200310271440538,0.0113187215433581,0.0158882510665668,0.0092022137241614,0.0150286296385417,0.0116135003841824,0.00924057672696924,0.0110124436229106,0.009847812152829,0.0131580271920457,0.019780052584658,0.0156741731663439,0.0157639327196692,0.0281595355644211,0.0134685125376008,0.0144068685177803,0.00943748950315644,0.0144357741728012,0.0398114828556822,0.0124303212624557] +    # n = 250
                                     [0.0163974310918051,0.0120062799536374,0.0127573683182669,0.0227579647716562,0.0106864415744574,0.0118779546485216,0.0159481924969736,0.0133704657375816,0.0169486082871304,0.0118621755372802,0.0132855475568465,0.0089763242110216,0.0139704807791852,0.0138526955190169,0.0133820302906149,0.0131127289041883,0.0170559624771676,0.00961937786082379,0.0200579911537235,0.00876507149013026] +  # n = 500
                                     [0.0116795977659254,0.012832669983785,0.0145351725846893,0.0123368327278828,0.0118992558449749,0.0158730875691259,0.00913205415625011,0.0160686329330372,0.0194957264695963,0.011045804008226,0.00967890687641233,0.0120826533539407,0.0132024119181044,0.00912984013629388,0.0146636208142731,0.0115625041123262,0.010740599099085,0.0133031463973541,0.0145989991093193,0.0121914339574952] +    # n = 1000
                                     [0.0118200295537734,0.0113773172884364,0.01300475884468,0.0131796415638609,0.011014870024938,0.0101340095653411,0.0141675296856298,0.0122865188449237,0.0179009378596262,0.0123142801117646,0.0105359462222185,0.0109875212706925,0.0131814426236468,0.0105615428347608,0.0148783580741809,0.0115433608903395,0.00904694361519916,0.0137387101432555,0.0124991031657156,0.0173270351020304] +   # n = 2000
                                     [0.0130500312835607,0.0116756358215603,0.012962856737449,0.0127949347457197,0.0127106933396624,0.0115322562707222,0.0128885461077385,0.0118681636899749,0.014098482713256,0.011301175913231,0.0139257703790647,0.0153433123024074,0.011727416898757,0.013846985736737,0.0130411544893496,0.0121364398677197,0.013983894710098,0.0148495584919366,0.0142699666697717,0.0124304608670564]        # n = 4000
                ).astype(float))}
n_fasttree_bl_bootlier_log = {'n':np.array([250]*20+[500]*20+[1000]*20+[2000]*20+[4000]*20),
                 'cherries':np.log10(np.array([0.0177771602530828,0.00738486100928881,0.0120336235911185,0.00344040762280144,0.00884208397536506,0.00607048571713845,0.00583858127796094,0.00870629035324879,0.00670398634214302,0.00872814469073533,0.0156428244179541,0.0117267616015382,0.0142665889332565,0.0220932884084236,0.0130738385836893,0.0116085649642504,0.00656219839150063,0.00847285255797764,0.0301690637837841,0.00742841045188618] +    # n = 250
                                     [0.01233041913835,0.00764584506812241,0.00795775618141284,0.0195133190464684,0.00950638919640995,0.00850096700221852,0.0126154192371868,0.00862371071102303,0.014010790594315,0.00729643263529264,0.0102652789009281,0.00637850388356155,0.0106467546647393,0.0117065388144035,0.00870751475493537,0.00897487920426556,0.0123294027586979,0.00695635699102536,0.0154424321101732,0.00794401897766137] +  # n = 500
                                     [0.00886929337851626,0.00960093876150553,0.00993662319215833,0.0094475171151019,0.0102535526235386,0.0118832878551004,0.00595552936752816,0.0120525274967763,0.0148789368499009,0.00832096667553841,0.00733110161345066,0.00849477150700401,0.00918818672630134,0.00560625801525425,0.00915525081737898,0.00821810454538958,0.00766799069963375,0.0103390315126412,0.0103675263775034,0.00921321426995921] +    # n = 1000
                                     [0.00879584873848732,0.00742640498871362,0.00991481031482853,0.00921830574550283,0.00864638127901142,0.00708700568845576,0.010127391307554,0.00887186700997119,0.0127863746034634,0.00836015830932122,0.00732227534889138,0.00813146631325056,0.00851409755362111,0.00756346808618565,0.00994969810009706,0.00826257134918357,0.00679723383499818,0.00971460262985576,0.00825936220634417,0.0128657267507577] +   # n = 2000
                                     [0.00906598794552003,0.0084624474794495,0.00980207281393234,0.00902027458604801,0.00968847429965133,0.00832862845936292,0.00975703997612153,0.00858034164549749,0.0101433869931747,0.00809555463602219,0.0100715268114857,0.0113616429150671,0.00840986035394895,0.00993776113289754,0.0098927384295059,0.00858114539288867,0.0100549161960652,0.0110653341556488,0.010365362981422,0.00901203398493602]        # n = 4000
                ).astype(float))}
n_fasttree_bl_bootlier_log_below_p25 = {'n':np.array([250]*20+[500]*20+[1000]*20+[2000]*20+[4000]*20),
                 'cherries':np.log10(np.array([0.0194918856113431,0.00985742661183296,0.0148414068862915,0.00647708845025442,0.0126080841456718,0.00965575521898565,0.00756766640679921,0.0110516284511498,0.00886859368292738,0.0126581708600931,0.0178862898239183,0.0159780864150984,0.0162818115435523,0.0256619781935136,0.0125516961131231,0.0136502753306913,0.00918990636076854,0.0109923243556947,0.0368263017539145,0.0105374157369862] +    # n = 250
                                     [0.0150887036798978,0.0103766798561648,0.0106951663736875,0.0225336662734879,0.0116543716562373,0.0106531876169282,0.0152710523861527,0.0112828229620101,0.0168986830196098,0.00995021293106239,0.012949861352529,0.00841001170492426,0.0132737436159445,0.0132174371811844,0.0116046792164262,0.0119112129797541,0.0153200735439162,0.00879513772194916,0.0184982153416951,0.00948382200007834] +  # n = 500
                                     [0.0109411362589563,0.0122210959152804,0.0127495077999191,0.0118126941418024,0.0120982604396224,0.0148630346260774,0.00806179685631451,0.0150462794495196,0.0184558558037266,0.0101156758639867,0.00927429183260088,0.010896868446732,0.011900471121662,0.00772810717489272,0.0121801691659605,0.0104285088229077,0.00992154488101325,0.0123706053827596,0.0132201727299901,0.0114997925143836] +    # n = 1000
                                     [0.011120674407743,0.0097823158742657,0.0122124315228528,0.011855503574654,0.0106099376471186,0.00921380358868931,0.0127830231092839,0.0112894216999263,0.0160662879133033,0.0109410530314806,0.00957962035151546,0.0102190506089809,0.011159900389745,0.00978674152604149,0.0129569673881927,0.0105592002128016,0.00872537408315828,0.0124033636003333,0.0108606653384677,0.0158114197542613] +   # n = 2000
                                     [0.0116100398270873,0.0108121802186447,0.0120500586739583,0.0115375721103552,0.0118412312761309,0.0105853849444848,0.0120588625134622,0.0110043814609413,0.0127126221551273,0.0103206356749675,0.012755281559638,0.0142392932302054,0.0106428429882056,0.0124735663985722,0.0121293536544271,0.01107554170146,0.012764107782854,0.0137561242994451,0.0129752854333611,0.0113862333809938]        # n = 4000
                ).astype(float))}
n_raxml_bl_bootlier_log = {'n':np.array([250]*20+[500]*20+[1000]*20+[2000]*20+[4000]*20),
                 'cherries':np.log10(np.array([0.0211492081057476,0.0121172245968446,0.016627846242969,0.010145967213826,0.0164645055434985,0.0130903453587471,0.00974558755157318,0.0122289496660079,0.0108352704594138,0.0146662448676434,0.0209328443909944,0.0167406371540574,0.0166959675299222,0.0290257368939645,0.0146048634440627,0.0154960382891163,0.0104754974304917,0.0150794660883484,0.0431262079782091,0.0129588719797242] +    # n = 250
                                     [0.0176210704883943,0.0128115010631073,0.0133850777318186,0.0242627213049131,0.0122962620607796,0.0125631174240031,0.0173587857761747,0.0142787937517652,0.0180338626113681,0.0126291068584168,0.0145834288100274,0.00998806097373938,0.0151994866046322,0.0153937405666959,0.0141038562693,0.0140156462856472,0.0181113348001095,0.0103032964919205,0.021337535768571,0.00986312194450057] +  # n = 500
                                     [0.012474524910397,0.0138643789978264,0.0155909386361046,0.0133845148412446,0.0127559058241194,0.0170933663831885,0.00986133815200163,0.0171769327005058,0.0209616996080625,0.0116025050835299,0.010463180628923,0.0127644078744414,0.0139558198959501,0.00980102746667907,0.0153529995548062,0.0123766330294805,0.0117540324806324,0.0140743361173709,0.0156423228471733,0.0130122343766033] +    # n = 1000
                                     [0.012785969201004,0.0120296012422869,0.0140324623650022,0.0141739692837677,0.0117797898466525,0.0109896259626316,0.0149116205012698,0.013150668962144,0.0188070473169445,0.0131087257609663,0.0113820820077087,0.0118593915632135,0.0138037720568867,0.0113863626872791,0.0158268996089627,0.0123955348818933,0.00994228992797259,0.0147031406675059,0.0132545443930685,0.0182735167861139] +   # n = 2000
                                     [0.0137868068716446,0.0126106145756364,0.0137621639846319,0.01373896029069,0.0135507841351376,0.0123704113961447,0.0137953237313106,0.01282816334886,0.0149574513518865,0.0120436878105232,0.0148105574887808,0.0163765764016265,0.0125502086908054,0.0146502969899583,0.0138511315804759,0.0130683836654238,0.014886692358556,0.01584214486251,0.0151132926863515,0.0132258013813045]        # n = 4000
                ).astype(float))}

# plot Estimated $\log_{10}{r}$ vs. r (with different lambda = lambdaA+lambdaB to keep expected branch length constant)
fig = plt.figure()
x = np.array([-4,-3,-2,-1,0])
ax = sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r_fasttree_bl),order=x,color=pal['fasttree_bl'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r_fasttree_bl['r'][i:i+20])/20.0 for i in range(0,len(r_fasttree_bl['cherries']),20)])+4,[sum(r_fasttree_bl['cherries'][i:i+20])/20.0 for i in range(0,len(r_fasttree_bl['cherries']),20)],color=pal['fasttree_bl'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r_fasttree_bl_bootlier_log),order=x,color=pal['fasttree_bl_bootlier_log'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r_fasttree_bl_bootlier_log['r'][i:i+20])/20.0 for i in range(0,len(r_fasttree_bl_bootlier_log['cherries']),20)])+4,[sum(r_fasttree_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(r_fasttree_bl_bootlier_log['cherries']),20)],color=pal['fasttree_bl_bootlier_log'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r_fasttree_bl_bootlier_log_below_p25),order=x,color=pal['fasttree_bl_bootlier_log_below_p25'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r_fasttree_bl_bootlier_log_below_p25['r'][i:i+20])/20.0 for i in range(0,len(r_fasttree_bl_bootlier_log_below_p25['cherries']),20)])+4,[sum(r_fasttree_bl_bootlier_log_below_p25['cherries'][i:i+20])/20.0 for i in range(0,len(r_fasttree_bl_bootlier_log_below_p25['cherries']),20)],color=pal['fasttree_bl_bootlier_log_below_p25'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r_raxml_bl),order=x,color=pal['raxml_bl'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r_raxml_bl['r'][i:i+20])/20.0 for i in range(0,len(r_raxml_bl['cherries']),20)])+4,[sum(r_raxml_bl['cherries'][i:i+20])/20.0 for i in range(0,len(r_raxml_bl['cherries']),20)],color=pal['raxml_bl'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r_raxml_bl_bootlier_log),order=x,color=pal['raxml_bl_bootlier_log'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r_raxml_bl_bootlier_log['r'][i:i+20])/20.0 for i in range(0,len(r_raxml_bl_bootlier_log['cherries']),20)])+4,[sum(r_raxml_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(r_raxml_bl_bootlier_log['cherries']),20)],color=pal['raxml_bl_bootlier_log'],linestyle=':',linewidth=3)
setAlpha(ax,0.5)
plt.plot([-1,0,1,2,3,4,5],[-5,-4,-3,-2,-1,0,1],label='Theoretical',linestyle='--',color=pal['theoretical'])
plt.yticks(axisY); plt.ylim(axisY[0],axisY[-1])
legend = plt.legend(handles=handles,bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., frameon=True)
sns.plt.xlabel(r'$\log_{10}{r} = \log_{10}{\left(\frac{\lambda_A}{\lambda_B}\right)}\ \left(E(l_b)=0.298\right)$',fontsize=14)
sns.plt.ylabel(r'Estimated $\log_{10}{r}$',fontsize=14)
sns.plt.title(r'Estimated $\log_{10}{r}$ vs. $\log_{10}{r}\ \left(E(l_b)=0.298\right)$',fontsize=18,y=1.05)
sns.plt.show()
fig.savefig('estimated-r_vs_r_const-exp-branch-length_with-corrections.pdf', format='pdf', bbox_extra_artists=(legend,), bbox_inches='tight')
plt.close()

# plot Estimated $\log_{10}{r}$ vs. r (with constant lambda = lambdaA + lambdaB)
fig = plt.figure()
x = np.array([-4,-3,-2,-1,0])
ax = sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r2_fasttree_bl),order=x,color=pal['fasttree_bl'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r2_fasttree_bl['r'][i:i+20])/20.0 for i in range(0,len(r2_fasttree_bl['cherries']),20)])+4,[sum(r2_fasttree_bl['cherries'][i:i+20])/20.0 for i in range(0,len(r2_fasttree_bl['cherries']),20)],color=pal['fasttree_bl'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r2_fasttree_bl_bootlier_log),order=x,color=pal['fasttree_bl_bootlier_log'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r2_fasttree_bl_bootlier_log['r'][i:i+20])/20.0 for i in range(0,len(r2_fasttree_bl_bootlier_log['cherries']),20)])+4,[sum(r2_fasttree_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(r2_fasttree_bl_bootlier_log['cherries']),20)],color=pal['fasttree_bl_bootlier_log'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r2_fasttree_bl_bootlier_log_below_p25),order=x,color=pal['fasttree_bl_bootlier_log_below_p25'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r2_fasttree_bl_bootlier_log_below_p25['r'][i:i+20])/20.0 for i in range(0,len(r2_fasttree_bl_bootlier_log_below_p25['cherries']),20)])+4,[sum(r2_fasttree_bl_bootlier_log_below_p25['cherries'][i:i+20])/20.0 for i in range(0,len(r2_fasttree_bl_bootlier_log_below_p25['cherries']),20)],color=pal['fasttree_bl_bootlier_log_below_p25'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r2_raxml_bl),order=x,color=pal['raxml_bl'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r2_raxml_bl['r'][i:i+20])/20.0 for i in range(0,len(r2_raxml_bl['cherries']),20)])+4,[sum(r2_raxml_bl['cherries'][i:i+20])/20.0 for i in range(0,len(r2_raxml_bl['cherries']),20)],color=pal['raxml_bl'],linestyle=':',linewidth=3)
sns.violinplot(x='r',y='cherries',data=pd.DataFrame(r2_raxml_bl_bootlier_log),order=x,color=pal['raxml_bl_bootlier_log'],scale='width',width=0.3)
plt.plot(np.asarray([sum(r2_raxml_bl_bootlier_log['r'][i:i+20])/20.0 for i in range(0,len(r2_raxml_bl_bootlier_log['cherries']),20)])+4,[sum(r2_raxml_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(r2_raxml_bl_bootlier_log['cherries']),20)],color=pal['raxml_bl_bootlier_log'],linestyle=':',linewidth=3)
setAlpha(ax,0.5)
x = np.linspace(-4,0,100)
plt.plot([-1,0,1,2,3,4,5],[-5,-4,-3,-2,-1,0,1],label='Theoretical',linestyle='--',color=pal['theoretical'])
plt.yticks(axisY); plt.ylim(axisY[0],axisY[-1])
legend = plt.legend(handles=handles,bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., frameon=True)
sns.plt.xlabel(r'$\log_{10}{r} = \log_{10}{\left(\frac{\lambda_A}{\lambda_B}\right)}\ \left(\lambda = \lambda_A + \lambda_B = 169\right)$',fontsize=14)
sns.plt.ylabel(r'Estimated $\log_{10}{r}$',fontsize=14)
sns.plt.title(r'Estimated $\log_{10}{r}$ vs. $\log_{10}{r}\ \left(\lambda=\lambda_A+\lambda_B=169\right)$',fontsize=18,y=1.05)
sns.plt.show()
fig.savefig('estimated-r_vs_r_const-lambda_with-corrections.pdf', format='pdf', bbox_extra_artists=(legend,), bbox_inches='tight')
plt.close()

# plot Estimated $\log_{10}{r}$ vs. lambda
fig = plt.figure()
x = np.array([33.866,84.664,169.328,338.655,846.638])
ax = sns.violinplot(x='lambda',y='cherries',data=pd.DataFrame(l_fasttree_bl),order=x,color=pal['fasttree_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(l_fasttree_bl['lambda'][i:i+20])/20.0 for i in range(0,len(l_fasttree_bl['cherries']),20)]),[sum(l_fasttree_bl['cherries'][i:i+20])/20.0 for i in range(0,len(l_fasttree_bl['cherries']),20)],color=pal['fasttree_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='lambda',y='cherries',data=pd.DataFrame(l_fasttree_bl_bootlier_log),order=x,color=pal['fasttree_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(l_fasttree_bl_bootlier_log['lambda'][i:i+20])/20.0 for i in range(0,len(l_fasttree_bl_bootlier_log['cherries']),20)]),[sum(l_fasttree_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(l_fasttree_bl_bootlier_log['cherries']),20)],color=pal['fasttree_bl_bootlier_log'],linestyles=[':'],linewidth=3)
sns.violinplot(x='lambda',y='cherries',data=pd.DataFrame(l_fasttree_bl_bootlier_log_below_p25),order=x,color=pal['fasttree_bl_bootlier_log_below_p25'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(l_fasttree_bl_bootlier_log_below_p25['lambda'][i:i+20])/20.0 for i in range(0,len(l_fasttree_bl_bootlier_log_below_p25['cherries']),20)]),[sum(l_fasttree_bl_bootlier_log_below_p25['cherries'][i:i+20])/20.0 for i in range(0,len(l_fasttree_bl_bootlier_log_below_p25['cherries']),20)],color=pal['fasttree_bl_bootlier_log_below_p25'],linestyles=[':'],linewidth=3)
sns.violinplot(x='lambda',y='cherries',data=pd.DataFrame(l_raxml_bl),order=x,color=pal['raxml_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(l_raxml_bl['lambda'][i:i+20])/20.0 for i in range(0,len(l_raxml_bl['cherries']),20)]),[sum(l_raxml_bl['cherries'][i:i+20])/20.0 for i in range(0,len(l_raxml_bl['cherries']),20)],color=pal['raxml_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='lambda',y='cherries',data=pd.DataFrame(l_raxml_bl_bootlier_log),order=x,color=pal['raxml_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(l_raxml_bl_bootlier_log['lambda'][i:i+20])/20.0 for i in range(0,len(l_raxml_bl_bootlier_log['cherries']),20)]),[sum(l_raxml_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(l_raxml_bl_bootlier_log['cherries']),20)],color=pal['raxml_bl_bootlier_log'],linestyles=[':'],linewidth=3)
setAlpha(ax,0.5)
x = np.linspace(-100,1000,1100)
plt.plot([-10,10],[-2,-2],label='Theoretical',linestyle='--',color=pal['theoretical'])
plt.yticks(axisY); plt.ylim(axisY[0],axisY[-1])
legend = plt.legend(handles=handles,bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., frameon=True)
sns.plt.xlabel(r'$\lambda = \lambda_A + \lambda_B$',fontsize=14)
sns.plt.ylabel(r'Estimated $\log_{10}{r}$',fontsize=14)
sns.plt.title(r'Estimated $\log_{10}{r}$ vs. $\lambda$',fontsize=18,y=1.05)
sns.plt.show()
fig.savefig('estimated-r_vs_lambda_with-corrections.pdf', format='pdf', bbox_extra_artists=(legend,), bbox_inches='tight')
plt.close()

# plot Estimated $\log_{10}{r}$ vs. length
fig = plt.figure()
x = np.array([50,100,200,300,600,1200,2400,4800])
ax = sns.violinplot(x='length',y='cherries',data=pd.DataFrame(k_fasttree_bl),order=x,color=pal['fasttree_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(k_fasttree_bl['length'][i:i+20])/20 for i in range(0,len(k_fasttree_bl['cherries']),20)]),[sum(k_fasttree_bl['cherries'][i:i+20])/20.0 for i in range(0,len(k_fasttree_bl['cherries']),20)],color=pal['fasttree_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='length',y='cherries',data=pd.DataFrame(k_fasttree_bl_bootlier_log),order=x,color=pal['fasttree_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(k_fasttree_bl_bootlier_log['length'][i:i+20])/20 for i in range(0,len(k_fasttree_bl_bootlier_log['cherries']),20)]),[sum(k_fasttree_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(k_fasttree_bl_bootlier_log['cherries']),20)],color=pal['fasttree_bl_bootlier_log'],linestyles=[':'],linewidth=3)
sns.violinplot(x='length',y='cherries',data=pd.DataFrame(k_fasttree_bl_bootlier_log_below_p25),order=x,color=pal['fasttree_bl_bootlier_log_below_p25'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(k_fasttree_bl_bootlier_log_below_p25['length'][i:i+20])/20 for i in range(0,len(k_fasttree_bl_bootlier_log_below_p25['cherries']),20)]),[sum(k_fasttree_bl_bootlier_log_below_p25['cherries'][i:i+20])/20.0 for i in range(0,len(k_fasttree_bl_bootlier_log_below_p25['cherries']),20)],color=pal['fasttree_bl_bootlier_log_below_p25'],linestyles=[':'],linewidth=3)
sns.violinplot(x='length',y='cherries',data=pd.DataFrame(k_raxml_bl),order=x,color=pal['raxml_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(k_raxml_bl['length'][i:i+20])/20 for i in range(0,len(k_raxml_bl['cherries']),20)]),[sum(k_raxml_bl['cherries'][i:i+20])/20.0 for i in range(0,len(k_raxml_bl['cherries']),20)],color=pal['raxml_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='length',y='cherries',data=pd.DataFrame(k_raxml_bl_bootlier_log),order=x,color=pal['raxml_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(k_raxml_bl_bootlier_log['length'][i:i+20])/20 for i in range(0,len(k_raxml_bl_bootlier_log['cherries']),20)]),[sum(k_raxml_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(k_raxml_bl_bootlier_log['cherries']),20)],color=pal['raxml_bl_bootlier_log'],linestyles=[':'],linewidth=3)
setAlpha(ax,0.5)
plt.plot([-10,10],[-2,-2],label='Theoretical',linestyle='--',color=pal['theoretical'])
plt.yticks(axisY); plt.ylim(axisY[0],axisY[-1])
legend = plt.legend(handles=handles,bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., frameon=True)
sns.plt.xlabel('Sequence Length',fontsize=14)
sns.plt.ylabel(r'Estimated $\log_{10}{r}$',fontsize=14)
sns.plt.title('Estimated $\log_{10}{r}$ vs. Sequence Length',fontsize=18,y=1.05)
sns.plt.show()
fig.savefig('estimated-r_vs_length_with-corrections.pdf', format='pdf', bbox_extra_artists=(legend,), bbox_inches='tight')
plt.close()

# plot Estimated $\log_{10}{r}$ vs. gamma rate
fig = plt.figure()
x = np.array([2.952,5.904,29.518,147.591,295.182,float('inf')])
ax = sns.violinplot(x='gammarate',y='cherries',data=pd.DataFrame(g_fasttree_bl),order=x,color=pal['fasttree_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(g_fasttree_bl['gammarate'][i:i+20])/20.0 for i in range(0,len(g_fasttree_bl['cherries']),20)]),[sum(g_fasttree_bl['cherries'][i:i+20])/20.0 for i in range(0,len(g_fasttree_bl['cherries']),20)],color=pal['fasttree_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='gammarate',y='cherries',data=pd.DataFrame(g_fasttree_bl_bootlier_log),order=x,color=pal['fasttree_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(g_fasttree_bl_bootlier_log['gammarate'][i:i+20])/20.0 for i in range(0,len(g_fasttree_bl_bootlier_log['cherries']),20)]),[sum(g_fasttree_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(g_fasttree_bl_bootlier_log['cherries']),20)],color=pal['fasttree_bl_bootlier_log'],linestyles=[':'],linewidth=3)
sns.violinplot(x='gammarate',y='cherries',data=pd.DataFrame(g_fasttree_bl_bootlier_log_below_p25),order=x,color=pal['fasttree_bl_bootlier_log_below_p25'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(g_fasttree_bl_bootlier_log_below_p25['gammarate'][i:i+20])/20.0 for i in range(0,len(g_fasttree_bl_bootlier_log_below_p25['cherries']),20)]),[sum(g_fasttree_bl_bootlier_log_below_p25['cherries'][i:i+20])/20.0 for i in range(0,len(g_fasttree_bl_bootlier_log_below_p25['cherries']),20)],color=pal['fasttree_bl_bootlier_log_below_p25'],linestyles=[':'],linewidth=3)
sns.violinplot(x='gammarate',y='cherries',data=pd.DataFrame(g_raxml_bl),order=x,color=pal['raxml_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(g_raxml_bl['gammarate'][i:i+20])/20.0 for i in range(0,len(g_raxml_bl['cherries']),20)]),[sum(g_raxml_bl['cherries'][i:i+20])/20.0 for i in range(0,len(g_raxml_bl['cherries']),20)],color=pal['raxml_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='gammarate',y='cherries',data=pd.DataFrame(g_raxml_bl_bootlier_log),order=x,color=pal['raxml_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(g_raxml_bl_bootlier_log['gammarate'][i:i+20])/20.0 for i in range(0,len(g_raxml_bl_bootlier_log['cherries']),20)]),[sum(g_raxml_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(g_raxml_bl_bootlier_log['cherries']),20)],color=pal['raxml_bl_bootlier_log'],linestyles=[':'],linewidth=3)
setAlpha(ax,0.5)
plt.plot([-10,10],[-2,-2],label='Theoretical',linestyle='--',color=pal['theoretical'])
plt.yticks(axisY); plt.ylim(axisY[0],axisY[-1])
legend = plt.legend(handles=handles,bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., frameon=True)
sns.plt.xlabel(r'Gamma Distribution Rate $\left(\alpha\right)$',fontsize=14)
sns.plt.ylabel(r'Estimated $\log_{10}{r}$',fontsize=14)
sns.plt.title('Estimated $\log_{10}{r}$ vs. Deviation from Ultrametricity',fontsize=18,y=1.05)
sns.plt.show()
fig.savefig('estimated-r_vs_gammarate_with-corrections.pdf', format='pdf', bbox_extra_artists=(legend,), bbox_inches='tight')
plt.close()

# plot Estimated $\log_{10}{r}$ vs. n
fig = plt.figure()
x = np.array([250,500,1000,2000,4000])
ax = sns.violinplot(x='n',y='cherries',data=pd.DataFrame(n_fasttree_bl),order=x,color=pal['fasttree_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(n_fasttree_bl['n'][i:i+20])/20.0 for i in range(0,len(n_fasttree_bl['cherries']),20)]),[sum(n_fasttree_bl['cherries'][i:i+20])/20.0 for i in range(0,len(n_fasttree_bl['cherries']),20)],color=pal['fasttree_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='n',y='cherries',data=pd.DataFrame(n_fasttree_bl_bootlier_log),order=x,color=pal['fasttree_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(n_fasttree_bl_bootlier_log['n'][i:i+20])/20.0 for i in range(0,len(n_fasttree_bl_bootlier_log['cherries']),20)]),[sum(n_fasttree_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(n_fasttree_bl_bootlier_log['cherries']),20)],color=pal['fasttree_bl_bootlier_log'],linestyles=[':'],linewidth=3)
sns.violinplot(x='n',y='cherries',data=pd.DataFrame(n_fasttree_bl_bootlier_log_below_p25),order=x,color=pal['fasttree_bl_bootlier_log_below_p25'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(n_fasttree_bl_bootlier_log_below_p25['n'][i:i+20])/20.0 for i in range(0,len(n_fasttree_bl_bootlier_log_below_p25['cherries']),20)]),[sum(n_fasttree_bl_bootlier_log_below_p25['cherries'][i:i+20])/20.0 for i in range(0,len(n_fasttree_bl_bootlier_log_below_p25['cherries']),20)],color=pal['fasttree_bl_bootlier_log_below_p25'],linestyles=[':'],linewidth=3)
sns.violinplot(x='n',y='cherries',data=pd.DataFrame(n_raxml_bl),order=x,color=pal['raxml_bl'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(n_raxml_bl['n'][i:i+20])/20.0 for i in range(0,len(n_raxml_bl['cherries']),20)]),[sum(n_raxml_bl['cherries'][i:i+20])/20.0 for i in range(0,len(n_raxml_bl['cherries']),20)],color=pal['raxml_bl'],linestyles=[':'],linewidth=3)
sns.violinplot(x='n',y='cherries',data=pd.DataFrame(n_raxml_bl_bootlier_log),order=x,color=pal['raxml_bl_bootlier_log'],scale='width',width=0.3)
sns.pointplot(np.asarray([sum(n_raxml_bl_bootlier_log['n'][i:i+20])/20.0 for i in range(0,len(n_raxml_bl_bootlier_log['cherries']),20)]),[sum(n_raxml_bl_bootlier_log['cherries'][i:i+20])/20.0 for i in range(0,len(n_raxml_bl_bootlier_log['cherries']),20)],color=pal['raxml_bl_bootlier_log'],linestyles=[':'],linewidth=3)
setAlpha(ax,0.5)
plt.plot([-10,10],[-2,-2],label='Theoretical',linestyle='--',color=pal['theoretical'])
plt.yticks(axisY); plt.ylim(axisY[0],axisY[-1])
legend = plt.legend(handles=handles,bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., frameon=True)
sns.plt.xlabel(r'$n$',fontsize=14)
sns.plt.ylabel(r'Estimated $\log_{10}{r}$',fontsize=14)
sns.plt.title('Estimated $\log_{10}{r}$ vs. $n$',fontsize=18,y=1.05)
sns.plt.show()
fig.savefig('estimated-r_vs_n_with-corrections.pdf', format='pdf', bbox_extra_artists=(legend,), bbox_inches='tight')
plt.close()